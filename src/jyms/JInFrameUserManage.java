package jyms;
import java.awt.HeadlessException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import jyms.data.TxtLogger;
import jyms.data.UserAuthoritysBean;
import jyms.data.UsersBean;
import jyms.tools.TableUtil.JTableCheckBoxModel;
import jyms.ui.PanelUI_MatteBorder;
import jyms.ui.ScrollBarUI_White;
import jyms.ui.ScrollPaneUI_White;
import jyms.ui.TableHeaderUI_White;
import jyms.ui.TableUI;
import jyms.ui.TableUI_White;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author John
 */
public class JInFrameUserManage extends javax.swing.JInternalFrame {

    private final String sFileName = this.getClass().getName() + ".java";
    DefaultTableModel usersTableModel;
    JTableCheckBoxModel  copyUsersTableModel;
    private ArrayList listUserPara;//获取用户名,类型代码,类型名称（代码表中的代码名称），密码,密码级别等用户信息
    private String sUserName = "";//存放当前系统的操作用户进入该界面的用户名
    /**
     * Creates new form JInternalFrameUserManage
     */
    public JInFrameUserManage() {
        initComponents();
        
        modifyLocales();
        
        usersTableModel = this.initialUsersTableModel();
        jTableUsers.setModel(usersTableModel);
        copyUsersTableModel = this.initialUsersRightCopyTableModel();
        jTableUsersCopy.setModel(copyUsersTableModel);
        
        jTableUsersCopy.getTableHeader().setUI(new TableHeaderUI_White());
        jTableUsersCopy.setUI(new TableUI_White());
        //jPanelCenter.setUI(new PanelUI_MatteBorder());
  
        
        jScrollPane1.setUI(new ScrollPaneUI_White());
        jScrollPane1.getVerticalScrollBar().setUI(new ScrollBarUI_White());
        jScrollPane1.getHorizontalScrollBar().setUI(new ScrollBarUI_White());
        jPanelContainer.setUI(new PanelUI_MatteBorder());
        CommonParas.setJButtonUnDecorated(jButtonExit2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogCopyRight = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabelCopyCommont = new javax.swing.JLabel();
        jPanelHeader = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit2 = new javax.swing.JButton();
        jPanelContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsersCopy = new javax.swing.JTable();
        jPanelUser = new javax.swing.JPanel();
        jButtonInsert = new javax.swing.JButton();
        jButtonModify = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelUserList = new javax.swing.JLabel();
        jButtonCopy = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jScrollPaneUser = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();

        jDialogCopyRight.setTitle("权限复制");
        jDialogCopyRight.setMinimumSize(new java.awt.Dimension(600, 544));
        jDialogCopyRight.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogCopyRight.setUndecorated(true);
        jDialogCopyRight.setResizable(false);
        jDialogCopyRight.setType(java.awt.Window.Type.POPUP);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jButtonOK.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/userqxfz2.png"))); // NOI18N
        jButtonOK.setText("复制");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel2.png"))); // NOI18N
        jButtonCancel.setText("取消");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabelCopyCommont.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelCopyCommont.setText("用户 的权限将复制给选中用户");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCopyCommont, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addComponent(jButtonOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabelCopyCommont)
                .addComponent(jButtonOK)
                .addComponent(jButtonCancel))
        );

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("复制权限");

        jButtonExit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExit2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeaderLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(jPanelHeader, java.awt.BorderLayout.PAGE_START);

        jDialogCopyRight.getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanelContainer.setLayout(new java.awt.BorderLayout());

        jTableUsersCopy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableUsersCopy);

        jPanelContainer.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jDialogCopyRight.getContentPane().add(jPanelContainer, java.awt.BorderLayout.CENTER);

        setBackground(new java.awt.Color(64, 64, 64));
        setForeground(java.awt.Color.white);
        setTitle("用户管理");
        setName(""); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanelUser.setBackground(new java.awt.Color(151, 151, 151));
        jPanelUser.setForeground(new java.awt.Color(255, 255, 255));

        jButtonInsert.setBackground(new java.awt.Color(64, 64, 64));
        jButtonInsert.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonInsert.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/useradd.png"))); // NOI18N
        jButtonInsert.setText("添加用户");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonModify.setBackground(new java.awt.Color(64, 64, 64));
        jButtonModify.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonModify.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/usermodify.png"))); // NOI18N
        jButtonModify.setText("修改资料");
        jButtonModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(64, 64, 64));
        jButtonDelete.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/userdel.png"))); // NOI18N
        jButtonDelete.setText("删除用户");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelUserList.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jLabelUserList.setForeground(new java.awt.Color(102, 0, 0));
        jLabelUserList.setText("用户列表");

        jButtonCopy.setBackground(new java.awt.Color(64, 64, 64));
        jButtonCopy.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCopy.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCopy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/userqxfz.png"))); // NOI18N
        jButtonCopy.setText("复制权限");
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(64, 64, 64));
        jButtonExit.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/exit.png"))); // NOI18N
        jButtonExit.setText("退 出");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelUserLayout = new javax.swing.GroupLayout(jPanelUser);
        jPanelUser.setLayout(jPanelUserLayout);
        jPanelUserLayout.setHorizontalGroup(
            jPanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addComponent(jButtonInsert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCopy)
                .addGap(18, 18, 18)
                .addComponent(jButtonExit))
        );
        jPanelUserLayout.setVerticalGroup(
            jPanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUserLayout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addGroup(jPanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonModify)
                    .addComponent(jButtonDelete)
                    .addComponent(jLabelUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCopy)
                    .addComponent(jButtonExit)))
        );

        getContentPane().add(jPanelUser, java.awt.BorderLayout.PAGE_START);

        jScrollPaneUser.setBackground(new java.awt.Color(64, 64, 64));
        jScrollPaneUser.setForeground(new java.awt.Color(255, 255, 255));

        jTableUsers.setBackground(new java.awt.Color(64, 64, 64));
        jTableUsers.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        jTableUsers.setForeground(new java.awt.Color(255, 255, 255));
        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsersMouseClicked(evt);
            }
        });
        jScrollPaneUser.setViewportView(jTableUsers);

        getContentPane().add(jScrollPaneUser, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        // TODO add your handling code here:
        if (CommonParas.g_listDeviceDetailPara == null || CommonParas.g_listDeviceDetailPara.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, sRegisterFirst );//"请先进行设备注册，然后再添加客户！"
            return;
        }
        ArrayList<String> ListUserNames = new ArrayList<>();//需要复制权限的用户名称列表
        ArrayList<String> listUserTypeCodes = new ArrayList<>();
        for (int i=0;i<usersTableModel.getRowCount();i++){
            ListUserNames.add((String)usersTableModel.getValueAt(i, 1));
            listUserTypeCodes.add((String)usersTableModel.getValueAt(i, 4));
        }
        if (ListUserNames.size()>0) {
            ListUserNames.remove(CommonParas.UserState.UserName);
            listUserTypeCodes.remove(CommonParas.UserState.UserTypeCode);
        }


        JDialogInsertUser jdialogInsertUser = new JDialogInsertUser(null,true,ListUserNames,listUserTypeCodes);
        CommonParas.centerWindow(jdialogInsertUser);
        jdialogInsertUser.setVisible(true);
        int iState = jdialogInsertUser.getState();
        if (iState == 1){
            fillIntoTableUsers();
            writeUserManageLog(sAddUser, sAddUser_Succ, sUser + jdialogInsertUser.getUserName());// "添加用户""添加用户成功""用户："
        }else if(iState == 0){
            writeUserManageErrorLog( sAddUser_Fail, sUser + jdialogInsertUser.getUserName());//"添加用户失败""用户："
        }
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyActionPerformed
        // TODO add your handling code here:
        int Row = jTableUsers.getSelectedRow();
        if (Row < 0 ) return;
        String UserName = (String) jTableUsers.getValueAt(Row, 1);
        ArrayList<String> ListUser = getListFromUserName(UserName);
        if (ListUser == null) return ;
        //        if (Integer.parseInt(CommonParameters.UserState.sUserType) > Integer.parseInt(ListUsers.get(Row))) {
            //ListUser包括用户名,类型代码,类型名称（代码表中的代码名称），密码,密码级别等用户信息
        JDialogModifyUser jdialogModifyUser = new JDialogModifyUser(null,true,ListUser);
        CommonParas.centerWindow(jdialogModifyUser);
        jdialogModifyUser.setVisible(true);
        int iState = jdialogModifyUser.getState();
        if (jdialogModifyUser.getState() == 1 ){
            fillIntoTableUsers();
            writeUserManageLog(sModifyUser, sModifyUser_Succ, sUser + UserName);// "修改用户资料""修改用户资料成功" "用户："
        }else if(iState == 0){
            writeUserManageErrorLog(sModifyUser_Fail,sUser + UserName);//"修改用户资料失败""用户："
        }

    }//GEN-LAST:event_jButtonModifyActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        /**
        * 1、if Operator == User，return
        * 2、if Operator > User，do
        */

        try{
            int Row = jTableUsers.getSelectedRow();
            if (Row < 0 ) return;

            String UserName = (String)jTableUsers.getValueAt(Row, 1);
            int UserTypeCpde = Integer.parseInt((String) jTableUsers.getValueAt(Row, 4));
            if (UserName.equals(CommonParas.UserState.UserName)) return ;//如果删除自己，返回
            if (Integer.parseInt(CommonParas.UserState.UserTypeCode) >= UserTypeCpde) return ;//如果操作用户的等级<=被操作用户的等级，返回

            if ((JOptionPane.showConfirmDialog(this, sRealToDelUser,
                sRemind,JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION)){ //"真的要删除此用户？" "提醒"
                return;
            }

            if (!UsersBean.deleteUser(UserName, sFileName)){
                writeUserManageErrorLog(sUser, sUser + UserName);// "删除用户失败" "用户："
            }else{
                fillIntoTableUsers();
                writeUserManageLog(sDelUser,  sDelUser_Succ, sUser  + UserName); //"删除用户""删除用户成功""用户："
            }
        }catch(NumberFormatException | HeadlessException e){
            TxtLogger.append(this.sFileName, "jButtonDeleteActionPerformed()","系统在删除用户过程中，出现错误" +
                "\r\n                       Exception:" + e.toString());
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        /**
         * 先发生WindowActivated事件，再发生WindowOpened事件
         * 第一次运行不运行的具体程序，则会运行WindowOpened事件程序。而WindowOpened事件程序只运行1次。
         * 而WindowActivated事件则可能要发生很多次
         */
//        fillIntoTableUsers();
//        sUserName = CommonParas.UserState.UserName;//给本窗口的sUserName,以便监测是否发生用户切换的情况(比如换班)
        if (!CommonParas.UserState.UserName.equals(sUserName)){
            fillIntoTableUsers();
            refreshButtonsState();
            sUserName = CommonParas.UserState.UserName;//给本窗口的sUserName,以便监测是否发生用户切换的情况(比如换班)
        }
        setTableColWidth();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        // TODO add your handling code here:
        int Row = jTableUsers.getSelectedRow();
        if (Row < 0 || Row > jTableUsers.getRowCount()) return;
        copyUsersTableModel.removeAll();
        //if (v != null) v.clear();

        String UserType = (String)usersTableModel.getValueAt(Row, 4);
        String UserName = (String)usersTableModel.getValueAt(Row, 1);
        for (int i=0;i<usersTableModel.getRowCount();i++){
            String UserType2 = (String)usersTableModel.getValueAt(i, 4);
            String UserName2 = (String)usersTableModel.getValueAt(i, 1);
            if (UserType2.compareTo(UserType) >= 0 && !UserName2.equals(UserName)){
                Vector newRow = new Vector();
                newRow.add(new Boolean(false));
                newRow.add(UserName2);
                newRow.add( (String)usersTableModel.getValueAt(i, 2));//用户级别
                newRow.add(UserType2);//用户级别代码
                copyUsersTableModel.addRow(newRow);//和下面的语句效果实际证明是同样的。
            }
        }
        if (copyUsersTableModel.getRowCount() > 0) {
            copyUsersTableModel.fireTableDataChanged();
            jTableUsersCopy.repaint();
            jLabelCopyCommont.setText(MessageFormat.format(sCopyCommont, UserName));//"用户“"+UserName+"”的权限将复制给选中用户"
            CommonParas.centerWindow(jDialogCopyRight);
            jDialogCopyRight.setVisible(true);
        }
    }//GEN-LAST:event_jButtonCopyActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        jDialogCopyRight.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        int Row = jTableUsers.getSelectedRow();
        if (Row < 0 || Row > jTableUsers.getRowCount()) return;

        //if (v != null) v.clear();


        String UserName = (String)usersTableModel.getValueAt(Row, 1);//被复制权限用户的用户名称
        String UserType = (String)usersTableModel.getValueAt(Row, 4);//被复制权限用户的用户级别代码
        ArrayList<String> ListOtherUsers = new ArrayList<>();
        ArrayList<String> ListAuthorityTypes = new ArrayList<>();
        for (int i=0;i<copyUsersTableModel.getRowCount();i++){
            //用户名 CHAR(16)、权限项目 VARCHAR(30)、有否	char(1)

            if ((Boolean)copyUsersTableModel.getValueAt(i, 0)){
                ListOtherUsers.add((String)copyUsersTableModel.getValueAt(i, 1));
                ListAuthorityTypes.add((String)copyUsersTableModel.getValueAt(i, 3));
            }
        }
        if (ListOtherUsers.size() > 0) {
            String OtherUsers = ListOtherUsers.toString();
            int IfCopySuccess = UserAuthoritysBean.copyAuthoritysToOtherUsers(UserName, UserType, ListOtherUsers, ListAuthorityTypes, sFileName);
            if (IfCopySuccess > 0) {
                writeUserManageLog(sCopyUserRight, sCopyUserRight_Succ, MessageFormat.format(sCopyUserRightTo, UserName) + OtherUsers);// "复制用户权限""复制用户权限成功""复制用户["+UserName+"]权限给："
            }else{
                writeUserManageErrorLog(sCopyUserRight_Fail, MessageFormat.format(sCopyUserRightTo, UserName) + OtherUsers);//"复制用户权限失败""复制用户["+UserName+"]权限给："
            }
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        //System.out.println("window closing event!");
    }//GEN-LAST:event_formInternalFrameClosing

    private void jButtonExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExit2ActionPerformed
        // TODO add your handling code here:
        jButtonCancel.doClick();
    }//GEN-LAST:event_jButtonExit2ActionPerformed

    private void jTableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsersMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2){
            jButtonModify.doClick();
        }
    }//GEN-LAST:event_jTableUsersMouseClicked

    /**
	 * 函数:      initialDeviceOnLineTableModel
         * 函数描述:  初始化在线设备参数列表jTableDeviceOnLine
         * @return DefaultTableModel
    */
    private DefaultTableModel initialUsersTableModel()
    {
        //String[] sUserTabeTitle = new String [] {"序号", "用户名", "用户级别", "安全状态","级别代码"};

        return CommonParas.initialNormalNoEditTableModel(sUserTabeTitle);
    }
    /**
	 * 函数:      initialUsersRightCopyTableModel
         * 函数描述:  初始化权限复制用户列表
         * @return JTableCheckBoxModel
    */
    private JTableCheckBoxModel initialUsersRightCopyTableModel()
    {
        //String[] sUserRightTabeTitle;
        //sUserRightTabeTitle = new String[] {"选中","用户名", "用户级别","级别代码"};
        JTableCheckBoxModel  CopyUsersTableModel =new JTableCheckBoxModel(sUserRightTabeTitle);
        return CopyUsersTableModel;
    }
    /**
	 * 函数:      setTableColWidth
         * 函数描述:  设置表格特殊列的宽度
    */
    private void setTableColWidth(){
        TableColumnModel tcmUsers = jTableUsers.getColumnModel();
        tcmUsers.getColumn(4).setMinWidth(0);
        tcmUsers.getColumn(4).setMaxWidth(0);
        tcmUsers.getColumn(4).setWidth(0);
        
        TableColumnModel tcmUsersCopy = jTableUsersCopy.getColumnModel();
        tcmUsersCopy.getColumn(0).setMinWidth(120);
        tcmUsersCopy.getColumn(0).setMaxWidth(120);
        tcmUsersCopy.getColumn(0).setWidth(120);
        tcmUsersCopy.getColumn(3).setMinWidth(0);
        tcmUsersCopy.getColumn(3).setMaxWidth(0);
        tcmUsersCopy.getColumn(3).setWidth(0);
    }
    /**
	 * 函数:      fillIntoTableUsers
         * 函数描述:  添加相关的用户到列表中
    */
    private void fillIntoTableUsers(){
        try {
                refeshUsersTableModel();
                //Vector v = UsersTableModel.getDataVector();

                for (int i=0;i<listUserPara.size();i++){
                    ArrayList<String> ListUsers = (ArrayList)listUserPara.get(i);
                    String UserName = ListUsers.get(0);
                    String UserTypeCpde = ListUsers.get(1);
                    //什么时候中断循环
                    //当iUserType = 1002时，循环用户=1001，中断循环
                    if (CommonParas.UserState.UserTypeCode.equals(CommonParas.USER_TYPECODE_MANAGER)  
                            && UserTypeCpde.equals(CommonParas.USER_TYPECODE_ADMIN) ) continue;
                    //当iUserType = 1002时，循环用户=1002，且和其名字如果不相等，中断循环
                    if (CommonParas.UserState.UserTypeCode.equals(CommonParas.USER_TYPECODE_MANAGER)  && UserTypeCpde.equals(CommonParas.USER_TYPECODE_MANAGER)  
                            && (!CommonParas.UserState.UserName.equals(UserName))) continue;
                    //当iUserType = 1003时，如果和循环用户名字不相同，中断循环
                    if (CommonParas.UserState.UserTypeCode.equals(CommonParas.USER_TYPECODE_OPERATOR) && (!CommonParas.UserState.UserName.equals(UserName))) continue;
                    Vector newRow = new Vector();
                    //获取用户名,类型代码,类型名称（代码表中的代码名称），密码,密码级别等用户信息
                    newRow.add(i+1);
                    newRow.add(UserName);
                    newRow.add(ListUsers.get(2));
                    newRow.add(ListUsers.get(4));
                    newRow.add(UserTypeCpde);

                    usersTableModel.addRow(newRow);
                }
                usersTableModel.fireTableDataChanged();

                jTableUsers.repaint();

        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "fillIntoTableUsers()","系统在刷新用户列表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
    }
    /**
        *函数:      refeshUsersTableModel
        *函数描述:  重新刷新标准用户列表
    */
    private void refeshUsersTableModel(){
        try {
            Vector v = usersTableModel.getDataVector();
            if (v != null) v.clear();
            if (listUserPara != null)  listUserPara.clear();
            listUserPara = UsersBean.getUsersList(sFileName);
        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "refeshAuthoritysData()","系统在重新刷新标准用户权限列表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
    }
    /**
	 * 函数:      refreshButtonsState
         * 函数描述:  刷新所有Button的状态
    */
    private void refreshButtonsState(){
        /**
        * 1、超级用户可以看到所有的客户，拥有所有的功能。
        * 2、管理员用户只能添加、修改、删除和复制权限功能；也就是说添加、修改、删除、复制权限按钮都不是是灰的
        *               可以修改自己的密码（但这是修改用户窗口的功能）；
        * 3、操作员用户只能看到自已一个用户，添加、删除按钮、复制权限都是灰的；
        *             只能修改自己的密码（但这是修改用户窗口的功能），修改按钮不是灰的。
        * 4、如果此时切换用户，则该程序窗口再次得到焦点的时候，再次判断一下当前用户的状态，重新刷新窗口状态。
        */
        
        switch (CommonParas.UserState.UserTypeCode){
            case CommonParas.USER_TYPECODE_MANAGER:
                jButtonInsert.setEnabled(true);
                jButtonModify.setEnabled(true);
                jButtonDelete.setEnabled(true);
                jButtonCopy.setEnabled(true);
                break;
            case CommonParas.USER_TYPECODE_OPERATOR:
                jButtonInsert.setEnabled(false);
                jButtonModify.setEnabled(true);
                jButtonDelete.setEnabled(false);
                jButtonCopy.setEnabled(false);
                break;
            case CommonParas.USER_TYPECODE_ADMIN:
                jButtonInsert.setEnabled(true);
                jButtonModify.setEnabled(true);
                jButtonDelete.setEnabled(true);
                jButtonCopy.setEnabled(true);
                break;
            default:
                jButtonInsert.setEnabled(false);
                jButtonModify.setEnabled(false);
                jButtonDelete.setEnabled(false);
                jButtonCopy.setEnabled(false);
                break;
        }
    }
    
    /**
	 * 函数:      getListFromUserName
         * 函数描述:  根据用户名得到用户数据(ArrayList表示)
         * @param UserName  用户名
         * @return ArrayList
    */
    private ArrayList<String> getListFromUserName(String UserName){
        try {
            if (UserName == null || UserName.equals("")) return null;
            for (int i=0;i<listUserPara.size();i++){
                ArrayList<String> listUsers = (ArrayList<String>) listUserPara.get(i);
                if (listUsers.get(0).equals(UserName)) return listUsers;
            }
            
        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "getListFromUserName()","系统在根据用户名得到用户数据的过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
        return null;
    }
    
    public void writeUserManageLog(String Description, String DescriptionSucc, String Remarks){
        //操作时间、日志类型、描述信息、备注、调用的文件名
        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, Description,  Remarks, sFileName);
        CommonParas.showMessage( DescriptionSucc, sFileName);
    }
  
    public void writeUserManageErrorLog(String Description, String Remarks){

        //写错误日志
        //操作时间、描述信息、日志备注、调用的文件名
        CommonParas.SystemWriteErrorLog("",  Description,  Remarks, sFileName);
        CommonParas.showMessage( Description , sFileName);
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sUserTabeTitle      = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sUserTabeTitle").split(",");  //序号,用户名,用户级别,安全状态,级别代码
        sUserRightTabeTitle = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sUserRightTabeTitle").split(",");  //选中,用户名,用户级别,级别代码
        sCopyCommont        = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyCommont");  //用户“{0}”的权限将复制给选中用户
        sRegisterFirst      = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sRegisterFirst");  //请先进行设备注册，然后再添加客户！
        sRealToDelUser      = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sRealToDelUser");  //真的要删除此用户？
        sRemind             = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sRemind");  //提醒
        sAddUser            = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sAddUser");  //添加用户
        sAddUser_Succ       = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sAddUser_Succ");  //添加用户成功
        sAddUser_Fail       = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sAddUser_Fail");  //添加用户失败
        sUser               = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sUser");  //用户：
        sModifyUser         = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sModifyUser");  //修改用户资料
        sModifyUser_Succ    = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sModifyUser_Succ");  //修改用户资料成功
        sModifyUser_Fail    = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sModifyUser_Fail");  //修改用户资料失败
        sDelUser            = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sDelUser");  //删除用户
        sDelUser_Succ       = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sDelUser_Succ");  //删除用户成功
        sDelUser_Fail       = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sDelUser_Fail");  //删除用户失败
        sCopyUserRight      = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyUserRight");  //复制用户权限
        sCopyUserRight_Succ = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyUserRight_Succ");  //复制用户权限成功
        sCopyUserRight_Fail = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyUserRight_Fail");  //复制用户权限失败
        sCopyUserRightTo    = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyUserRightTo");  //复制用户“{0}”权限给：
        sCopyRight          = Locales.getString("JInFrameUserManage", "JInFrameUserManage.sCopyRight");  //权限复制

        //标签和按钮显示
        this.setTitle( Locales.getString("JInFrameUserManage", "JInFrameUserManage.sTitle"));  //用户管理
        jDialogCopyRight.setTitle(sCopyRight);
        jLabelTitle.setText(sCopyRight);
        jButtonCopy.setText(sCopyRight);

        jButtonOK.setText(      Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonOK"));  //复制
        jButtonCancel.setText(  Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonCancel"));  //取消
        jButtonInsert.setText(  Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonInsert"));  //添加用户
        jButtonModify.setText(  Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonModify"));  //修改资料
        jButtonDelete.setText(  Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonDelete"));  //删除用户
        jLabelUserList.setText( Locales.getString("JInFrameUserManage", "JInFrameUserManage.jLabelUserList"));  //用户列表
        jButtonExit.setText(    Locales.getString("JInFrameUserManage", "JInFrameUserManage.jButtonExit"));  //退 出
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExit2;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonModify;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JDialog jDialogCopyRight;
    private javax.swing.JLabel jLabelCopyCommont;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelUserList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelContainer;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneUser;
    private javax.swing.JTable jTableUsers;
    private javax.swing.JTable jTableUsersCopy;
    // End of variables declaration//GEN-END:variables

    private String[] sUserTabeTitle = new String [] {"序号", "用户名", "用户级别", "安全状态","级别代码"};
    private String[] sUserRightTabeTitle = new String[] {"选中","用户名", "用户级别","级别代码"};

    private String sCopyCommont = "用户“{0}”的权限将复制给选中用户";
    private String sRegisterFirst = "请先进行设备注册，然后再添加客户！";
    private String sRealToDelUser = "真的要删除此用户？";
    private String sRemind = "提醒";
    private String sAddUser = "添加用户";
    private String sAddUser_Succ = "添加用户成功";
    private String sAddUser_Fail = "添加用户失败";
    private String sUser = "用户：";
    private String sModifyUser = "修改用户资料";
    private String sModifyUser_Succ = "修改用户资料成功";
    private String sModifyUser_Fail = "修改用户资料失败";
    private String sDelUser = "删除用户";
    private String sDelUser_Succ = "删除用户成功";
    private String sDelUser_Fail = "删除用户失败";
    private String sCopyRight = "复制权限";
    private String sCopyUserRight = "复制用户权限";
    private String sCopyUserRight_Succ = "复制用户权限成功";
    private String sCopyUserRight_Fail = "复制用户权限失败";
    private String sCopyUserRightTo = "复制用户“{0}”权限给：";
}
