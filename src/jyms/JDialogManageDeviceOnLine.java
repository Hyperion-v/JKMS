/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.awt.event.KeyEvent;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jyms.Sadp.SADP_DEV_NET_PARAM;
import jyms.data.TxtLogger;

/**
 *
 * @author John
 */
public class JDialogManageDeviceOnLine extends javax.swing.JDialog {
    
    private final String sFileName = this.getClass().getName() + ".java";
    private final String sMAC;
    private final String sDVRIP;

    private int iState = 0 ;
    private final DefaultTableModel deviceOnLineTableModel;
    private final int iRow;
//    private final JFrameDeviceManage jFrameDeviceManage;
    Sadp sadpSDK = Sadp.INSTANCE;
    SADP_DEV_NET_PARAM msSADP_DEV_NET_PARAM;
    /**
     * Creates new form JDialogAddDevice
     * @param parent
     */
    /**
        * 函数:      构造函数JDialogLoginDevice
        * 函数描述：  根据传递的参数进行设备参数的修改
        * @param parent 显示该对话框的 Frame
        * @param modal  指定对话框在显示时是否阻塞用户向其他顶层窗口输入
        * @param msSADP_DEV_NET_PARAM_JAVA 设备网络参数结构体。对应sadp的结构SADP_DEV_NET_PARAM。
        * @param DeviceOnLineTableModel
        * @param Row
     */
    public JDialogManageDeviceOnLine(java.awt.Frame parent, boolean modal, Sadp.SADP_DEV_NET_PARAM_JAVA msSADP_DEV_NET_PARAM_JAVA, DefaultTableModel DeviceOnLineTableModel, int Row) {
        super(parent, modal);
        initComponents();
        modifyLocales();
        deviceOnLineTableModel = DeviceOnLineTableModel;
        iRow = Row;
//        jFrameDeviceManage = (JFrameDeviceManage)parent;

        jTextFieldDVRIP.setText(msSADP_DEV_NET_PARAM_JAVA.getIPv4Address());
        this.sDVRIP = msSADP_DEV_NET_PARAM_JAVA.getIPv4Address();
        jTextFieldGateway.setText(msSADP_DEV_NET_PARAM_JAVA.getIPv4Gateway());
        jTextFieldSubnetMask.setText(msSADP_DEV_NET_PARAM_JAVA.getIPv4SubNetMask());
        jTextFieldDVRPort.setText(msSADP_DEV_NET_PARAM_JAVA.getPort());
        
        this.sMAC = msSADP_DEV_NET_PARAM_JAVA.getMAC();
        msSADP_DEV_NET_PARAM = new SADP_DEV_NET_PARAM();
        msSADP_DEV_NET_PARAM.byDhcpEnable = (byte) Integer.parseInt(msSADP_DEV_NET_PARAM_JAVA.getDhcpEnabled());
        msSADP_DEV_NET_PARAM.byIPv6MaskLen = (byte) Integer.parseInt(msSADP_DEV_NET_PARAM_JAVA.getIPv6MaskLen());
        //Arrays.copyOf方法很重要，因为SADP_ModifyDeviceNetParam不是传递地址参数，而是传递结构参数，所以必须把byte[]用0补齐。
        msSADP_DEV_NET_PARAM.szIPv6Address = Arrays.copyOf(msSADP_DEV_NET_PARAM_JAVA.getIPv6Address().getBytes(),128);
        msSADP_DEV_NET_PARAM.szIPv6Gateway = Arrays.copyOf(msSADP_DEV_NET_PARAM_JAVA.getIPv6Gateway().getBytes(),128);
        msSADP_DEV_NET_PARAM.wHttpPort = (short) Integer.parseInt(msSADP_DEV_NET_PARAM_JAVA.getHttpPort());

        CommonParas.setJButtonUnDecorated(jButtonExit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFirst = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelIP = new javax.swing.JLabel();
        jTextFieldDVRIP = new javax.swing.JTextField();
        jLabelSubnetMask = new javax.swing.JLabel();
        jLabelGateway = new javax.swing.JLabel();
        jTextFieldSubnetMask = new javax.swing.JTextField();
        jTextFieldGateway = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldDVRPort = new javax.swing.JTextField();
        jLabelPassAgain = new javax.swing.JLabel();
        jPasswordFieldDVR = new javax.swing.JPasswordField();
        jPanelLast = new javax.swing.JPanel();
        jButtonLogin = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(240, 240, 240));
        setUndecorated(true);

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("设备网络参数修改");

        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jLabelIP.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelIP.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelIP.setText("IP地址：");
        jLabelIP.setToolTipText("");
        jLabelIP.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jTextFieldDVRIP.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 15)); // NOI18N
        jTextFieldDVRIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDVRIPKeyTyped(evt);
            }
        });

        jLabelSubnetMask.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelSubnetMask.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelSubnetMask.setText("子网掩码：");

        jLabelGateway.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelGateway.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelGateway.setText("网关地址：");

        jTextFieldSubnetMask.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 15)); // NOI18N
        jTextFieldSubnetMask.setText("255.255.255.0");
        jTextFieldSubnetMask.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSubnetMaskKeyTyped(evt);
            }
        });

        jTextFieldGateway.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 15)); // NOI18N
        jTextFieldGateway.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldGatewayKeyTyped(evt);
            }
        });

        jLabelPort.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelPort.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPort.setText("端口号：");

        jTextFieldDVRPort.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 15)); // NOI18N
        jTextFieldDVRPort.setText("8000");
        jTextFieldDVRPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldDVRPortKeyTyped(evt);
            }
        });

        jLabelPassAgain.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelPassAgain.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPassAgain.setText("密码确认：");

        jPasswordFieldDVR.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelGateway, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jLabelSubnetMask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelPassAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextFieldDVRIP, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldSubnetMask, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(jTextFieldDVRPort)
                    .addComponent(jTextFieldGateway)
                    .addComponent(jPasswordFieldDVR))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabelGateway, jLabelIP, jLabelPassAgain, jLabelPort, jLabelSubnetMask});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPort, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDVRPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDVRIP, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSubnetMask)
                    .addComponent(jLabelSubnetMask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldGateway)
                    .addComponent(jLabelGateway, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordFieldDVR, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPassAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelGateway, jLabelIP, jLabelPassAgain, jLabelPort, jLabelSubnetMask, jPasswordFieldDVR, jTextFieldDVRIP, jTextFieldDVRPort, jTextFieldGateway, jTextFieldSubnetMask});

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jButtonLogin.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/modify.png"))); // NOI18N
        jButtonLogin.setText("更改");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel.png"))); // NOI18N
        jButtonCancel.setText("取消");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLastLayout = new javax.swing.GroupLayout(jPanelLast);
        jPanelLast.setLayout(jPanelLastLayout);
        jPanelLastLayout.setHorizontalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap(148, Short.MAX_VALUE)
                .addComponent(jButtonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jPanelLastLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonCancel, jButtonLogin});

        jPanelLastLayout.setVerticalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLogin)
                    .addComponent(jButtonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelLast, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public int getReturnStatus(){
       return iState;
    }

    private void jTextFieldDVRIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDVRIPKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (!(c == '.' || c >= '0' && c <= '9')) {
            JOptionPane.showMessageDialog(rootPane, sInputErrorNumberDot);// "输入有误。输入必须是.和数字，其它字符非法！"
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldDVRIPKeyTyped

    private void jTextFieldSubnetMaskKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSubnetMaskKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (!(c == '.' || c >= '0' && c <= '9')) {
            JOptionPane.showMessageDialog(rootPane, sInputErrorNumberDot);// "输入有误。输入必须是.和数字，其它字符非法！"
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldSubnetMaskKeyTyped

    private void jTextFieldGatewayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldGatewayKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (!(c == '.' || c >= '0' && c <= '9')) {
            JOptionPane.showMessageDialog(rootPane, sInputErrorNumberDot);// "输入有误。输入必须是.和数字，其它字符非法！"
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldGatewayKeyTyped

    private void jTextFieldDVRPortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDVRPortKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (!(c >= '0' && c <= '9')) {
            JOptionPane.showMessageDialog(rootPane, sInputErrorNumber);// "输入有误。输入必须是数字，其它字符非法！"
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldDVRPortKeyTyped

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        jButtonCancel.doClick();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        // TODO add your handling code here:
        
        String DVRIP = jTextFieldDVRIP.getText().trim();//设备IP地址
        if (!this.sDVRIP.equals(DVRIP)){
            if (getIfIPConflict(DVRIP)) {
                JOptionPane.showMessageDialog(rootPane, sModifiedIPConflict );//"新修改的IP地址和现有IP地址冲突！"
                return;
            }
        }
        
        String ServerPort = jTextFieldDVRPort.getText().trim();//设备端口号
        String Password = new String(jPasswordFieldDVR.getPassword());//设备密码
        
        msSADP_DEV_NET_PARAM.szIPv4Address = Arrays.copyOf(jTextFieldDVRIP.getText().trim().getBytes(),16);//IP地址
        msSADP_DEV_NET_PARAM.szIPv4SubNetMask = Arrays.copyOf(jTextFieldSubnetMask.getText().trim().getBytes(),16);//子网掩码
        msSADP_DEV_NET_PARAM.szIPv4Gateway = Arrays.copyOf(jTextFieldGateway.getText().trim().getBytes(),16);//网关
        msSADP_DEV_NET_PARAM.wPort = (short) Integer.parseInt(jTextFieldDVRPort.getText().trim());//设备通讯端口号

        int iReturn = sadpSDK.SADP_ModifyDeviceNetParam(this.sMAC, Password, msSADP_DEV_NET_PARAM );

        if (iReturn == 1){
            iState = 1;    
            //System.out.println("成功修改设备网络参数！");
            
        }else {
            TxtLogger.append(this.sFileName, "jButtonLoginActionPerformed()","修改设备网络参数过程中，出现错误" + 
                        "\r\n                       错误码：" + sadpSDK.SADP_GetLastError());   
            //CommonParas.SystemWriteErrorLog("修改设备网络参数失败", sDVRIP, sFileName);// "修改设备网络参数失败"
            JOptionPane.showMessageDialog(this, sModifyNetworkParaFail + sadpSDK.SADP_GetLastError());// "修改设备网络参数失败！错误码："
        }
        this.dispose();
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        iState = -1;
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
        *函数:      getIfIPConflict
        *函数描述:  判断该IP地址是否存在冲突(和在线设备IP地址相比较)
        *@param sDVRIP   需要判断的IP地址
        *@return    boolean  true，存在冲突；false不冲突。
    */
    private boolean getIfIPConflict(String DVRIP){
        for (int i=0;i<deviceOnLineTableModel.getRowCount();i++){
            if (i == iRow) continue;//不和本身比较
            String DVRIP2 = (String)deviceOnLineTableModel.getValueAt(i, 0);//IP地址
            if (DVRIP2.equals(DVRIP)) return true;
        }
        return false;
    }
    /**
        *函数:      getGateway
        *函数描述:  根据设备IP地址获得设备网关地址
        *@param DVRIP   设备IP地址
        *@return    String  设备网关地址
    */
    private String getGateway(String DVRIP){
        if (DVRIP == null || DVRIP.equals("")) return "";
        String Separator = ".";
        int Position = DVRIP.lastIndexOf(Separator);
        if (Position < 0) return "";
        return DVRIP.substring(0, Position) + Separator + "1";
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sInputErrorNumberDot = Locales.getString("JInFrameDeviceManage", "JInFrameDeviceManage.sInputErrorNumberDot");  //输入有误。输入必须是“.”和数字，其它字符非法！
        sInputErrorNumber = Locales.getString("JInFrameDeviceManage", "JInFrameDeviceManage.sInputErrorNumber");  //输入有误。输入必须数字，其它字符非法！
        sModifiedIPConflict = Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.sModifiedIPConflict");  //新修改的IP地址和现有IP地址冲突！
        sModifyNetworkParaFail = Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.sModifyNetworkParaFail");  //修改设备网络参数失败！错误码：
        jLabelTitle.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelTitle"));  //设备网络参数修改
        jLabelIP.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelIP"));  //IP地址：
        jLabelSubnetMask.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelSubnetMask"));  //子网掩码：
        jLabelGateway.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelGateway"));  //网关地址：
        jLabelPort.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelPort"));  //端口号：
        jLabelPassAgain.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jLabelPassAgain"));  //密码确认：
        jButtonLogin.setText(Locales.getString("JInFrameDeviceManage", "JDialogManageDeviceOnLine.jButtonLogin"));  //更改
        jButtonCancel.setText(Locales.getString("JInFrameDeviceManage", "JInFrameDeviceManage.jButtonCancel"));  //取消


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabelGateway;
    private javax.swing.JLabel jLabelIP;
    private javax.swing.JLabel jLabelPassAgain;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelSubnetMask;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JPanel jPanelLast;
    private javax.swing.JPasswordField jPasswordFieldDVR;
    private javax.swing.JTextField jTextFieldDVRIP;
    private javax.swing.JTextField jTextFieldDVRPort;
    private javax.swing.JTextField jTextFieldGateway;
    private javax.swing.JTextField jTextFieldSubnetMask;
    // End of variables declaration//GEN-END:variables

    private String sModifiedIPConflict = "新修改的IP地址和现有IP地址冲突！";
    private String sModifyNetworkParaFail = "修改设备网络参数失败！错误码：";
    private String sInputErrorNumberDot = "输入有误。输入必须是“.”和数字，其它字符非法！";
    private String sInputErrorNumber = "输入有误。输入必须数字，其它字符非法！";


}
