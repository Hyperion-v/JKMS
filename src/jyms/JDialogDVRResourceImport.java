/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.text.Position;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import jyms.data.DeviceGroupBean;
import jyms.data.DeviceParaBean;
import jyms.data.DeviceResourceBean;
import jyms.data.TxtLogger;
import jyms.tools.CheckBoxNodeTree.CheckBoxTreeCellRenderer;
import jyms.tools.CheckBoxNodeTree.CheckBoxTreeNode;
import jyms.tools.CheckBoxNodeTree.CheckBoxTreeNodeSelectionListener;
import jyms.tools.TreeUtil.CustomNodeTreeCellRenderer;
import jyms.ui.PanelUI_LineBorder;
import jyms.ui.ScrollBarUI_White;
import jyms.ui.ScrollPaneUI_White;

import jyms.ui.SplitPaneUI_White;

/**
 *
 * @author John
 */
public class JDialogDVRResourceImport extends javax.swing.JDialog {
    
    private final String sFileName = this.getClass().getName() + ".java";
    private String sGroupName = "";
    private final ArrayList<String> listNewGroupNames;
    private CheckBoxTreeNode m_DeviceResourceRoot;//通道树根节点
    private DefaultMutableTreeNode m_GroupResourceRoot;//通道树根节点
    
    private boolean ifModifySuccess = false;//是否导入节点成功
    /**
     * Creates new form JDialogDVRResourceImport
     * @param parent
     * @param modal
     * @param GroupName 组名
     * @param ListNewGroupNames
     */
    public JDialogDVRResourceImport(java.awt.Frame parent, boolean modal, String GroupName, ArrayList<String> ListNewGroupNames) {
        super(parent, modal);
        this.sGroupName = GroupName;
        this.listNewGroupNames = ListNewGroupNames;//只是指针地址的引用，还是父窗口的变量。这边修改了，父窗口的也改变了
        initComponents();
        modifyLocales();
        initialTrees();
    }
    
    /**
     * Creates new form JDialogDVRResourceImport
     * @param parent
     * @param modal
     */
    public JDialogDVRResourceImport(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.listNewGroupNames = new ArrayList();//只是指针地址的引用，还是父窗口的变量。这边修改了，父窗口的也改变了
        initComponents();
        modifyLocales();
        initialTrees();
    }
    
    private void initialTrees(){
        try{
            jTreeDVRResource.setModel(this.initialDevResourceTreeModel());
            jTreeGroupResource.setModel(this.initialGroupResourceTreeModel());
            
            jSplitPaneResourceImport.setDividerLocation(360);

            jTreeDVRResource.setCellRenderer(new CheckBoxTreeCellRenderer()); 
            jTreeDVRResource.addMouseListener(new CheckBoxTreeNodeSelectionListener()); 
            //CommonParas.CreateDeviceResourceTypeTree(jTreeDVRResource, m_DeviceResourceRoot,"CheckBoxTreeNode", sFileName);//监控点
            CommonParas.CreateDeviceResourceTree(jTreeDVRResource, m_DeviceResourceRoot,"CheckBoxTreeNode", "" ,sFileName);//监控点
            
            myCreateGroupResourceTree();
            
            jSplitPaneResourceImport.setUI(new SplitPaneUI_White());
            
            jPanelImportIn.setUI(new PanelUI_LineBorder());
            jPanelImportOut.setUI(new PanelUI_LineBorder());
            CommonParas.setJButtonUnDecorated(jButtonExit);
            
            jScrollPaneDVRResource.setUI(new ScrollPaneUI_White());
            jScrollPaneDVRResource.getVerticalScrollBar().setUI(new ScrollBarUI_White());
            jScrollPaneDVRResource.getHorizontalScrollBar().setUI(new ScrollBarUI_White());
            
            jScrollPaneGroupResource.setUI(new ScrollPaneUI_White());
            jScrollPaneGroupResource.getVerticalScrollBar().setUI(new ScrollBarUI_White());
            jScrollPaneGroupResource.getHorizontalScrollBar().setUI(new ScrollBarUI_White());
            

            jTreeGroupResource.setCellRenderer(new CustomNodeTreeCellRenderer());


        }catch (Exception e){
            TxtLogger.append(sFileName, "initialTrees()","用户在初始化JTree结构的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPaneResourceImport = new javax.swing.JSplitPane();
        jPanelDVRTree = new javax.swing.JPanel();
        jPanelImportOut = new javax.swing.JPanel();
        jButtonInToGroup = new javax.swing.JButton();
        jScrollPaneDVRResource = new javax.swing.JScrollPane();
        jTreeDVRResource = new javax.swing.JTree();
        jPanelGroupTree = new javax.swing.JPanel();
        jPanelImportIn = new javax.swing.JPanel();
        jButtonCreatGroup = new javax.swing.JButton();
        jButtonDelGroup = new javax.swing.JButton();
        jButtonModifyGroup = new javax.swing.JButton();
        jScrollPaneGroupResource = new javax.swing.JScrollPane();
        jTreeGroupResource = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("设备分组资源管理");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanelDVRTree.setName(""); // NOI18N
        jPanelDVRTree.setLayout(new java.awt.BorderLayout());

        jButtonInToGroup.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonInToGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/groupimport2.png"))); // NOI18N
        jButtonInToGroup.setText("导入至分组");
        jButtonInToGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInToGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelImportOutLayout = new javax.swing.GroupLayout(jPanelImportOut);
        jPanelImportOut.setLayout(jPanelImportOutLayout);
        jPanelImportOutLayout.setHorizontalGroup(
            jPanelImportOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelImportOutLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jButtonInToGroup))
        );
        jPanelImportOutLayout.setVerticalGroup(
            jPanelImportOutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonInToGroup, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanelDVRTree.add(jPanelImportOut, java.awt.BorderLayout.PAGE_START);

        jScrollPaneDVRResource.setPreferredSize(new java.awt.Dimension(140, 622));

        jTreeDVRResource.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jTreeDVRResource.setMaximumSize(new java.awt.Dimension(120, 64));
        jTreeDVRResource.setName("jTreeDVRResource"); // NOI18N
        jScrollPaneDVRResource.setViewportView(jTreeDVRResource);

        jPanelDVRTree.add(jScrollPaneDVRResource, java.awt.BorderLayout.CENTER);

        jSplitPaneResourceImport.setLeftComponent(jPanelDVRTree);

        jPanelGroupTree.setLayout(new java.awt.BorderLayout());

        jButtonCreatGroup.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCreatGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/groupcreat.png"))); // NOI18N
        jButtonCreatGroup.setText("创建分组");
        jButtonCreatGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreatGroupActionPerformed(evt);
            }
        });

        jButtonDelGroup.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonDelGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/groupresdel.png"))); // NOI18N
        jButtonDelGroup.setText("删除分组资源");
        jButtonDelGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelGroupActionPerformed(evt);
            }
        });

        jButtonModifyGroup.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonModifyGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/groupmodify.png"))); // NOI18N
        jButtonModifyGroup.setText("修改组名");
        jButtonModifyGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelImportInLayout = new javax.swing.GroupLayout(jPanelImportIn);
        jPanelImportIn.setLayout(jPanelImportInLayout);
        jPanelImportInLayout.setHorizontalGroup(
            jPanelImportInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImportInLayout.createSequentialGroup()
                .addContainerGap(274, Short.MAX_VALUE)
                .addComponent(jButtonCreatGroup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelGroup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonModifyGroup)
                .addGap(28, 28, 28))
        );
        jPanelImportInLayout.setVerticalGroup(
            jPanelImportInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImportInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonCreatGroup)
                .addComponent(jButtonDelGroup)
                .addComponent(jButtonModifyGroup))
        );

        jPanelGroupTree.add(jPanelImportIn, java.awt.BorderLayout.PAGE_START);

        jScrollPaneGroupResource.setPreferredSize(new java.awt.Dimension(92, 622));

        jTreeGroupResource.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jTreeGroupResource.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeGroupResourceValueChanged(evt);
            }
        });
        jScrollPaneGroupResource.setViewportView(jTreeGroupResource);

        jPanelGroupTree.add(jScrollPaneGroupResource, java.awt.BorderLayout.CENTER);

        jSplitPaneResourceImport.setRightComponent(jPanelGroupTree);

        getContentPane().add(jSplitPaneResourceImport, java.awt.BorderLayout.CENTER);

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 20)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("设备分组资源管理");

        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTreeGroupResourceValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeGroupResourceValueChanged
        // TODO add your handling code here:
        try{
            //根节点Level为0，组名节点level = 1
            DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeGroupResource.getLastSelectedPathComponent();
                //String nodeName = selectionNode.toString();

            int Level = selectionNode.getLevel();//如果是在组名上则为1；在设备通道/报警输入/输出节点上则为2；在具体的节点上则为3
            switch (Level) {
                case 1:
                    sGroupName = selectionNode.toString();//在组名上
                    break;
                case 2:
                    sGroupName = selectionNode.getParent().toString();//如果该设备没有报警输入/输出，则为父节点。
                    break;
                case 3:
                    sGroupName = selectionNode.getParent().getParent().toString();//在具体的节点上，则为父节点的父节点。
                    break;
                default:
                    sGroupName = "";
                    break;
            }
        }catch (Exception e){
            TxtLogger.append(sFileName, "jTreeGroupResourceValueChanged()","用户在点击JTree的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
        
    }//GEN-LAST:event_jTreeGroupResourceValueChanged

    private void jButtonInToGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInToGroupActionPerformed
        // TODO add your handling code here:
        try{
            if (sGroupName.equals("")) return;
            ArrayList ListNodesLeadingin = new ArrayList();//存储ArrayList类型的数据（ArrayList包含设备序列号、设备资源类型、节点名、接入设备序列号）
            ArrayList<String> ListSerialNoJoinNode = new ArrayList();
            for (int i=0;i<m_DeviceResourceRoot.getChildCount();i++){
                    //设备别名节点
                    String AnotherName = ((CheckBoxTreeNode)m_DeviceResourceRoot.getChildAt(i)).toString();
                    String SerialNo = CommonParas.getSerialNO(AnotherName, sFileName);
                    for (int j=0;j<m_DeviceResourceRoot.getChildAt(i).getChildCount();j++)
                    {
                            String DVRResourceTypeName = m_DeviceResourceRoot.getChildAt(i).getChildAt(j).toString();
                            //设备资源类型节点
                            for (int k=0;k<m_DeviceResourceRoot.getChildAt(i).getChildAt(j).getChildCount();k++)
                            {
                                //设备资源节点
                                CheckBoxTreeNode Node1 = (CheckBoxTreeNode)m_DeviceResourceRoot.getChildAt(i).getChildAt(j).getChildAt(k);
                                if (Node1.isSelected()){
                                    String NodeName = Node1.toString();
                                    String AnotherNameJoin = CommonParas.getAnotherNameJoinFromNode(NodeName);
                                    String SerialNoJoin = "";
                                    if (!AnotherNameJoin.equals("")) SerialNoJoin = CommonParas.getSerialNO(AnotherNameJoin, sFileName);
                                    if (getIfResourceNodeInGroup(NodeName,sGroupName) == 0){
                                        //int Index  = NodeName.lastIndexOf("_", NodeName.length()-4);//反向搜索得到倒数第二个"_"的索引
                                        String NodeName2 = CommonParas.getDVRNodeFromTreeNode(NodeName);//NodeName.substring(Index+1);
                                        ListSerialNoJoinNode.add(SerialNo + NodeName2);
                                        //将设备序列号、设备资源类型、节点名写入列表中
                                        ArrayList<String> NewList = new ArrayList<>();
                                        NewList.add(SerialNo);
                                        NewList.add(CommonParas.DVRResourceType.getResourceTypeCode(DVRResourceTypeName));
                                        NewList.add(NodeName2);
                                        NewList.add(SerialNoJoin);
                                        ListNodesLeadingin.add(NewList);
                                    }
                                }
                            }
                    }
            }
            int Count = DeviceResourceBean.CopySelectedToGroup(ListSerialNoJoinNode, sGroupName, sFileName);
            if (Count > 0) {

                listNewGroupNames.remove(sGroupName);
                myCreateGroupResourceTree();
                ifModifySuccess = true;//是否导入节点成功
                for (int i=0;i<ListNodesLeadingin.size();i++){
                    ArrayList<String> NewList = (ArrayList)ListNodesLeadingin.get(i);
                    //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、接入设备序列号、接入通道、设备类型、被操作对象类型、备注、调用的文件名
                    CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sImportToGroup, NewList.get(0), sGroupName, NewList.get(2), NewList.get(3), "", CommonParas.DVRType.DVRTYPE_ENCODINGDVR_CODE , NewList.get(1), sGroupNameColon + sGroupName, sFileName);// "导入设备资源至分组""分组名：" 
                }
                
                
            }else {
                //JOptionPane.showMessageDialog(rootPane,"向“"+sGroupName+"”分组中导入资源失败！");
                CommonParas.showMessage(MessageFormat.format(sImportResourceToGroupFail , sGroupName), sFileName);//"向“"+sGroupName+"”分组中导入资源失败！"
                //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_ERROR_CODE, sImportResourceFail, "", sGroupName, "", "", "", sFileName);// "导入资源失败"
            }
        }catch (Exception e){
            TxtLogger.append(sFileName, "jButtonInToGroupActionPerformed()","用户在导入资源到设备分组的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
        
    }//GEN-LAST:event_jButtonInToGroupActionPerformed

    private void jButtonCreatGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreatGroupActionPerformed
        // TODO add your handling code here:
        try{
            String GroupName = JOptionPane.showInputDialog(sEnterGroupName);// "请输入分组名："
            if (GroupName == null || GroupName.equals("")) return;
            
            if (GroupName.length() > DeviceGroupBean.GROUPNAME_LENGTH){
                String GroupNameLabel = sGroupNameColon.substring(0, sGroupNameColon.length()-1);
                JOptionPane.showMessageDialog(null, MessageFormat.format(CommonParas.sLengthCannotExceed, GroupNameLabel, DeviceGroupBean.GROUPNAME_LENGTH));// "分组名长度不能超过20！"
                return;
            }

            DefaultTreeModel TreeModel = ((DefaultTreeModel) jTreeGroupResource.getModel());//获取树模型
            DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(GroupName);
            TreeModel.insertNodeInto(newNode, m_GroupResourceRoot, m_GroupResourceRoot.getChildCount());
            TreeModel.reload(newNode);
            listNewGroupNames.add(GroupName);
            //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
            CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sAddGroup, "", GroupName, "", "", "", sGroupNameColon + GroupName, sFileName);// "添加分组" "分组名："
        }catch (Exception e){
            TxtLogger.append(sFileName, "jButtonCreatGroupActionPerformed()","用户在添加设备分组名的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
    }//GEN-LAST:event_jButtonCreatGroupActionPerformed

    private void jButtonDelGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelGroupActionPerformed
        // TODO add your handling code here:
        try{
            DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeGroupResource.getLastSelectedPathComponent();
            TreePath selectionTp = jTreeGroupResource.getSelectionPath();//获取选中节点的路径
            int Level = selectionNode.getLevel();//如果是在组名上则为1；在设备通道/报警输入/输出节点上则为2；在具体的节点上则为3
            switch (Level) {
                case 1://分组节点
                    if (selectionNode.getChildCount() == 0){//新建节点
                        m_GroupResourceRoot.remove(selectionNode);
                        DefaultTreeModel TreeModel = ((DefaultTreeModel) jTreeGroupResource.getModel());//获取树模型
                            //jTreeGroupResource.updateUI();//加上此句代码容易出现树节点文字出现白色，因为白色背景，所以看不见了
                        TreeModel.reload();
                        listNewGroupNames.remove(sGroupName);
                        //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sDelGroup, "", sGroupName, "", "", "", sFileName);// "删除分组"
                    }else if(selectionNode.getChildCount() > 0) {
                        if ((JOptionPane.showConfirmDialog(this, sRealDelGroup,
                                sRemind,JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION))   return;//  "提醒""分组及分组下的资源都将被删除，真的要继续？"
                        
                        int DeleteNumes = DeviceGroupBean.DeleteDeviceGroup(sGroupName, sFileName);
                        if (DeleteNumes > 0) {
                            //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                            CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sDelGroup, "", sGroupName, "", "", "",  sGroupNameColon + sGroupName, sFileName);// "删除分组" "分组名："
                            myCreateGroupResourceTree();
                            ifModifySuccess = true;
                            
                        }
                    }   break;
                case 2://设备资源类型节点
                    int ChildCount = selectionNode.getChildCount();
                    TreePath selectionTpParent = selectionTp.getParentPath();
                    if(ChildCount > 0) {
                        String ResourceTypeName = selectionNode.toString();
                        String ResourceTypeCode = CommonParas.DVRResourceType.getResourceTypeCodeFromNode(ResourceTypeName);
                        if ((JOptionPane.showConfirmDialog(this, MessageFormat.format(sRealDelResourceType  , sGroupName+"-"+ResourceTypeName),
                                sRemind,JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION))   return;//sGroupName+"-"+ResourceTypeName+"下的资源都将被删除，真的要继续？" "提醒"
                        
                        int DeleteNumes = DeviceGroupBean.DeleteGroupResourceType(sGroupName,ResourceTypeCode, sFileName);
                        if (DeleteNumes > 0) {
                            //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                            CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sDelResourceType, "", sGroupName, "", "", ResourceTypeCode, sDeviceResourceTypeColon +sGroupName+"-"+ResourceTypeName, sFileName);// "删除分组资源""设备资源类型："
                            myCreateGroupResourceTree();
                            if(ChildCount > 1) {
                                jTreeGroupResource.setSelectionPath(selectionTpParent);
                                jTreeGroupResource.expandPath(selectionTpParent);
                            }
                            ifModifySuccess = true;
                            
                        }
                    } 
                    break;
                case 3://设备资源节点
                    TreePath selectionTpParent2 = selectionTp.getParentPath();
                    int ChildCount2 = selectionTpParent2.getPathCount();
                    
                    String ResourceNodeName = selectionNode.toString();
                    //String[] ReturnA = CommonParas.getArraysFromTreeNode(ResourceNodeName);//返回：设备名、接入设备名、设备资源节点名
                    String[] ReturnA = CommonParas.getArraysSerialnoFromTreeNode(ResourceNodeName);//设备序列号、接入设备序列号、设备资源节点名
                    //DeviceParaBean DeviceParaBean2 = CommonParas.getDeviceParaBean(ReturnA[0], sFileName);
                    //String SerialNo = DeviceParaBean2.getSerialNO();
                    String ResourceTypeCode = CommonParas.DVRResourceType.getResourceTypeCodeFromNode(ResourceNodeName);
                    String DVRTpye = CommonParas.getDeviceParaBean("", "", ReturnA[0], sFileName).getDVRType();
                        
                    int DeleteNumes = DeviceGroupBean.DeleteGroupResource(sGroupName, ReturnA[0], ReturnA[2], sFileName);
                    if (DeleteNumes > 0) {
                        //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                        //CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, "删除分组资源", SerialNo, sGroupName, ReturnA[2], DVRTpye, ResourceTypeCode, sFileName);
                        //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、接入设备序列号、接入通道、设备类型、被操作对象类型、备注、调用的文件名
                        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sDelResourceType, ReturnA[0], sGroupName, ReturnA[2], ReturnA[1], "", DVRTpye , ResourceTypeCode, sGroupNameColon + sGroupName, sFileName);// "删除分组资源" "分组名："
                        
                        myCreateGroupResourceTree();
                        if (ChildCount2 > 1) {
                            jTreeGroupResource.setSelectionPath(selectionTpParent2);
                            jTreeGroupResource.expandPath(selectionTpParent2);
                        }
                        ifModifySuccess = true;
                        
                    }
                    break;
                default:
                    break;
            }
        }catch (Exception e){
            TxtLogger.append(sFileName, "jButtonDelGroupActionPerformed()","用户在删除设备分组的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
    }//GEN-LAST:event_jButtonDelGroupActionPerformed

    private void jButtonModifyGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyGroupActionPerformed
        // TODO add your handling code here:
        try{
            DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeGroupResource.getLastSelectedPathComponent();
            int Level = selectionNode.getLevel();//如果是在组名上则为1；在设备通道/报警输入/输出节点上则为2；在具体的节点上则为3

            if (Level == 1) {
                String GroupName = JOptionPane.showInputDialog(sEnterGroupName);// "请输入分组名："
                if (GroupName == null) return;
                if (GroupName.length() > DeviceGroupBean.GROUPNAME_LENGTH){
                    String GroupNameLabel = sGroupNameColon.substring(0, sGroupNameColon.length()-1);
                    JOptionPane.showMessageDialog(null, MessageFormat.format(CommonParas.sLengthCannotExceed, GroupNameLabel, DeviceGroupBean.GROUPNAME_LENGTH));// "分组名长度不能超过20！"
                    return;
                }
                if (selectionNode.getChildCount() == 0){//新建节点
                    //删除原节点，添加新节点
                    m_GroupResourceRoot.remove(selectionNode);

                    DefaultTreeModel TreeModel = ((DefaultTreeModel) jTreeGroupResource.getModel());//获取树模型
                    DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(GroupName);
                    TreeModel.insertNodeInto(newNode, m_GroupResourceRoot,m_GroupResourceRoot.getChildCount());
                    //jTreeGroupResource.updateUI();//加上此句代码容易出现树节点文字出现白色，因为白色背景，所以看不见了
                    TreeModel.reload();
                    //删除listNewGroupNames中的组名，添加新组名
                    listNewGroupNames.remove(sGroupName);
                    listNewGroupNames.add(GroupName);
                    //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                    CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sModifyGroupName, "", sGroupName, "", "", "", sNewGroupNameColon + GroupName, sFileName);// "修改分组名" "新分组名："
                    sGroupName = GroupName;
                }else if(selectionNode.getChildCount() > 0) {

                        int ModifyNumes = DeviceGroupBean.modifyGroupName(sGroupName, GroupName, sFileName);
                        if (ModifyNumes > 0) {
                            //sGroupName = GroupName;
                            myCreateGroupResourceTree();
                            ifModifySuccess = true;
                            //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                            CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sModifyGroupName, "", sGroupName, "", "", "",MessageFormat.format(sNewGroupNameColon , sGroupName, GroupName), sFileName); //"修改分组名" 原先分组名：sGroupName；新分组名：GroupName
                            sGroupName = GroupName;
                        }else{
                            //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、设备类型、设备资源类型、调用的文件名
                            CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_ERROR_CODE, sModifyGroupNameFail, "", sGroupName, "", "", "", sFileName);// "修改分组名失败"
                        }
                }
            }
        }catch (Exception e){
            TxtLogger.append(sFileName, "jButtonModifyGroupActionPerformed()","用户在修改设备分组名的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
    }//GEN-LAST:event_jButtonModifyGroupActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CommonParas.setMaxSize(this);
    }//GEN-LAST:event_formWindowOpened

    
    
    private void myCreateGroupResourceTree(){
        try{
            CommonParas.CreateGroupResourceTree(jTreeGroupResource, m_GroupResourceRoot,"", "" ,sFileName);//监控点

            //添加新加入的分组名
            DefaultTreeModel TreeModel = ((DefaultTreeModel) jTreeGroupResource.getModel());//获取树模型

            for (int i=0;i<listNewGroupNames.size();i++){
                String GroupName = listNewGroupNames.get(i);
                DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(GroupName);
                TreeModel.insertNodeInto(newNode, m_GroupResourceRoot,m_GroupResourceRoot.getChildCount());
                TreeModel.reload(newNode);
            }

            TreePath path = jTreeGroupResource.getNextMatch(sGroupName, 0, Position.Bias.Forward);
            jTreeGroupResource.setSelectionPath(path);
            jTreeGroupResource.expandRow(jTreeGroupResource.getMinSelectionRow());
            //为了程序实现简单，不支持多选功能
            //jTreeGroupResource.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION ); 
        }catch (Exception e){
            TxtLogger.append(sFileName, "myCreateGroupResourceTree()","用户在初始化设备分组JTree结构的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
    }

    /**
        *函数:      getIfResourceNodeInGroup
        *函数描述:  检查该节点是否已经存在于该组中
        * @return int。存在返回1，不存在返回0；出现其他未知错误，返回-1
     */
    private int getIfResourceNodeInGroup(String ResourceNodeName, String GroupName){
        try{
            if (GroupName.equals("")) return -1;
            TreePath path = jTreeGroupResource.getNextMatch(GroupName, 0, Position.Bias.Forward);
            if (path == null) return -1;
            DefaultMutableTreeNode GroupNode = (DefaultMutableTreeNode)path.getLastPathComponent();
            for (int i=0;i<GroupNode.getChildCount();i++){
                //设备资源类型节点
                for (int k=0;k<GroupNode.getChildAt(i).getChildCount();k++)
                {
                    String ResourceNodeName2 = ((DefaultMutableTreeNode)GroupNode.getChildAt(i).getChildAt(k)).toString();
                    if (ResourceNodeName2.equals(ResourceNodeName)) return 1;//存在
                }
            }
            return 0;//不存在
        }catch (Exception e){
            TxtLogger.append(sFileName, "getIfResourceNodeInGroup()","检查该节点是否已经存在于该组的过程中，出现错误"
                +  "\r\n                       Exception:" + e.toString() +  ";");
        }
        return -1;
    } 
    /**
        *函数:      initialResourceTreeModel4
        *函数描述:  初始化设备资源树
        * @return DefaultTreeModel
     */
    private DefaultTreeModel initialDevResourceTreeModel()
    {
        m_DeviceResourceRoot = new CheckBoxTreeNode(sAllDevices);// "全部设备"
        DefaultTreeModel myDefaultTreeModel = new DefaultTreeModel(m_DeviceResourceRoot);//使用根节点创建模型
        return myDefaultTreeModel;
    }
    
    /**
        *函数:      initialResourceTreeModel4
        *函数描述:  初始化设备资源树
        * @return DefaultTreeModel
     */
    private DefaultTreeModel initialGroupResourceTreeModel()
    {
        m_GroupResourceRoot = new DefaultMutableTreeNode(sAllGroups);// "全部分组"
        DefaultTreeModel myDefaultTreeModel = new DefaultTreeModel(m_GroupResourceRoot);//使用根节点创建模型
        return myDefaultTreeModel;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCtrlWiper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCtrlWiper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCtrlWiper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCtrlWiper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogDVRResourceImport dialog = new JDialogDVRResourceImport(new javax.swing.JFrame(), true,"球机",new ArrayList<String>());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sTitle = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sTitle");  //设备分组资源管理
        sImportToGroup = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sImportToGroup");  //导入设备资源至分组
        sGroupNameColon = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sGroupNameColon");  //分组名： 
        sImportResourceToGroupFail = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sImportResourceToGroupFail");  //向“{0}”分组中导入资源失败！
        sImportResourceFail = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sImportResourceFail");  //导入资源失败
        sEnterGroupName = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sEnterGroupName");  //请输入分组名：
        sAddGroup = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sAddGroup");  //添加分组
        sDelGroup = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sDelGroup");  //删除分组
        sRealDelGroup = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sRealDelGroup");  //分组及分组下的资源都将被删除，真的要继续？
        sRemind = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sRemind");  //提醒
        sRealDelResourceType = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sRealDelResourceType");  //{0}下的资源都将被删除，真的要继续？
        sDeviceResourceTypeColon = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sDeviceResourceTypeColon");  //设备资源类型：
        sDelResourceType = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sDelResourceType");  //删除分组资源
        sModifyGroupName = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sModifyGroupName");  //修改分组名
        sNewGroupNameColon = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sNewGroupNameColon");  //新分组名：
        sModifyGroupNameFail = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sModifyGroupNameFail");  //修改分组名失败
        sAllDevices = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sAllDevices");  //全部设备
        sAllGroups = Locales.getString("ClassStrings", "JDialogDVRResourceImport.sAllGroups");  //全部分组
        
        //标签和按钮显示
        jButtonInToGroup.setText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonInToGroup"));  //导入至分组
        jButtonCreatGroup.setText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonCreatGroup"));  //创建分组
        jButtonDelGroup.setText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonDelGroup"));  //删除分组资源
        jButtonModifyGroup.setText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonModifyGroup"));  //修改组名
        
        jButtonCreatGroup.setToolTipText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonCreatGroupToolTip"));  //创建分组
        jButtonDelGroup.setToolTipText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonDelGroupToolTip"));  //删除分组资源
        jButtonModifyGroup.setToolTipText(Locales.getString("ClassStrings", "JDialogDVRResourceImport.jButtonModifyGroupToolTip"));  //修改组名

        this.setTitle(sTitle);
        jLabelTitle.setText(sTitle);//	设备分组资源管理

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreatGroup;
    private javax.swing.JButton jButtonDelGroup;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonInToGroup;
    private javax.swing.JButton jButtonModifyGroup;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDVRTree;
    private javax.swing.JPanel jPanelGroupTree;
    private javax.swing.JPanel jPanelImportIn;
    private javax.swing.JPanel jPanelImportOut;
    private javax.swing.JScrollPane jScrollPaneDVRResource;
    private javax.swing.JScrollPane jScrollPaneGroupResource;
    private javax.swing.JSplitPane jSplitPaneResourceImport;
    private javax.swing.JTree jTreeDVRResource;
    private javax.swing.JTree jTreeGroupResource;
    // End of variables declaration//GEN-END:variables

    private String sTitle = "设备分组资源管理";
    private String sImportToGroup = "导入设备资源至分组";
    private String sGroupNameColon = "分组名：";
    private String sImportResourceToGroupFail = "向“{0}”分组中导入资源失败！";
    private String sImportResourceFail = "导入资源失败";
    private String sEnterGroupName = "请输入分组名：";
    private String sAddGroup = "添加分组";
    private String sDelGroup = "删除分组";
    private String sRealDelGroup = "分组及分组下的资源都将被删除，真的要继续？";
    private String sRemind = "提醒";
    private String sRealDelResourceType = "{0}下的资源都将被删除，真的要继续？";
    private String sDeviceResourceTypeColon = "设备资源类型：";
    private String sDelResourceType = "删除分组资源";
    private String sModifyGroupName = "修改分组名";
    private String sNewGroupNameColon = "原先分组名：{0}；新分组名：{1}";
    private String sModifyGroupNameFail = "修改分组名失败";
    private String sAllDevices = "全部设备";
    private String sAllGroups = "全部分组";
    /**
     * @return the ifImportSuccess
     */
    public boolean isIfModifySuccess() {
        return ifModifySuccess;
    }
}
