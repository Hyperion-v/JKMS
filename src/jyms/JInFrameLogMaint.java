/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import jyms.data.ClientLogBean;
import jyms.data.DerbyPage;
import jyms.data.TxtLogger;
import jyms.tools.DateChooserJButtonE;
import jyms.tools.DateUtil;
import jyms.tools.ExcelUtil;
import jyms.ui.PanelUI_Black;

/**
 *
 * @author John
 */
public class JInFrameLogMaint extends javax.swing.JInternalFrame {

    private final String sFileName = this.getClass().getName() + ".java";
    private DateChooserJButtonE buttonTime1;
    private DateChooserJButtonE buttonTime2;
    private String searchTime1 = "";
    private String searchTime2 = "";
    private String[] sqlQuery = new String[]{"",""};//存储根据起止时间形成的查询语句
    private String aSqlQuery = "";//根据更多搜索条件形成的新的附加查询条件
    private String sRemarks;//备注内容：日志搜索条件
    private boolean ifSetMoreSearch = false;
    private DefaultTableModel logsTableModel;
    
    private ArrayList<String> listReturnText = new ArrayList();//过滤条件文字表示
    private ArrayList listSearchLogs = new ArrayList();//日志记录
    private DerbyPage logPage;
    private int numsPerPage = 30;
    private int numsPerPageSelfAdaptive = 30;
    //int iPageNume = 1;
    
    /**
     * Creates new form JInFrameLogSearch
     */
    public JInFrameLogMaint() {

        initComponents();
        modifyLocales();
        
        Date Now = new Date();
        buttonTime1 = new DateChooserJButtonE(DateUtil.getDateFromNow(Now, Calendar.DAY_OF_YEAR, -1));
        buttonTime2 = new DateChooserJButtonE(Now);
        
        jPanelTime.setLayout(new BorderLayout(1, 1));
        jPanelTime.add(buttonTime1, BorderLayout.WEST);
        jPanelTime.add(new javax.swing.JLabel("—"),BorderLayout.CENTER);
        jPanelTime.add(buttonTime2, BorderLayout.EAST);
        
        logsTableModel = CommonParas.initialNormalNoEditTableModel(sTableTitle);//new String[]{"操作时间", "用户名", "日志类型", "描述信息", "设备名", "操作对象", "注释"}
        jTableLogs.setModel(logsTableModel);
        setTableColWidth();
        jPanelFirst.setUI(new PanelUI_Black());
        jPanelTime.setUI(new PanelUI_Black());
        jPanelLast.setUI(new PanelUI_Black());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFirst = new javax.swing.JPanel();
        jPanelTime = new javax.swing.JPanel();
        jButtonSearch = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonExportExcel = new javax.swing.JButton();
        jButtonMoreSearch = new javax.swing.JButton();
        jScrollPaneLog = new javax.swing.JScrollPane();
        jTableLogs = new javax.swing.JTable();
        jPanelLast = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelCountsTotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelPage = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxNumPerPage = new javax.swing.JComboBox<>();
        jButtonFirst = new javax.swing.JButton();
        jButtonPre = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonLast = new javax.swing.JButton();
        jTextFieldPage = new javax.swing.JTextField();
        jButtonJump = new javax.swing.JButton();

        setTitle("日志管理");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanelTime.setBackground(new java.awt.Color(151, 151, 151));
        jPanelTime.setForeground(new java.awt.Color(255, 255, 255));
        jPanelTime.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanelTimeLayout = new javax.swing.GroupLayout(jPanelTime);
        jPanelTime.setLayout(jPanelTimeLayout);
        jPanelTimeLayout.setHorizontalGroup(
            jPanelTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
        );
        jPanelTimeLayout.setVerticalGroup(
            jPanelTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButtonSearch.setBackground(new java.awt.Color(64, 64, 64));
        jButtonSearch.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonSearch.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/search.png"))); // NOI18N
        jButtonSearch.setText("搜   索");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(64, 64, 64));
        jButtonExit.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/exit.png"))); // NOI18N
        jButtonExit.setText("退出");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(151, 151, 151));
        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("起止时间：");
        jLabel1.setToolTipText("");

        jButtonExportExcel.setBackground(new java.awt.Color(64, 64, 64));
        jButtonExportExcel.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonExportExcel.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/excel.png"))); // NOI18N
        jButtonExportExcel.setText("导出 Excel");
        jButtonExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportExcelActionPerformed(evt);
            }
        });

        jButtonMoreSearch.setBackground(new java.awt.Color(64, 64, 64));
        jButtonMoreSearch.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonMoreSearch.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMoreSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/searchfilter.png"))); // NOI18N
        jButtonMoreSearch.setText("更多搜索条件");
        jButtonMoreSearch.setToolTipText("");
        jButtonMoreSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoreSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMoreSearch)
                .addGap(18, 18, 18)
                .addComponent(jButtonExportExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                .addComponent(jButtonExit)
                .addContainerGap())
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSearch)
                            .addComponent(jButtonMoreSearch)
                            .addComponent(jButtonExit)
                            .addComponent(jButtonExportExcel))))
                .addContainerGap())
        );

        getContentPane().add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jScrollPaneLog.setBackground(new java.awt.Color(64, 64, 64));
        jScrollPaneLog.setForeground(new java.awt.Color(255, 255, 255));

        jTableLogs.setBackground(new java.awt.Color(64, 64, 64));
        jTableLogs.setForeground(new java.awt.Color(255, 255, 255));
        jTableLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneLog.setViewportView(jTableLogs);

        getContentPane().add(jScrollPaneLog, java.awt.BorderLayout.CENTER);

        jLabel2.setBackground(new java.awt.Color(151, 151, 151));
        jLabel2.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("总条数：");

        jLabelCountsTotal.setBackground(new java.awt.Color(151, 151, 151));
        jLabelCountsTotal.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabelCountsTotal.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCountsTotal.setToolTipText("");

        jLabel3.setBackground(new java.awt.Color(151, 151, 151));
        jLabel3.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("页码：");

        jLabelPage.setBackground(new java.awt.Color(151, 151, 151));
        jLabelPage.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabelPage.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPage.setToolTipText("");

        jLabel4.setBackground(new java.awt.Color(151, 151, 151));
        jLabel4.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("页条目数：");

        jComboBoxNumPerPage.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jComboBoxNumPerPage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "自适应", "30", "100", "200", "300", "500", "1000" }));
        jComboBoxNumPerPage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNumPerPageItemStateChanged(evt);
            }
        });

        jButtonFirst.setBackground(new java.awt.Color(64, 64, 64));
        jButtonFirst.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonFirst.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/pagefirst.png"))); // NOI18N
        jButtonFirst.setText("首页");
        jButtonFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFirstActionPerformed(evt);
            }
        });

        jButtonPre.setBackground(new java.awt.Color(64, 64, 64));
        jButtonPre.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonPre.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/pageup.png"))); // NOI18N
        jButtonPre.setText("上一页");
        jButtonPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreActionPerformed(evt);
            }
        });

        jButtonNext.setBackground(new java.awt.Color(64, 64, 64));
        jButtonNext.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonNext.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/pagedown.png"))); // NOI18N
        jButtonNext.setText("下一页");
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jButtonLast.setBackground(new java.awt.Color(64, 64, 64));
        jButtonLast.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonLast.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/pagelast.png"))); // NOI18N
        jButtonLast.setText("末页");
        jButtonLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLastActionPerformed(evt);
            }
        });

        jTextFieldPage.setBackground(new java.awt.Color(151, 151, 151));
        jTextFieldPage.setForeground(new java.awt.Color(255, 255, 255));
        jTextFieldPage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPageKeyTyped(evt);
            }
        });

        jButtonJump.setBackground(new java.awt.Color(64, 64, 64));
        jButtonJump.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonJump.setForeground(new java.awt.Color(255, 255, 255));
        jButtonJump.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/pagejump.png"))); // NOI18N
        jButtonJump.setText("跳转");
        jButtonJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJumpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLastLayout = new javax.swing.GroupLayout(jPanelLast);
        jPanelLast.setLayout(jPanelLastLayout);
        jPanelLastLayout.setHorizontalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCountsTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPage, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxNumPerPage, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(jButtonFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPage, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonJump)
                .addContainerGap())
        );
        jPanelLastLayout.setVerticalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelCountsTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxNumPerPage)
                    .addGroup(jPanelLastLayout.createSequentialGroup()
                        .addGroup(jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonFirst)
                            .addComponent(jButtonPre)
                            .addComponent(jButtonNext)
                            .addComponent(jButtonLast)
                            .addComponent(jTextFieldPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonJump))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(jPanelLast, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        startSearchLogs();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        // TODO add your handling code here:
        refreshLogsShow(logPage.getPageNumber() + 1);
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreActionPerformed
        // TODO add your handling code here:
        refreshLogsShow(logPage.getPageNumber() - 1);
    }//GEN-LAST:event_jButtonPreActionPerformed

    private void jButtonFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFirstActionPerformed
        // TODO add your handling code here:
        refreshLogsShow(1);//显示预览第1页
    }//GEN-LAST:event_jButtonFirstActionPerformed

    private void jButtonLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLastActionPerformed
        // TODO add your handling code here:
        refreshLogsShow(logPage.getPages());//显示预览末页
    }//GEN-LAST:event_jButtonLastActionPerformed

    private void jButtonExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportExcelActionPerformed
        // TODO add your handling code here:
        
            
        try{    
            
            //"操作时间0", "用户名1", "日志类型2", "描述信息3", "设备别名4", "节点名5", "注释6"
            if (logPage == null) return;//如果还没有搜索过，则不做任何操作
            
            JFileChooser JFileChooser1 = new JFileChooser();//启动一个文件选择器

            FileNameExtensionFilter filter = new FileNameExtensionFilter(sFileNameExtensionFilter, "xls");// "Excel97-2003工作簿（*.xls）"Excel97-2003 Workbook (*.xls)
            JFileChooser1.setFileFilter(filter);

            if (JFileChooser.APPROVE_OPTION == JFileChooser1.showSaveDialog(this)){//如果文件选择完毕

                String filepath = JFileChooser1.getSelectedFile().getPath();//获取被选择文件的路径
                File file = JFileChooser1.getSelectedFile();
                if (file.exists()){
                    int copy = JOptionPane.showConfirmDialog(null,sIfOverwrite, sSave, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE); // "是否要覆盖当前文件？" "保存"
                    if (copy == JOptionPane.NO_OPTION) return;
                }else filepath = filepath + ".xls";
                //导出Excel
                //String[] Title = new String[]{"时间_#_7000","用户名_#_5000","日志类型_#_7000","描述信息_#_7000","设备名_#_5000","操作对象_#_7000","备注_#_34000"};//_#_之后是长度

                if (sqlQuery[1].equals("")) return;
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                ArrayList listSearchLogs2 = ClientLogBean.getClientLogFromSearch(logPage.getSqlQuery(), sFileName);
                ExcelUtil.creatLogsToSheet(listSearchLogs2, sExcelTitle , filepath);//"d:/ClientLogs.xls");{"时间_#_7000","用户名_#_5000","日志类型_#_7000","描述信息_#_7000","设备名_#_5000","操作对象_#_7000","备注_#_34000"};//_#_之后是长度
                listSearchLogs2.clear();
            }
            
        }catch(Exception e){
            TxtLogger.append(this.sFileName, "jButtonExportExcelActionPerformed()","系统在导出日志列表到Excel文件过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonExportExcelActionPerformed

    private void jButtonMoreSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoreSearchActionPerformed
        // TODO add your handling code here:
        JDialogLogFilterSet DialogLogFilterSet = new JDialogLogFilterSet(null,true);
        //设置窗口显示位置
        CommonParas.setAppropriateLocation(DialogLogFilterSet, jButtonMoreSearch);
        DialogLogFilterSet.setVisible(true);
        
        if (DialogLogFilterSet.getState() == 0) return;//取消
        
        ArrayList<String> listReturn = DialogLogFilterSet.getListReturn();
        listReturnText = DialogLogFilterSet.getListReturnText();
        
        String aSqlQuery2 = "";

        for (int i=0;i<listReturn.size();i++){
            aSqlQuery2 = aSqlQuery2 + " and " + listReturn.get(i);
        }
        
        if (aSqlQuery.equals(aSqlQuery2)) return;//如果前后附加搜索条件相同，不做任何操作
        else aSqlQuery = aSqlQuery2;
        ifSetMoreSearch = true;//刚才发生了更多搜索条件事件
        if (logPage == null) return;//如果还没有做过搜索，只是改变附加搜索条件，而不进行搜索
        startSearchLogs();//如果已经做过搜索了，则进一步进行搜索

    }//GEN-LAST:event_jButtonMoreSearchActionPerformed

    private void jComboBoxNumPerPageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNumPerPageItemStateChanged
        // TODO add your handling code here:
        if (logPage == null) return;
        String SelectedItem = (String)jComboBoxNumPerPage.getSelectedItem();
        if (SelectedItem.equals(sPageAdaptive))// "自适应"
            numsPerPage = numsPerPageSelfAdaptive;
        else
            numsPerPage = Integer.parseInt((String)jComboBoxNumPerPage.getSelectedItem());
        logPage.setLimit(numsPerPage);
        refreshLogsShow(1);//显示预览第1页
    }//GEN-LAST:event_jComboBoxNumPerPageItemStateChanged

    private void jTextFieldPageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPageKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        //字符和数字可以互换
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (c == KeyEvent.VK_ENTER){
            jButtonJump.doClick();
            return;
        }
        if (!(c >= '0' && c <= '9')) {
            //JOptionPane.showMessageDialog(rootPane, "输入有误。输入必须数字，其它字符非法！");
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldPageKeyTyped

    private void jButtonJumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJumpActionPerformed
        // TODO add your handling code here:
        String Input = jTextFieldPage.getText().trim();
        if (Input.equals("")) return;
        if (logPage == null) return;
        int page = Integer.parseInt(Input);
        //if (page > logPage.getPages()) page = logPage.getPages();
        refreshLogsShow(page);//显示预览第page页
    }//GEN-LAST:event_jButtonJumpActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
//        int jj = jScrollPaneLog.getHeight();
//        Dimension j = jScrollPaneLog.getSize();
        
        numsPerPageSelfAdaptive = jScrollPaneLog.getHeight()/(jTableLogs.getRowHeight()+jTableLogs.getRowMargin());
        numsPerPage = numsPerPageSelfAdaptive;

    }//GEN-LAST:event_formInternalFrameOpened

    /**
	 * 函数:      startSearchLogs
         * 函数描述:  初次搜索或者改变搜索条件后的第一次搜索
    */
    private void startSearchLogs(){
        
       
        String StrTime1 = buttonTime1.getText();
        String StrTime2 = buttonTime2.getText();
        
        boolean IfBefore = buttonTime1.getDate().before(buttonTime2.getDate());
        if (!IfBefore) {
            JOptionPane.showMessageDialog(rootPane, sSearchDateRemind);//"起始日期不能在终止日期之后或相同！"The start date can not be after the end date or the same!
            return;
        }
        if (logPage!=null && StrTime1.equals(searchTime1) && StrTime2.equals(searchTime2) && (!ifSetMoreSearch)) return;
        searchTime1 = StrTime1;
        searchTime2 = StrTime2;
        
        String DefaultDateText1 = buttonTime1.getDefaultDateText();
        String DefaultDateText2 = buttonTime2.getDefaultDateText();
        
        sRemarks = MessageFormat.format(sLogSearchRemark , DefaultDateText1, DefaultDateText2) + listReturnText.toString();//"起止时间：" + searchTime1+"—"+searchTime2+"；搜索条件："
        
        sqlQuery = ClientLogBean.getSqlQuery(DefaultDateText1, DefaultDateText2, sFileName);
        logPage = new DerbyPage(sqlQuery[0] + aSqlQuery,sqlQuery[1] + aSqlQuery + sqlQuery[2], numsPerPage, sFileName);

        boolean IfSucc = refreshLogsShow(1);
        ifSetMoreSearch = false;//刚才更多搜索条件事件已经结束
        writeLogMaintLog(sLogSearch);// "日志搜索"
    }
    /**
	 * 函数:      refreshLogsShow
         * 函数描述:  显示搜索结果（第几页）
    */
    private boolean refreshLogsShow(int PageNumber){
        try{
            if (logPage == null) return false;
            //iPageNume = PageNumber;
            String sqlQuery2 = logPage.getSqlQueryOfPageNumber(PageNumber);

            if (listSearchLogs != null) listSearchLogs.clear();
            listSearchLogs = ClientLogBean.getClientLogFromSearch(sqlQuery2, sFileName);
            if (listSearchLogs == null || listSearchLogs.size() < 1) {
                Vector v = logsTableModel.getDataVector();
                if (v != null) v.clear();
                logsTableModel.fireTableDataChanged();
                return false;
            }
            boolean IfFill = fillIntoTableLogs();
            modifyComState();
            return IfFill;
        }catch(Exception e){
            TxtLogger.append(this.sFileName, "fillIntoTableLogs()","系统在刷新日志列表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
        return false;
    }
    /**
	 * 函数:      modifyComState
         * 函数描述:  根据搜索的结果改变控件的状态
    */
    private void modifyComState(){
        jLabelCountsTotal.setText(""+logPage.getTotal());
        jLabelPage.setText(""+ logPage.getPageNumber() + "/" + logPage.getPages());
        jButtonFirst.setEnabled(!logPage.isFirstPage());
        jButtonPre.setEnabled(logPage.hasPreviousPage());
        jButtonNext.setEnabled(logPage.hasNextPage());
        jButtonLast.setEnabled(!logPage.isLastPage());
        jTextFieldPage.setEnabled(!(logPage.isLastPage() && logPage.isFirstPage()));
        jButtonJump.setEnabled(!(logPage.isLastPage() && logPage.isFirstPage()));
    }
    /**
	 * 函数:      fillIntoTableLogs
         * 函数描述:  添加相关的用户到列表中
    */
    private boolean fillIntoTableLogs(){
        try {
                
                Vector v = logsTableModel.getDataVector();
                if (v != null) v.clear();

                for (int i=0;i<listSearchLogs.size();i++){
                    //获取ClientLogBean（客户端日志表中的操作时间、用户名、日志类型、描述信息、设备序列号、节点名、接入设备序列号、注释）-0
                    //对应的“设备别名-1”、“对应的的接入设备的“设备别名-2”、对应的日志类型-3
                    ArrayList NewList = (ArrayList)listSearchLogs.get(i);
                    ClientLogBean clientLogBean = (ClientLogBean)NewList.get(0);
                    String AnotherName = (String)NewList.get(1);
                    String AnotherNameJoin = (String)NewList.get(2);
                    String NodeName = "";//详细的NodeName，不同于clientLogBean.getNodename()
                    //{"操作时间0", "用户名1", "日志类型2", "描述信息3", "设备别名4", "节点名5", "注释6"};
                    Vector NewRow = new Vector();
                    NewRow.add(clientLogBean.getOperationtime());
                    NewRow.add(clientLogBean.getUsername());
                    //NewRow.add(clientLogBean.getLogtype());
                    NewRow.add((String)NewList.get(3));
                    NewRow.add(clientLogBean.getDescription());
                    NewRow.add(AnotherName);
                    /**1、只针对设备所做的报警、操作等。只加入设备名即可。
                     * 2、针对设备和节点名所做的操作
                     * 3、针对设备和节点、接入设备所做的操作
                    */
                    //3、针对设备和节点、接入设备都不为空的情况下
                    if ((!AnotherName.equals("")) && (!clientLogBean.getNodename().equals("")) && (!AnotherNameJoin.equals(""))){
                        NodeName = (String)NewList.get(1) + "_" + (String)NewList.get(2) + "_" + clientLogBean.getNodename();
                    }
                    //2、针对设备和节点名不为空，而接入设备为空的情况下
                    else if ((!AnotherName.equals("")) && (!clientLogBean.getNodename().equals("")) && AnotherNameJoin.equals("")){
                        NodeName = (String)NewList.get(1) + "_" + clientLogBean.getNodename();
                    }
                    
                    NewRow.add(NodeName);
//                    NewRow.add(CommonParas.getNodeName(WIDTH, isIcon, title));
                    NewRow.add(clientLogBean.getRemarks());
                    logsTableModel.addRow(NewRow);

                    //logsTableModel.getDataVector().add(newRow);
                }
                logsTableModel.fireTableDataChanged();

                jTableLogs.repaint();
                return true;

        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "fillIntoTableLogs()","系统在刷新日志列表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
        return false;
    }
    
    /**
	 * 函数:      setTableColWidth
         * 函数描述:  设置表格特殊列的宽度
    */
    private void setTableColWidth(){
        //"操作时间0", "用户名1", "日志类型2", "描述信息3", "设备别名4", "节点名5", "注释6"
        TableColumnModel tcmAlarmMSG = jTableLogs.getColumnModel();
        tcmAlarmMSG.getColumn(0).setMinWidth(100);
        tcmAlarmMSG.getColumn(0).setMaxWidth(240);
        tcmAlarmMSG.getColumn(0).setPreferredWidth(200);
        
        tcmAlarmMSG.getColumn(1).setMinWidth(50);
        tcmAlarmMSG.getColumn(1).setMaxWidth(200);
        tcmAlarmMSG.getColumn(1).setPreferredWidth(100);
        
        tcmAlarmMSG.getColumn(2).setMinWidth(100);
        tcmAlarmMSG.getColumn(2).setMaxWidth(180);
        tcmAlarmMSG.getColumn(2).setPreferredWidth(150);
        
        tcmAlarmMSG.getColumn(3).setMinWidth(200);
        tcmAlarmMSG.getColumn(3).setMaxWidth(360);
        tcmAlarmMSG.getColumn(3).setPreferredWidth(300);
        
        tcmAlarmMSG.getColumn(4).setMinWidth(80);
        tcmAlarmMSG.getColumn(4).setMaxWidth(160);
        tcmAlarmMSG.getColumn(4).setPreferredWidth(100);
        
        tcmAlarmMSG.getColumn(5).setMinWidth(100);
        tcmAlarmMSG.getColumn(5).setMaxWidth(260);
        tcmAlarmMSG.getColumn(5).setPreferredWidth(200);
        
//        tcmAlarmMSG.getColumn(6).setMinWidth(160);
//        tcmAlarmMSG.getColumn(6).setMaxWidth(200);
//        tcmAlarmMSG.getColumn(6).setPreferredWidth(160);
        

    }
    public void writeLogMaintLog(String Description){
        //操作时间、日志类型、描述信息、备注、调用的文件名
        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, Description,  sRemarks, sFileName);
    }
  
//    public void writeLogMaintErrorLog(String Description){
//
//        //写错误日志
//        //操作时间、描述信息、日志备注、调用的文件名
//        CommonParas.SystemWriteErrorLog("",  Description,  sRemarks, sFileName);
//        CommonParas.showMessage( Description + "失败！", sFileName);
//    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sTableTitle[0] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle0");  //操作时间
        sTableTitle[1] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle1");  //用户名
        sTableTitle[2] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle2");  //日志类型
        sTableTitle[3] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle3");  //描述信息
        sTableTitle[4] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle4");  //设备名
        sTableTitle[5] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle5");  //操作对象
        sTableTitle[6] = Locales.getString("ClassStrings", "JInFrameLogMaint.sTableTitle6");  //注释
        sExcelTitle[0] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle0");  //时间_#_7000
        sExcelTitle[1] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle1");  //用户名_#_5000
        sExcelTitle[2] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle2");  //日志类型_#_7000
        sExcelTitle[3] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle3");  //描述信息_#_7000
        sExcelTitle[4] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle4");  //设备名_#_5000
        sExcelTitle[5] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle5");  //操作对象_#_7000
        sExcelTitle[6] = Locales.getString("ClassStrings", "JInFrameLogMaint.sExcelTitle6");  //备注_#_34000

        sTitle                  = Locales.getString("ClassStrings", "JInFrameLogMaint.sTitle");  //日志管理
        sFileNameExtensionFilter= Locales.getString("ClassStrings", "JInFrameLogMaint.sFileNameExtensionFilter");  //Excel97-2003工作簿（*.xls）
        sPageAdaptive           = Locales.getString("ClassStrings", "JInFrameLogMaint.sPageAdaptive");  //自适应
        sLogSearch              = Locales.getString("ClassStrings", "JInFrameLogMaint.sLogSearch");  //日志搜索
        sLogSearchRemark        = Locales.getString("ClassStrings", "JInFrameLogMaint.sLogSearchRemark");  //起止时间：{0}—{1}；搜索条件：
        sIfOverwrite            = Locales.getString("ClassStrings", "JInFrameLogMaint.sIfOverwrite");  //是否要覆盖当前文件？
        sSave                   = Locales.getString("ClassStrings", "JInFrameLogMaint.sSave");  //保存
        sSearchDateRemind       = Locales.getString("ClassStrings", "JInFrameLogMaint.sSearchDateRemind");  //"起始日期不能在终止日期之后或相同！"
        
        jComboBoxNumPerPage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { sPageAdaptive, "30", "100", "200", "300", "500", "1000" }));//"自适应"
   
        //标签和按钮显示
        jButtonSearch.setText(      Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonSearch"));  //搜索
        jButtonExit.setText(        Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonExit"));  //退出
        jLabel1.setText(            Locales.getString("ClassStrings", "JInFrameLogMaint.jLabel1"));  //起止时间：
        jButtonExportExcel.setText( Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonExportExcel"));  //导出 Excel
        jButtonMoreSearch.setText(  Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonMoreSearch"));  //更多搜索条件
        jLabel2.setText(            Locales.getString("ClassStrings", "JInFrameLogMaint.jLabel2"));  //总条数：
        jLabel3.setText(            Locales.getString("ClassStrings", "JInFrameLogMaint.jLabel3"));  //页码：
        jLabel4.setText(            Locales.getString("ClassStrings", "JInFrameLogMaint.jLabel4"));  //页条目数：
        jButtonFirst.setText(       Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonFirst"));  //首页
        jButtonPre.setText(         Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonPre"));  //上一页
        jButtonNext.setText(        Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonNext"));  //下一页
        jButtonLast.setText(        Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonLast"));  //末页
        jButtonJump.setText(        Locales.getString("ClassStrings", "JInFrameLogMaint.jButtonJump"));  //跳转

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExportExcel;
    private javax.swing.JButton jButtonFirst;
    private javax.swing.JButton jButtonJump;
    private javax.swing.JButton jButtonLast;
    private javax.swing.JButton jButtonMoreSearch;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPre;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox<String> jComboBoxNumPerPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelCountsTotal;
    private javax.swing.JLabel jLabelPage;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JPanel jPanelLast;
    private javax.swing.JPanel jPanelTime;
    private javax.swing.JScrollPane jScrollPaneLog;
    private javax.swing.JTable jTableLogs;
    private javax.swing.JTextField jTextFieldPage;
    // End of variables declaration//GEN-END:variables

    private String[] sTableTitle = new String[]{"操作时间", "用户名", "日志类型", "描述信息", "设备名", "操作对象", "注释"};
    private String[] sExcelTitle = new String[]{"操作时间_#_7000","用户名_#_5000","日志类型_#_7000","描述信息_#_7000","设备名_#_5000","操作对象_#_7000","备注_#_34000"};//_#_之后是长度
    private String sTitle = "日志管理";
    private String sFileNameExtensionFilter = "Excel97-2003工作簿（*.xls）";//"Excel97-2003工作簿（*.xls）"Excel97-2003 Workbook (*.xls)
    private String sPageAdaptive = "自适应";
    private String sLogSearch = "日志搜索";
    private String sLogSearchRemark = "起止时间：{0}—{1}；搜索条件：";
    private String sIfOverwrite = "是否要覆盖当前文件？";
    private String sSave = "保存";
    private String sSearchDateRemind = "起始日期不能在终止日期之后或相同！";

}
