/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.TableColumnModel;
import jyms.data.TxtLogger;
import jyms.tools.TableUtil.JTableCheckBoxModel;
import jyms.ui.PanelUI_MatteBorder;
import jyms.ui.ScrollPaneUI_White;
import jyms.ui.TableHeaderUI_White;
import jyms.ui.TableUI_White;

/**
 *
 * @author John
 */
public class JDialogAlarmFilterSet extends javax.swing.JDialog {

    private final String sFileName = this.getClass().getName() + ".java";
    private String sFilter = "";
    private int iState = -1;//负数表示本窗口做了“取消”操作
    JTableCheckBoxModel  AlarmFileterSetTableModel;
    
    /**
     * Creates new form JDialogSetupAlarmCtrl
     * @param parent
     * @param modal
     */
    public JDialogAlarmFilterSet(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modifyLocales();//国际化
        AlarmFileterSetTableModel = this.initialAlarmOutTableModel();
        
        jTableAlarmFileterSet.setModel(AlarmFileterSetTableModel);
        //jTableAlarmFileterSet.getTableHeader().setDefaultRenderer(new CheckHeaderCellRenderer(jTableAlarmFileterSet));
//        jTableAlarmFileterSet.getTableHeader().set
        jTableAlarmFileterSet.setRowHeight(30);
        setTableColWidth();
        fillIntoTableAlarms();
        checkIfAllOrNotSelected();
        //设置自定义UI
        //UI设计
        jPanelContainer.setUI(new PanelUI_MatteBorder());
        jScrollPaneAlarmFileterSet.setUI(new ScrollPaneUI_White());
        jTableAlarmFileterSet.setUI(new TableUI_White());
        jTableAlarmFileterSet.getTableHeader().setUI(new TableHeaderUI_White());
//        jPanelDeviceTypeContainer.setUI(new PanelUI_LineBorder());
        CommonParas.setJButtonUnDecorated(jButtonExit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanelFirst = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxAll = new javax.swing.JCheckBox();
        jButtonSet = new javax.swing.JButton();
        jPanelContainer = new javax.swing.JPanel();
        jScrollPaneAlarmFileterSet = new javax.swing.JScrollPane();
        jTableAlarmFileterSet = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("报警信息过滤");
        setUndecorated(true);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("报警信息过滤");

        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jCheckBoxAll.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jCheckBoxAll.setText("全选");
        jCheckBoxAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxAllItemStateChanged(evt);
            }
        });

        jButtonSet.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonSet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/setup2.png"))); // NOI18N
        jButtonSet.setText("设置");
        jButtonSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jCheckBoxAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                .addComponent(jButtonSet)
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jCheckBoxAll)
                .addComponent(jButtonSet))
        );

        jPanel2.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jTableAlarmFileterSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAlarmFileterSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableAlarmFileterSetMouseReleased(evt);
            }
        });
        jScrollPaneAlarmFileterSet.setViewportView(jTableAlarmFileterSet);
        jTableAlarmFileterSet.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanelContainerLayout = new javax.swing.GroupLayout(jPanelContainer);
        jPanelContainer.setLayout(jPanelContainerLayout);
        jPanelContainerLayout.setHorizontalGroup(
            jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
            .addGroup(jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPaneAlarmFileterSet, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
        );
        jPanelContainerLayout.setVerticalGroup(
            jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
            .addGroup(jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPaneAlarmFileterSet, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelContainer, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableAlarmFileterSetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlarmFileterSetMouseReleased
        // TODO add your handling code here:
        int Row = jTableAlarmFileterSet.getSelectedRow();
        if (Row < 0 ) return;
        try{
            if (jTableAlarmFileterSet.getSelectedColumn() == 0){
                checkIfAllOrNotSelected();
            }
        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "jTableAlarmFileterSetMouseReleased()","系统在选择报警显示项目过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
    }//GEN-LAST:event_jTableAlarmFileterSetMouseReleased

    private void jCheckBoxAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxAllItemStateChanged
        // TODO add your handling code here:
        setTableAllOrNotSelected(jCheckBoxAll.isSelected());
    }//GEN-LAST:event_jCheckBoxAllItemStateChanged

    private void jButtonSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSetActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> NewList = new ArrayList<>();

            for (int i=0;i<AlarmFileterSetTableModel.getRowCount();i++){
                if ((Boolean)AlarmFileterSetTableModel.getValueAt(i, 0)) {
                    String AlarmItem = (String)AlarmFileterSetTableModel.getValueAt(i, 1);
                    NewList.add(AlarmItem);
                }
            }
            //返回过滤条件
            if (NewList.size() == AlarmFileterSetTableModel.getRowCount()) 
            {sFilter = null;}
            else {
                if(NewList.size()>1) sFilter = NewList.get(0);
                for (int i=1;i<NewList.size();i++){
                    sFilter = getsFilter() + "|" + NewList.get(i);
                }
            }
            //设置过滤条件到报警回调函数中的ListShowAlarmTypes
            if (NewList.size() < AlarmFileterSetTableModel.getRowCount()) {
                ArrayList listAlarmTypes = CommonParas.alarmFMSGCallBack.getListShowAlarmTypes();
                for (int i=0;i<AlarmFileterSetTableModel.getRowCount();i++){
                    ((ArrayList)listAlarmTypes.get(i)).set(0, (Boolean)AlarmFileterSetTableModel.getValueAt(i,0));
                }
            }
            iState = 1;
            this.dispose();
        }catch(Exception e){
            TxtLogger.append(this.sFileName, "jButtonSetActionPerformed()","系统在设置过滤条件的过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
    }//GEN-LAST:event_jButtonSetActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed
    
    private void setTableAllOrNotSelected(boolean value){
        for (int i=0;i<AlarmFileterSetTableModel.getRowCount();i++){
            AlarmFileterSetTableModel.setValueAt(value, i, 0);
        }
        AlarmFileterSetTableModel.fireTableDataChanged();
    }
    
    private void checkIfAllOrNotSelected(){
        int Slected = 0;
        for (int i=0;i<AlarmFileterSetTableModel.getRowCount();i++){
            if ((Boolean)AlarmFileterSetTableModel.getValueAt(i, 0)) Slected++;
        }
        if (Slected == AlarmFileterSetTableModel.getRowCount()) jCheckBoxAll.setSelected(true);
        if (Slected == 0) jCheckBoxAll.setSelected(false);
    }
    /**
        *函数:      fillIntoTableSetupAlarm
        *函数描述:  刷新布防设备列表
    */
    private void fillIntoTableAlarms(){
        try {

            Vector v = AlarmFileterSetTableModel.getDataVector();
            if (v != null) v.clear();
            ArrayList listAlarmTypes = CommonParas.alarmFMSGCallBack.getListShowAlarmTypes();

            for (int i=0;i<listAlarmTypes.size();i++){
                ArrayList NewList = (ArrayList)listAlarmTypes.get(i);//

                Vector newRow = new Vector();
                newRow.add((Boolean)NewList.get(0));
                newRow.add((String)NewList.get(1));
 
                AlarmFileterSetTableModel.addRow(newRow);//和下面的语句效果实际证明是同样的。
//                deviceManagedTableModel.getDataVector().add(newRow);
             }
            AlarmFileterSetTableModel.fireTableDataChanged();
            jTableAlarmFileterSet.repaint();

        }catch(Exception e){
            TxtLogger.append(this.sFileName, "fillIntoTableSetupAlarm()","系统在刷新布防设备列表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
        }
    }
    /**
	 * 函数:      initialAlarmOutTableModel
         * 函数描述:  初始化设备报警输出列表jTableAlarmOut
         * @return JTableButtonModel
    */
    private JTableCheckBoxModel initialAlarmOutTableModel()
    {
//        String tabeTile[];
//        
//        tabeTile = new String[] {"是否显示","报警项目"};
        JTableCheckBoxModel  TableModel =new JTableCheckBoxModel(sTabeTile);
        return TableModel;
    }
    /**
	 * 函数:      setTableColWidth
         * 函数描述:  设置表格特殊列的宽度
    */
    private void setTableColWidth(){
        
        TableColumnModel tcmAlarmFileterSet = jTableAlarmFileterSet.getColumnModel();
        tcmAlarmFileterSet.getColumn(0).setMinWidth(40);
        tcmAlarmFileterSet.getColumn(0).setMaxWidth(120);
        tcmAlarmFileterSet.getColumn(0).setPreferredWidth(80);
        
//        tcmAlarmFileterSet.getColumn(1).setMinWidth(120);
//        //tcmAlarmOut.getColumn(1).setMaxWidth(480);
//        tcmAlarmFileterSet.getColumn(1).setWidth(120);
        

    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作
        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //标签和按钮显示
        jLabelTitle.setText(    Locales.getString("ClassStrings", "JDialogAlarmFilterSet.jLabelTitle"));//报警信息过滤
        jCheckBoxAll.setText(   Locales.getString("ClassStrings", "JDialogAlarmFilterSet.jCheckBoxAll"));//全选
        jButtonSet.setText(     Locales.getString("ClassStrings", "JDialogAlarmFilterSet.jButtonSet"));//设置

        //信息显示
        sTabeTile[0] = Locales.getString("MessageStrings", "JDialogAlarmFilterSet.sTabeTile0");  //是否显示
        sTabeTile[1] = Locales.getString("MessageStrings", "JDialogAlarmFilterSet.sTabeTile1");  //报警项目
 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonSet;
    private javax.swing.JCheckBox jCheckBoxAll;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelContainer;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JScrollPane jScrollPaneAlarmFileterSet;
    private javax.swing.JTable jTableAlarmFileterSet;
    // End of variables declaration//GEN-END:variables

    private String[] sTabeTile = new String[] {"是否显示","报警项目"};
    /**
     * @return the sFilter
     */
    public String getsFilter() {
        return sFilter;
    }

    /**
     * @return the iState
     */
    public int getState() {
        return iState;
    }
}
