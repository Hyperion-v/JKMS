/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.applet.AudioClip;
import java.io.File;
import java.net.URL;
import java.text.MessageFormat;
import java.util.ArrayList;
import javax.swing.JApplet;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import jyms.data.CodesBean;
import jyms.data.SysParaCodesBean;
import jyms.data.TxtLogger;
import jyms.tools.WaveProcess.WaveFilePlay;
import jyms.ui.PanelUI_LineBorder;
import jyms.ui.PanelUI_MatteBorder;
import jyms.ui.ScrollBarUI_White;
import jyms.ui.ScrollPaneUI_White;
import jyms.ui.SplitPaneUI_White;

/**
 *
 * @author John
 */
public class JDialogSysParasSet extends javax.swing.JDialog {

    private final String sFileName = this.getClass().getName() + ".java";
    private DefaultMutableTreeNode m_SysParasRoot;//通道树根节点
    ArrayList<CodesBean> listSysParas;
    private WaveFilePlay playAlarmVoiceFile;
    String sSysParaClassName = "";//当前的系统参数
    JFileChooser jFileChooserPara = new JFileChooser("");//启动一个文件选择器
    private ArrayList<Boolean> listIfModify = new ArrayList();
    private ArrayList<String> listSysParaClassName = new ArrayList();//系统参数类别名称
    /**
     * Creates new form JDialogSys
     */
    public JDialogSysParasSet(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        modifyLocales();
        jSplitPaneSysParas.setDividerLocation(240);
        //this.setSize(1000,640);
        initialDialogParas();
    }
    
    private void initialDialogParas(){
        for (int i=0;i<CommonParas.SysParas.SYSPARACLASS_NUM;i++){
            listIfModify.add(false);
        }
        listSysParaClassName.add(CommonParas.SysParas.SYSPARAS_COMMON_NAME);
        listSysParaClassName.add(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_NAME);
        listSysParaClassName.add(CommonParas.SysParas.SYSPARAS_IMAGE_NAME);
        listSysParaClassName.add(CommonParas.SysParas.SYSPARAS_FILESAVE_NAME);

        FileSystemView fsv = FileSystemView.getFileSystemView(); //注意了，这里重要的一句
        jFileChooserPara.setCurrentDirectory(fsv.getDefaultDirectory()) ;
        
        jTextFieldFileDirOfAlarmDVREX.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX);//设备异常报警声音
        jTextFieldFileDirOfAlarmFieldDetecion.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELDDETECION);//区域入侵报警声音
        jTextFieldFileDirOfAlarmIn.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN);//报警输入报警声音
        jTextFieldFileDirOfAlarmMotion.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION);//移动侦测报警声音
        jTextFieldFileDirOfAlarmOther.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER);//其他报警的报警声音
        jTextFieldFileDirOfAlarmSignalEX.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX);//视频信号异常报警声音
        jTextFieldFileDirOfAlarmTreversePlane.setText(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSEPLANE);//越界侦测报警声音

        jTextFieldFileDirOfCapture.setText(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE);//抓图文件保存路径
        jTextFieldFileDirOfSetup.setText(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP);//设备配置文件保存路径
        jTextFieldFileDirOfVedio.setText(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO);//视频文件保存路径
        
        //设置自定义UI
        jPanelContainer.setUI(new PanelUI_MatteBorder());
        jSplitPaneSysParas.setUI(new SplitPaneUI_White());
        
        

        
        jScrollPaneTree.setUI(new ScrollPaneUI_White());//jScrollPaneAlarmOut
        jScrollPaneTree.getVerticalScrollBar().setUI(new ScrollBarUI_White());
        jScrollPaneTree.getHorizontalScrollBar().setUI(new ScrollBarUI_White());
        
        jPanelSysParas.setUI(new PanelUI_LineBorder());
 
//            jPanelImportIn.setUI(new PanelUI_LineBorder());
//            jPanelImportOut.setUI(new PanelUI_LineBorder());
        CommonParas.setJButtonUnDecorated(jButtonExit);
        
        jTreeSysParas.setCellRenderer(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFirst = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jPanelContainer = new javax.swing.JPanel();
        jSplitPaneSysParas = new javax.swing.JSplitPane();
        jScrollPaneTree = new javax.swing.JScrollPane();
        jTreeSysParas = new javax.swing.JTree();
        jPanelSysParas = new javax.swing.JPanel();
        jPanelHeader = new javax.swing.JPanel();
        jLabelComment = new javax.swing.JLabel();
        jPanelContent = new javax.swing.JPanel();
        jPanelFileSave = new javax.swing.JPanel();
        jLabelVedioSave = new javax.swing.JLabel();
        jLabelCaptureSave = new javax.swing.JLabel();
        jLabelProfileSave = new javax.swing.JLabel();
        jButtonBrowseVedio = new javax.swing.JButton();
        jTextFieldFileDirOfVedio = new javax.swing.JTextField();
        jButtonBrowseCapture = new javax.swing.JButton();
        jTextFieldFileDirOfCapture = new javax.swing.JTextField();
        jButtonBrowseSetup = new javax.swing.JButton();
        jTextFieldFileDirOfSetup = new javax.swing.JTextField();
        jPanelAlarmAudio = new javax.swing.JPanel();
        jLabelAudioMotionDetection = new javax.swing.JLabel();
        jButtonBrowseAlarmMotion = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmMotion = new javax.swing.JTextField();
        jLabelAudioAlarmIn = new javax.swing.JLabel();
        jButtonBrowseAlarmIn = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmIn = new javax.swing.JTextField();
        jLabelAudioDeviceException = new javax.swing.JLabel();
        jButtonBrowseAlarmDVREX = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmDVREX = new javax.swing.JTextField();
        jLabelAudioSignalException = new javax.swing.JLabel();
        jButtonBrowseAlarmSignalEX = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmSignalEX = new javax.swing.JTextField();
        jButtonBrowseAlarmTreversePlane = new javax.swing.JButton();
        jLabelAudioIntrusion = new javax.swing.JLabel();
        jLabelAudioCrossBorder = new javax.swing.JLabel();
        jButtonBrowseAlarmFieldDetecion = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmFieldDetecion = new javax.swing.JTextField();
        jTextFieldFileDirOfAlarmTreversePlane = new javax.swing.JTextField();
        jLabelAudioOtherAlarm = new javax.swing.JLabel();
        jButtonBrowseAlarmOther = new javax.swing.JButton();
        jTextFieldFileDirOfAlarmOther = new javax.swing.JTextField();
        jButtonPlayAlarmOther = new javax.swing.JButton();
        jButtonPlayAlarmMotion = new javax.swing.JButton();
        jButtonPlayAlarmIn = new javax.swing.JButton();
        jButtonPlayAlarmDVREX = new javax.swing.JButton();
        jButtonPlayAlarmSignalEX = new javax.swing.JButton();
        jButtonPlayAlarmTreversePlane = new javax.swing.JButton();
        jButtonPlayAlarmFieldDetecion = new javax.swing.JButton();
        jPanelFooter = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("系统参数配置");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("系统参数配置");

        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jTreeSysParas.setModel(this.initialSysParasTreeModel());
        jTreeSysParas.setRootVisible(false);
        jTreeSysParas.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeSysParasValueChanged(evt);
            }
        });
        jScrollPaneTree.setViewportView(jTreeSysParas);

        jSplitPaneSysParas.setLeftComponent(jScrollPaneTree);

        jPanelSysParas.setLayout(new java.awt.BorderLayout());

        jLabelComment.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabelComment, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(401, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelComment, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
        );

        jPanelSysParas.add(jPanelHeader, java.awt.BorderLayout.PAGE_START);

        jPanelFileSave.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelVedioSave.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelVedioSave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelVedioSave.setText("视频文件保存路径：");
        jPanelFileSave.add(jLabelVedioSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 190, -1));

        jLabelCaptureSave.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelCaptureSave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCaptureSave.setText("抓图文件保存路径：");
        jPanelFileSave.add(jLabelCaptureSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 190, -1));

        jLabelProfileSave.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelProfileSave.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelProfileSave.setText("配置文件保存路径：");
        jPanelFileSave.add(jLabelProfileSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 190, -1));

        jButtonBrowseVedio.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseVedio.setText("...");
        jButtonBrowseVedio.setMaximumSize(new java.awt.Dimension(47, 31));
        jButtonBrowseVedio.setMinimumSize(new java.awt.Dimension(47, 31));
        jButtonBrowseVedio.setPreferredSize(new java.awt.Dimension(47, 31));
        jButtonBrowseVedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseVedioActionPerformed(evt);
            }
        });
        jPanelFileSave.add(jButtonBrowseVedio, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 23, 28));

        jTextFieldFileDirOfVedio.setEditable(false);
        jTextFieldFileDirOfVedio.setText("c:\\digicap");
        jPanelFileSave.add(jTextFieldFileDirOfVedio, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 500, -1));

        jButtonBrowseCapture.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseCapture.setText("...");
        jButtonBrowseCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseCaptureActionPerformed(evt);
            }
        });
        jPanelFileSave.add(jButtonBrowseCapture, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 70, 23, 28));

        jTextFieldFileDirOfCapture.setEditable(false);
        jTextFieldFileDirOfCapture.setText("c:\\digicap");
        jPanelFileSave.add(jTextFieldFileDirOfCapture, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 500, -1));

        jButtonBrowseSetup.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseSetup.setText("...");
        jButtonBrowseSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseSetupActionPerformed(evt);
            }
        });
        jPanelFileSave.add(jButtonBrowseSetup, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 120, 23, 28));

        jTextFieldFileDirOfSetup.setEditable(false);
        jTextFieldFileDirOfSetup.setText("c:\\digicap");
        jPanelFileSave.add(jTextFieldFileDirOfSetup, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 500, -1));

        jPanelAlarmAudio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelAudioMotionDetection.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioMotionDetection.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioMotionDetection.setText("移动侦测报警声音：");
        jPanelAlarmAudio.add(jLabelAudioMotionDetection, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 220, -1));

        jButtonBrowseAlarmMotion.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmMotion.setText("...");
        jButtonBrowseAlarmMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmMotionActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmMotion, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 23, 28));

        jTextFieldFileDirOfAlarmMotion.setEditable(false);
        jTextFieldFileDirOfAlarmMotion.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmMotion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 480, -1));

        jLabelAudioAlarmIn.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioAlarmIn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioAlarmIn.setText("报警输入报警声音：");
        jPanelAlarmAudio.add(jLabelAudioAlarmIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 220, -1));

        jButtonBrowseAlarmIn.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmIn.setText("...");
        jButtonBrowseAlarmIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmInActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 23, 28));

        jTextFieldFileDirOfAlarmIn.setEditable(false);
        jTextFieldFileDirOfAlarmIn.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 480, -1));

        jLabelAudioDeviceException.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioDeviceException.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioDeviceException.setText("设备异常报警声音：");
        jPanelAlarmAudio.add(jLabelAudioDeviceException, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 220, -1));

        jButtonBrowseAlarmDVREX.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmDVREX.setText("...");
        jButtonBrowseAlarmDVREX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmDVREXActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmDVREX, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 23, 28));

        jTextFieldFileDirOfAlarmDVREX.setEditable(false);
        jTextFieldFileDirOfAlarmDVREX.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmDVREX, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 480, -1));

        jLabelAudioSignalException.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioSignalException.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioSignalException.setText("信号异常报警声音：");
        jPanelAlarmAudio.add(jLabelAudioSignalException, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 220, -1));

        jButtonBrowseAlarmSignalEX.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmSignalEX.setText("...");
        jButtonBrowseAlarmSignalEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmSignalEXActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmSignalEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 23, 28));

        jTextFieldFileDirOfAlarmSignalEX.setEditable(false);
        jTextFieldFileDirOfAlarmSignalEX.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmSignalEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 480, -1));

        jButtonBrowseAlarmTreversePlane.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmTreversePlane.setText("...");
        jButtonBrowseAlarmTreversePlane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmTreversePlaneActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmTreversePlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 23, 28));

        jLabelAudioIntrusion.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioIntrusion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioIntrusion.setText("区域入侵报警声音：");
        jPanelAlarmAudio.add(jLabelAudioIntrusion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 220, -1));

        jLabelAudioCrossBorder.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioCrossBorder.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioCrossBorder.setText("越界侦测报警声音：");
        jPanelAlarmAudio.add(jLabelAudioCrossBorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 220, -1));

        jButtonBrowseAlarmFieldDetecion.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmFieldDetecion.setText("...");
        jButtonBrowseAlarmFieldDetecion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmFieldDetecionActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmFieldDetecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 220, 23, 28));

        jTextFieldFileDirOfAlarmFieldDetecion.setEditable(false);
        jTextFieldFileDirOfAlarmFieldDetecion.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmFieldDetecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 480, -1));

        jTextFieldFileDirOfAlarmTreversePlane.setEditable(false);
        jTextFieldFileDirOfAlarmTreversePlane.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmTreversePlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 480, -1));

        jLabelAudioOtherAlarm.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelAudioOtherAlarm.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelAudioOtherAlarm.setText("其他报警声音：");
        jPanelAlarmAudio.add(jLabelAudioOtherAlarm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 220, -1));

        jButtonBrowseAlarmOther.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jButtonBrowseAlarmOther.setText("...");
        jButtonBrowseAlarmOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseAlarmOtherActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonBrowseAlarmOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, 23, 28));

        jTextFieldFileDirOfAlarmOther.setEditable(false);
        jTextFieldFileDirOfAlarmOther.setText("c:\\digicap");
        jPanelAlarmAudio.add(jTextFieldFileDirOfAlarmOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 480, -1));

        jButtonPlayAlarmOther.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmOtherActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmOther, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, 30, 30));

        jButtonPlayAlarmMotion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmMotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmMotionActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmMotion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 20, 30, 30));

        jButtonPlayAlarmIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmInActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 60, 30, 30));

        jButtonPlayAlarmDVREX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmDVREX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmDVREXActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmDVREX, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 30, 30));

        jButtonPlayAlarmSignalEX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmSignalEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmSignalEXActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmSignalEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 140, 30, 30));

        jButtonPlayAlarmTreversePlane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmTreversePlane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmTreversePlaneActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmTreversePlane, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, 30, 30));

        jButtonPlayAlarmFieldDetecion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/broadcast.png"))); // NOI18N
        jButtonPlayAlarmFieldDetecion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayAlarmFieldDetecionActionPerformed(evt);
            }
        });
        jPanelAlarmAudio.add(jButtonPlayAlarmFieldDetecion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 220, 30, 30));

        javax.swing.GroupLayout jPanelContentLayout = new javax.swing.GroupLayout(jPanelContent);
        jPanelContent.setLayout(jPanelContentLayout);
        jPanelContentLayout.setHorizontalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentLayout.createSequentialGroup()
                .addGroup(jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelAlarmAudio, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                    .addComponent(jPanelFileSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelContentLayout.setVerticalGroup(
            jPanelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentLayout.createSequentialGroup()
                .addComponent(jPanelFileSave, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAlarmAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelSysParas.add(jPanelContent, java.awt.BorderLayout.CENTER);

        jButtonSave.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/ok.png"))); // NOI18N
        jButtonSave.setText("保 存");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel.png"))); // NOI18N
        jButtonCancel.setText("取 消");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFooterLayout = new javax.swing.GroupLayout(jPanelFooter);
        jPanelFooter.setLayout(jPanelFooterLayout);
        jPanelFooterLayout.setHorizontalGroup(
            jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFooterLayout.createSequentialGroup()
                .addContainerGap(510, Short.MAX_VALUE)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCancel)
                .addGap(17, 17, 17))
        );

        jPanelFooterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonCancel, jButtonSave});

        jPanelFooterLayout.setVerticalGroup(
            jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSysParas.add(jPanelFooter, java.awt.BorderLayout.PAGE_END);

        jSplitPaneSysParas.setRightComponent(jPanelSysParas);

        javax.swing.GroupLayout jPanelContainerLayout = new javax.swing.GroupLayout(jPanelContainer);
        jPanelContainer.setLayout(jPanelContainerLayout);
        jPanelContainerLayout.setHorizontalGroup(
            jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1108, Short.MAX_VALUE)
            .addGroup(jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPaneSysParas))
        );
        jPanelContainerLayout.setVerticalGroup(
            jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 721, Short.MAX_VALUE)
            .addGroup(jPanelContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPaneSysParas, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelContainer, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        createSysParasTree();
    }//GEN-LAST:event_formWindowOpened

    private void jTreeSysParasValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeSysParasValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeSysParas.getLastSelectedPathComponent();
        String nodeName = selectionNode.toString();
        jLabelComment.setText(nodeName);
        if (nodeName.equals(CommonParas.SysParas.SYSPARAS_FILESAVE_NAME)){
            jPanelFileSave.setVisible(true);
                jPanelAlarmAudio.setVisible(false);
        }else if (nodeName.equals(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_NAME)){
            jPanelFileSave.setVisible(false);
            jPanelAlarmAudio.setVisible(true);
        }else{}
//        switch (nodeName) {
//            case CommonParas.SysParas.SYSPARAS_FILESAVE_NAME:
//                
//                jPanelFileSave.setVisible(true);
//                jPanelAlarmAudio.setVisible(false);
//
//                break;
//            case CommonParas.SysParas.SYSPARAS_ALARMAUDIO_NAME:
//                jPanelFileSave.setVisible(false);
//                jPanelAlarmAudio.setVisible(true);
//                break;
//            default:
//                break;
//        }
        sSysParaClassName = nodeName;
 
    }//GEN-LAST:event_jTreeSysParasValueChanged

    private void jButtonBrowseAlarmMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmMotionActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmMotion);
    }//GEN-LAST:event_jButtonBrowseAlarmMotionActionPerformed

    private void jButtonBrowseAlarmInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmInActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmIn);
    }//GEN-LAST:event_jButtonBrowseAlarmInActionPerformed

    private void jButtonBrowseAlarmDVREXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmDVREXActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmDVREX);
    }//GEN-LAST:event_jButtonBrowseAlarmDVREXActionPerformed

    private void jButtonBrowseAlarmSignalEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmSignalEXActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmSignalEX);
    }//GEN-LAST:event_jButtonBrowseAlarmSignalEXActionPerformed

    private void jButtonBrowseAlarmTreversePlaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmTreversePlaneActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmTreversePlane);
    }//GEN-LAST:event_jButtonBrowseAlarmTreversePlaneActionPerformed

    private void jButtonBrowseAlarmFieldDetecionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmFieldDetecionActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmFieldDetecion);
    }//GEN-LAST:event_jButtonBrowseAlarmFieldDetecionActionPerformed

    private void jButtonBrowseAlarmOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseAlarmOtherActionPerformed
        // TODO add your handling code here:
        selectAudioFile(jTextFieldFileDirOfAlarmOther);
    }//GEN-LAST:event_jButtonBrowseAlarmOtherActionPerformed

    private void jButtonBrowseVedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseVedioActionPerformed
        // TODO add your handling code here:
        selectDirectory(jTextFieldFileDirOfVedio);
    }//GEN-LAST:event_jButtonBrowseVedioActionPerformed

    private void jButtonBrowseCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseCaptureActionPerformed
        // TODO add your handling code here:
        selectDirectory(jTextFieldFileDirOfCapture);
    }//GEN-LAST:event_jButtonBrowseCaptureActionPerformed

    private void jButtonBrowseSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseSetupActionPerformed
        // TODO add your handling code here:
        selectDirectory(jTextFieldFileDirOfSetup);
    }//GEN-LAST:event_jButtonBrowseSetupActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        //存储数据库，并进行系统公用参数设置
        saveOneClassParas(sSysParaClassName);

    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonPlayAlarmMotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmMotionActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmMotion);
    }//GEN-LAST:event_jButtonPlayAlarmMotionActionPerformed

    private void jButtonPlayAlarmInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmInActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmIn);
    }//GEN-LAST:event_jButtonPlayAlarmInActionPerformed

    private void jButtonPlayAlarmDVREXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmDVREXActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmDVREX);
    }//GEN-LAST:event_jButtonPlayAlarmDVREXActionPerformed

    private void jButtonPlayAlarmSignalEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmSignalEXActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmSignalEX);
    }//GEN-LAST:event_jButtonPlayAlarmSignalEXActionPerformed

    private void jButtonPlayAlarmTreversePlaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmTreversePlaneActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmTreversePlane);
    }//GEN-LAST:event_jButtonPlayAlarmTreversePlaneActionPerformed

    private void jButtonPlayAlarmFieldDetecionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmFieldDetecionActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmFieldDetecion);
    }//GEN-LAST:event_jButtonPlayAlarmFieldDetecionActionPerformed

    private void jButtonPlayAlarmOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayAlarmOtherActionPerformed
        // TODO add your handling code here:
        playWaveFile(jTextFieldFileDirOfAlarmOther);
    }//GEN-LAST:event_jButtonPlayAlarmOtherActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        checkBeforeClosing();
    }//GEN-LAST:event_formWindowClosing

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        checkBeforeClosing();
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        checkBeforeClosing();
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void checkBeforeClosing(){
        if (ifNotSave()) {
            if ((JOptionPane.showConfirmDialog(this, sRemindSave,  
                    sRemind ,JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)) // "系统参数已经被更改，是否保存？""提醒"
                for (int i=0;i<listIfModify.size();i++){
                    if (listIfModify.get(i)){
                        saveOneClassParas(listSysParaClassName.get(i));
                    }
                }
        }
    }
    
    
    private void saveOneClassParas(String SysParaClassName){
        ArrayList<String> NewList = new ArrayList();
        int IndexOfParaClass = 0;
        
        if (SysParaClassName.equals(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_NAME)){
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX = jTextFieldFileDirOfAlarmDVREX.getText();//设备异常报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELDDETECION = jTextFieldFileDirOfAlarmFieldDetecion.getText();//区域入侵报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN = jTextFieldFileDirOfAlarmIn.getText();//报警输入报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION = jTextFieldFileDirOfAlarmMotion.getText();//移动侦测报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER = jTextFieldFileDirOfAlarmOther.getText();//其他报警的报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX = jTextFieldFileDirOfAlarmSignalEX.getText();//视频信号异常报警声音
            CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSEPLANE = jTextFieldFileDirOfAlarmTreversePlane.getText();//越界侦测报警声音


            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELD_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELDDETECION));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSE_CODE, 
                                                                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSEPLANE));
            IndexOfParaClass = 1;
        }else if (SysParaClassName.equals(CommonParas.SysParas.SYSPARAS_FILESAVE_NAME)){
            CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE = jTextFieldFileDirOfCapture.getText();//抓图文件保存路径
            CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP = jTextFieldFileDirOfSetup.getText();//设备配置文件保存路径
            CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO = jTextFieldFileDirOfVedio.getText();//视频文件保存路径

            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP));
            NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO));
            IndexOfParaClass = 3;
        }else{}
//        switch(SysParaClassName) {
//            case CommonParas.SysParas.SYSPARAS_COMMON_NAME:
//                
//                break;
//            case CommonParas.SysParas.SYSPARAS_ALARMAUDIO_NAME:
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX = jTextFieldFileDirOfAlarmDVREX.getText();//设备异常报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELDDETECION = jTextFieldFileDirOfAlarmFieldDetecion.getText();//区域入侵报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN = jTextFieldFileDirOfAlarmIn.getText();//报警输入报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION = jTextFieldFileDirOfAlarmMotion.getText();//移动侦测报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER = jTextFieldFileDirOfAlarmOther.getText();//其他报警的报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX = jTextFieldFileDirOfAlarmSignalEX.getText();//视频信号异常报警声音
//                CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSEPLANE = jTextFieldFileDirOfAlarmTreversePlane.getText();//越界侦测报警声音
//                
//
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_DVREX));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELD_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_FIELDDETECION));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_ALARMIN));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_MOTION));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_OTHER));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_SIGNALEX));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSE_CODE, 
//                                                                    CommonParas.SysParas.SYSPARAS_ALARMAUDIO_TREVERSEPLANE));
//                IndexOfParaClass = 1;
//                break;
//            case CommonParas.SysParas.SYSPARAS_IMAGE_NAME:
//                break;
//            case CommonParas.SysParas.SYSPARAS_FILESAVE_NAME:
//                
//                CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE = jTextFieldFileDirOfCapture.getText();//抓图文件保存路径
//                CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP = jTextFieldFileDirOfSetup.getText();//设备配置文件保存路径
//                CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO = jTextFieldFileDirOfVedio.getText();//视频文件保存路径
//                
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_CAPTURE));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_SETUP));
//                NewList.add(SysParaCodesBean.getStringUpdateCommand(CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO_CODE, CommonParas.SysParas.SYSPARAS_FILESAVEDIR_VEDIO));
//                IndexOfParaClass = 3;
//                break;
//            default:
//                break;
//        
//        }
        if (NewList.size() > 0){
            if (SysParaCodesBean.batchInsertUpdate(NewList, sFileName) > 0) {
                writeSysParasSetLog(SysParaClassName);
                listIfModify.set(IndexOfParaClass, false);//取消未保存状态
            }else{
                writeSysParasSetErrorLog(SysParaClassName);
            }
        }
    }
    
    private void playWaveFile(JTextField TextField){
        try {
            File newFile = new File(TextField.getText());
            URL Url = newFile.toURI().toURL();
            AudioClip co1 = JApplet.newAudioClip(Url);
            co1.play();
//            playAlarmVoiceFile = WaveFilePlay.getWaveFilePlay(Url);
//            //playAlarmVoiceFile = WaveFilePlay.getWaveFilePlay();
//            playAlarmVoiceFile.startPlayOnce();
        } catch (Exception ex) {
            TxtLogger.append(sFileName, "PlayWaveFile.run()","播放声音文件时，出现错误" 
                                +"\r\n                       Exception:" + ex.toString());   
        }
        
    }
    private void selectDirectory(JTextField TextField){
        try{
            //JFileChooser JFileChooser1 = new JFileChooser("");//启动一个文件选择器
            jFileChooserPara.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY );

            jFileChooserPara.setDialogTitle(sSelectPath);// "请选择文件保存路径..."
            //jFileChooserPara.setApproveButtonText("确定");

            if (JFileChooser.APPROVE_OPTION == jFileChooserPara.showOpenDialog(this))//如果文件选择完毕
            {
                String filepath = jFileChooserPara.getSelectedFile().getAbsolutePath();//获取被选择文件的路径
                //JFileChooser1.setCurrentDirectory(filepath);
                TextField.setText(filepath);//输出文件路径
                listIfModify.set(3, true);//设置未保存状态；文件保存路径为系统参数第4项
            }
        }catch (Exception e){
            TxtLogger.append(this.sFileName, "selectDirectory()","系统在获得文件保存路径过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
    }
    
    private void selectAudioFile(JTextField TextField){
        try{
            //JFileChooser JFileChooser1 = new JFileChooser("");//启动一个文件选择器

            jFileChooserPara.setDialogTitle(sSelectAudioFile);// "请选择音频文件..."
            //jFileChooserPara.setApproveButtonText("确定");

            FileNameExtensionFilter filter = new FileNameExtensionFilter(sAudioFileFilter, "wav");// "音频文件（*.wav）"
            jFileChooserPara.setFileFilter(filter);
            if (JFileChooser.APPROVE_OPTION == jFileChooserPara.showOpenDialog(this))//如果文件选择完毕
            {
                String filepath = jFileChooserPara.getSelectedFile().getPath();//获取被选择文件的路径
                TextField.setText(filepath);//输出文件路径
                listIfModify.set(1, true);//设置未保存状态；报警声音为系统参数第2项
            }
        }catch (Exception e){
            TxtLogger.append(this.sFileName, "selectAudioFile()","系统在选择音频文件过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
    }

    /**
        *函数:      createSysParasTree
        *函数描述:  建立系统参数树
     */
    private void createSysParasTree(){
        
        try{
            DefaultTreeModel SysParasTreeModel = ((DefaultTreeModel) jTreeSysParas.getModel());//获取树模型
            //一次只能选一个节点
            jTreeSysParas.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION); 
            listSysParas = CodesBean.getCodesList(CommonParas.SysParas.SYSPARAS_CODE, "1", sFileName);
            if (listSysParas == null) return;

            m_SysParasRoot.removeAllChildren();//根节点删除所有的子节点
            SysParasTreeModel.reload();//将添加的节点显示到界面

            for (int i=0;i<listSysParas.size();i++){
                CodesBean SysParasBean = listSysParas.get(i);
                DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(SysParasBean.getCodename());
                SysParasTreeModel.insertNodeInto(newNode, m_SysParasRoot,i);
            }
            SysParasTreeModel.reload();//将添加的节点显示到界面
            jTreeSysParas.expandRow(0);

            //选中第一个组的第一个设备类型
            jTreeSysParas.setSelectionInterval(0, 0);//选中第二个节点（第一个节点的第一个子节点）
            jTreeSysParas.setRowHeight(50);
            jTreeSysParas.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        }catch (Exception e){
            TxtLogger.append(sFileName, "createSysParasTree()","系统在建立系统参数树过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
    }
    
    
    /**
        *函数:      ifNotSave
        *函数描述:  检查是否还未保存
        * @return DefaultTreeModel
     */
    private boolean ifNotSave(){
        for (int i=0;i<CommonParas.SysParas.SYSPARACLASS_NUM;i++){
            if (listIfModify.get(i)) return true;
        }
        return false;
    }
    /**
        *函数:      initialResourceTreeModel4
        *函数描述:  初始化设备资源树
        * @return DefaultTreeModel
     */
    private DefaultTreeModel initialSysParasTreeModel()
    {
        m_SysParasRoot = new DefaultMutableTreeNode(sAllDevices);// "全部设备"
        DefaultTreeModel myDefaultTreeModel = new DefaultTreeModel(m_SysParasRoot);//使用根节点创建模型
        return myDefaultTreeModel;
    }
    
    public void writeSysParasSetLog(String Description){
        //操作时间、日志类型、描述信息、调用的文件名
        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, MessageFormat.format(sSetPara , Description),   sFileName);//"设置"+ Description
        CommonParas.showMessage(MessageFormat.format(sSetParaSucc  , Description), sFileName);//"成功进行" + Description + "设置。系统重启后生效！"
    }
  
    public void writeSysParasSetErrorLog(String Description){

        //写错误日志
        //操作时间、描述信息、日志备注、调用的文件名
        CommonParas.SystemWriteErrorLog("",  sSystemparaSetFail,  Description, sFileName);// "系统参数设置失败"
        CommonParas.showMessage( MessageFormat.format(sSetParaFail , Description), sFileName);//"设置"+ Description + "失败"
    }  
    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogSysParasSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogSysParasSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogSysParasSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogSysParasSet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogSysParasSet dialog = new JDialogSysParasSet(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sTitle = Locales.getString("ClassStrings", "JDialogSysParasSet.sTitle");  //系统参数设置
        sRemindSave = Locales.getString("ClassStrings", "JDialogSysParasSet.sRemindSave");  //系统参数已经被更改，是否保存？ 
        sRemind = Locales.getString("ClassStrings", "JDialogSysParasSet.sRemind");  //提醒
        sSetPara = Locales.getString("ClassStrings", "JDialogSysParasSet.sSetPara");  //设置{0}
        sSetParaSucc = Locales.getString("ClassStrings", "JDialogSysParasSet.sSetParaSucc");  //成功进行{0}设置。系统重启后生效！
        sSystemparaSetFail = Locales.getString("ClassStrings", "JDialogSysParasSet.sSystemparaSetFail");  //系统参数设置失败
        sSetParaFail = Locales.getString("ClassStrings", "JDialogSysParasSet.sSetParaFail");  //设置{0}失败
        sSelectPath = Locales.getString("ClassStrings", "JDialogSysParasSet.sSelectPath");  //请选择文件保存路径...
        sSelectAudioFile = Locales.getString("ClassStrings", "JDialogSysParasSet.sSelectAudioFile");  //请选择音频文件...
        sAudioFileFilter = Locales.getString("ClassStrings", "JDialogSysParasSet.sAudioFileFilter");  //音频文件（*.wav）
        sAllDevices = Locales.getString("ClassStrings", "JDialogSysParasSet.sAllDevices");  //全部设备
        //标签和按钮显示
        jLabelVedioSave.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelVedioSave"));  //视频文件保存路径：
        jLabelCaptureSave.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelCaptureSave"));  //抓图文件保存路径：
        jLabelProfileSave.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelProfileSave"));  //配置文件保存路径：
        jLabelAudioMotionDetection.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioMotionDetection"));  //移动侦测报警声音：
        jLabelAudioAlarmIn.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioAlarmIn"));  //报警输入报警声音：
        jLabelAudioDeviceException.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioDeviceException"));  //设备异常报警声音：
        jLabelAudioSignalException.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioSignalException"));  //信号异常报警声音：
        jLabelAudioIntrusion.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioIntrusion"));  //区域入侵报警声音：
        jLabelAudioCrossBorder.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioCrossBorder"));  //越界侦测报警声音：
        jLabelAudioOtherAlarm.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jLabelAudioOtherAlarm"));  //其他报警声音：
        jButtonSave.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jButtonSave"));  //保 存
        jButtonCancel.setText( Locales.getString("ClassStrings", "JDialogSysParasSet.jButtonCancel"));  //取 消



        //国际化之后再进行
        this.setTitle(sTitle);  //系统参数设置
        jLabelTitle.setText(sTitle);  //系统参数设置


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseAlarmDVREX;
    private javax.swing.JButton jButtonBrowseAlarmFieldDetecion;
    private javax.swing.JButton jButtonBrowseAlarmIn;
    private javax.swing.JButton jButtonBrowseAlarmMotion;
    private javax.swing.JButton jButtonBrowseAlarmOther;
    private javax.swing.JButton jButtonBrowseAlarmSignalEX;
    private javax.swing.JButton jButtonBrowseAlarmTreversePlane;
    private javax.swing.JButton jButtonBrowseCapture;
    private javax.swing.JButton jButtonBrowseSetup;
    private javax.swing.JButton jButtonBrowseVedio;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonPlayAlarmDVREX;
    private javax.swing.JButton jButtonPlayAlarmFieldDetecion;
    private javax.swing.JButton jButtonPlayAlarmIn;
    private javax.swing.JButton jButtonPlayAlarmMotion;
    private javax.swing.JButton jButtonPlayAlarmOther;
    private javax.swing.JButton jButtonPlayAlarmSignalEX;
    private javax.swing.JButton jButtonPlayAlarmTreversePlane;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabelAudioAlarmIn;
    private javax.swing.JLabel jLabelAudioCrossBorder;
    private javax.swing.JLabel jLabelAudioDeviceException;
    private javax.swing.JLabel jLabelAudioIntrusion;
    private javax.swing.JLabel jLabelAudioMotionDetection;
    private javax.swing.JLabel jLabelAudioOtherAlarm;
    private javax.swing.JLabel jLabelAudioSignalException;
    private javax.swing.JLabel jLabelCaptureSave;
    private javax.swing.JLabel jLabelComment;
    private javax.swing.JLabel jLabelProfileSave;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelVedioSave;
    private javax.swing.JPanel jPanelAlarmAudio;
    private javax.swing.JPanel jPanelContainer;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelFileSave;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JPanel jPanelFooter;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelSysParas;
    private javax.swing.JScrollPane jScrollPaneTree;
    private javax.swing.JSplitPane jSplitPaneSysParas;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmDVREX;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmFieldDetecion;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmIn;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmMotion;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmOther;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmSignalEX;
    private javax.swing.JTextField jTextFieldFileDirOfAlarmTreversePlane;
    private javax.swing.JTextField jTextFieldFileDirOfCapture;
    private javax.swing.JTextField jTextFieldFileDirOfSetup;
    private javax.swing.JTextField jTextFieldFileDirOfVedio;
    private javax.swing.JTree jTreeSysParas;
    // End of variables declaration//GEN-END:variables

    private String sTitle = "系统参数配置";
    private String sRemindSave = "系统参数已经被更改，是否保存？ ";
    private String sRemind = "提醒";
    private String sSetPara = "设置{0}";
    private String sSetParaSucc = "成功进行{0}设置。系统重启后生效！";
    private String sSystemparaSetFail = "系统参数配置失败";
    private String sSetParaFail = "设置{0}失败";
    private String sSelectPath = "请选择文件保存路径...";
    private String sSelectAudioFile = "请选择音频文件...";
    private String sAudioFileFilter = "音频文件（*.wav）";
    private String sAllDevices = "全部设备";

}
