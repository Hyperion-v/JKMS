/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.awt.Component;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Hashtable;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JSpinner;
import javax.swing.border.TitledBorder;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import jyms.data.TimeTemplateBean;
import jyms.data.TxtLogger;

/**
 *
 * @author John
 */
public class JDialogTimeTemplate3 extends javax.swing.JDialog {
    
    private final String sFileName = this.getClass().getName() + ".java";
//    private final int iPanelDeviceHeight;
//    private final int iJButtonCanelXWidth;
//    private final int iFrameHeight;
//    private final int iFrameWidth;
    
    private boolean bAllDay;//是否全天模式
    private boolean bWorkDay;//是否工作日模式
    private String sTimeTemplateName;//时间模板名称
    int iInsertOrUpdate;//0添加；1修改；
    private int iState = -1;//0添加；1修改；-1取消
    ArrayList<String> ListInsertOrUpdateStr = new ArrayList<String>();//保存添加或者修改的SQL语句列表
    
    private ArrayList<TimeTemplateBean> listTimeTemplateBean;//

    public HCNetSDK.NET_DVR_SCHEDTIMEWEEK[] strSchedTimeWeek; //每天一个时段，共7天
    //参数传递模式。“listTimeTemplateBean”表示是以listTimeTemplateBean为参数传递；“strSchedTimeWeek”表示是以strSchedTime为参数传递；
    private String sMode;
    
    /**
     * Creates new form JDialogTimeTemplate
     */
    public JDialogTimeTemplate3(java.awt.Frame parent, boolean modal) {
        this(parent, modal,0,null);
    }
    /**
     * Creates new form JDialogTimeTemplate
     */
    public JDialogTimeTemplate3(java.awt.Frame parent, boolean modal,int InserOrUpdate,ArrayList<TimeTemplateBean> listTimeTemplate) {
        super(parent, modal);
        
        initComponents();
//        iPanelDeviceHeight = jPanelWeek1.getHeight(); 
//        if ((jLabelUserDefined.getX() + jLabelUserDefined.getWidth())>(jPanelWeek1.getX() + jPanelWeek1.getWidth())) 
//            iJButtonCanelXWidth = jLabelUserDefined.getX() + jLabelUserDefined.getWidth()+30;
//        else iJButtonCanelXWidth = jPanelWeek1.getX() + jPanelWeek1.getWidth()+30;
        
//        iFrameHeight = this.getHeight();
//        iFrameWidth = this.getWidth();
        this.iInsertOrUpdate = InserOrUpdate;
        if (listTimeTemplate == null) listTimeTemplateBean = new ArrayList<TimeTemplateBean>();
        else listTimeTemplateBean = listTimeTemplate;
        sMode = "listTimeTemplateBean";
    }
    /**
     * Creates new form JDialogTimeTemplate
     */
    public JDialogTimeTemplate3(java.awt.Frame parent, boolean modal,String TemplateName,HCNetSDK.NET_DVR_SCHEDTIMEWEEK[] SchedTime) {
        super(parent, modal);
        
        initComponents();
//        iPanelDeviceHeight = jPanelWeek1.getHeight()+10; 
//        if ((jLabelUserDefined.getX() + jLabelUserDefined.getWidth())>(jPanelWeek1.getX() + jPanelWeek1.getWidth())) 
//            iJButtonCanelXWidth = jLabelUserDefined.getX() + jLabelUserDefined.getWidth()+30;
//        else iJButtonCanelXWidth = jPanelWeek1.getX() + jPanelWeek1.getWidth()+30;
        
//        iFrameHeight = this.getHeight();
//        iFrameWidth = this.getWidth();

        this.strSchedTimeWeek = SchedTime;//每天一个时段，共7天
        sMode = "strSchedTimeWeek";
        if (TemplateName == null || TemplateName.equals("") || TemplateName.equals("添加模板")) {
            //如果是新建模板，可修改名称
//            jCheckBoxModify.setSelected(true);
//            jCheckBoxModify.setText("新建模板");//存储该模板
            this.iInsertOrUpdate = 0;
        }//添加
        else {
            //如果是修改模板，则不允许修改名称，可以修改布防时间，但是修改不了原先已经使用该模板的设备布防情况（在报警参数设置窗口实现）
            jTextFieldTemplateName.setText(TemplateName);
            jTextFieldTemplateName.setEditable(false);
            jComboBoxUserDefined.setSelectedItem("自定义模式");
            this.iInsertOrUpdate = 1;
        }
        showStrSchedTimeWeek();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupRecordModel = new javax.swing.ButtonGroup();
        jButtonOK = new javax.swing.JButton();
        jButtonCanel = new javax.swing.JButton();
        jTextFieldTemplateName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jSpinnerHour82 = new javax.swing.JSpinner();
        jLabel42 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinnerMinute82 = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jSpinnerMinute72 = new javax.swing.JSpinner();
        jSpinnerHour11 = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerMinute22 = new javax.swing.JSpinner();
        jSpinnerMinute81 = new javax.swing.JSpinner();
        jLabel46 = new javax.swing.JLabel();
        jSpinnerHour81 = new javax.swing.JSpinner();
        jLabel45 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerHour32 = new javax.swing.JSpinner();
        jSpinnerMinute11 = new javax.swing.JSpinner();
        jSpinnerHour31 = new javax.swing.JSpinner();
        jSpinnerMinute31 = new javax.swing.JSpinner();
        jLabel26 = new javax.swing.JLabel();
        jSpinnerHour12 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerMinute12 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerHour51 = new javax.swing.JSpinner();
        jLabel36 = new javax.swing.JLabel();
        jSpinnerHour61 = new javax.swing.JSpinner();
        jLabel38 = new javax.swing.JLabel();
        jSpinnerHour62 = new javax.swing.JSpinner();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jSpinnerMinute61 = new javax.swing.JSpinner();
        jLabel41 = new javax.swing.JLabel();
        jSpinnerMinute51 = new javax.swing.JSpinner();
        jLabel35 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jSpinnerHour52 = new javax.swing.JSpinner();
        jLabel33 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jSpinnerMinute52 = new javax.swing.JSpinner();
        jLabel37 = new javax.swing.JLabel();
        jSpinnerHour21 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSpinnerMinute62 = new javax.swing.JSpinner();
        jSpinnerMinute21 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerMinute32 = new javax.swing.JSpinner();
        jLabel49 = new javax.swing.JLabel();
        jSpinnerHour72 = new javax.swing.JSpinner();
        jLabel48 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jSpinnerMinute42 = new javax.swing.JSpinner();
        jSpinnerHour71 = new javax.swing.JSpinner();
        jLabel30 = new javax.swing.JLabel();
        jSpinnerMinute71 = new javax.swing.JSpinner();
        jSpinnerMinute41 = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jSpinnerHour41 = new javax.swing.JSpinner();
        jLabel21 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSpinnerHour42 = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSpinnerHour22 = new javax.swing.JSpinner();
        jComboBoxRecordType1 = new javax.swing.JComboBox();
        jComboBoxRecordType2 = new javax.swing.JComboBox();
        jComboBoxRecordType3 = new javax.swing.JComboBox();
        jComboBoxRecordType4 = new javax.swing.JComboBox();
        jComboBoxRecordType5 = new javax.swing.JComboBox();
        jComboBoxRecordType6 = new javax.swing.JComboBox();
        jComboBoxRecordType7 = new javax.swing.JComboBox();
        jComboBoxRecordType8 = new javax.swing.JComboBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jRadioButtonAllDay = new javax.swing.JRadioButton();
        jRadioButtonWorkDay = new javax.swing.JRadioButton();
        jRadioButtonUserDefined = new javax.swing.JRadioButton();
        jComboBoxUserDefined = new javax.swing.JComboBox<>();
        jLabelUserDefined = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel50 = new javax.swing.JLabel();
        jComboBoxWeekDay = new javax.swing.JComboBox();
        jCheckBoxAllDay = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("时间模板");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButtonOK.setText("保存");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCanel.setText("取消");
        jButtonCanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanelActionPerformed(evt);
            }
        });

        jLabel1.setText("模板名称：");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "时间模板", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("微软雅黑", 0, 16))); // NOI18N

        jSpinnerHour82.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel42.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel42.setText("时");

        jLabel9.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel9.setText("时");

        jSpinnerMinute82.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel13.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel13.setText("分");

        jSpinnerMinute72.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerHour11.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel27.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel27.setText("时");

        jLabel7.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel7.setText("时");

        jSpinnerMinute22.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerMinute81.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel46.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel46.setText("分");

        jSpinnerHour81.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel45.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel45.setText("时");

        jLabel44.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel44.setText("分");

        jLabel43.setText("——");

        jLabel24.setText("——");

        jLabel25.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel25.setText("分");

        jLabel23.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel23.setText("分");

        jLabel10.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel10.setText("分");

        jSpinnerHour32.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jSpinnerMinute11.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerHour31.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jSpinnerMinute31.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel26.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel26.setText("时");

        jSpinnerHour12.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel12.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel12.setText("分");

        jLabel8.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel8.setText("时");

        jSpinnerMinute12.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel11.setText("——");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("时间段1");

        jSpinnerHour51.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel36.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel36.setText("时");

        jSpinnerHour61.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel38.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel38.setText("分");

        jSpinnerHour62.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel39.setText("——");

        jLabel40.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel40.setText("分");

        jSpinnerMinute61.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel41.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel41.setText("时");

        jSpinnerMinute51.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel35.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel35.setText("分");

        jLabel34.setText("——");

        jSpinnerHour52.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel33.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel33.setText("分");

        jLabel32.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel32.setText("时");

        jSpinnerMinute52.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel37.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel37.setText("时");

        jSpinnerHour21.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("时间段2");

        jLabel16.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel16.setText("时");

        jSpinnerMinute62.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerMinute21.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("时间段4");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("时间段3");

        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("时间段6");

        jLabel22.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel22.setText("时");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("时间段5");

        jSpinnerMinute32.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("时间段8");

        jSpinnerHour72.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("时间段7");

        jLabel29.setText("——");

        jLabel28.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel28.setText("分");

        jLabel31.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel31.setText("时");

        jSpinnerMinute42.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerHour71.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel30.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel30.setText("分");

        jSpinnerMinute71.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jSpinnerMinute41.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel20.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel20.setText("分");

        jSpinnerHour41.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel21.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel21.setText("时");

        jLabel18.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel18.setText("分");

        jLabel19.setText("——");

        jSpinnerHour42.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel17.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel17.setText("时");

        jLabel14.setText("——");

        jLabel15.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel15.setText("分");

        jSpinnerHour22.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jComboBoxRecordType1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        jComboBoxRecordType8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "定时录像-0", "移动侦测录像-1", "报警录像-2", "移动侦测或报警录像-3", "移动侦测和报警录像-4", "命令触发录像-5", "智能报警录像-6", "全部事件-13" }));

        buttonGroupRecordModel.add(jRadioButtonAllDay);
        jRadioButtonAllDay.setText("全天模式");
        jRadioButtonAllDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAllDayActionPerformed(evt);
            }
        });

        buttonGroupRecordModel.add(jRadioButtonWorkDay);
        jRadioButtonWorkDay.setText("工作日模式");
        jRadioButtonWorkDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWorkDayActionPerformed(evt);
            }
        });

        buttonGroupRecordModel.add(jRadioButtonUserDefined);
        jRadioButtonUserDefined.setSelected(true);
        jRadioButtonUserDefined.setText("自定义模式");
        jRadioButtonUserDefined.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonUserDefinedActionPerformed(evt);
            }
        });

        jComboBoxUserDefined.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "参照全天模式", "参照五天工作日模式", "参照七天工作日模式", "自定义模式" }));
        jComboBoxUserDefined.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxUserDefinedItemStateChanged(evt);
            }
        });

        jLabelUserDefined.setText("全天模式：00：00—24：00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonAllDay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonWorkDay)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonUserDefined)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxUserDefined, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelUserDefined, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCheckBox3)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox7)
                            .addComponent(jCheckBox8)
                            .addComponent(jCheckBox9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour31, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour41, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour51, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour61, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour71, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour81, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerMinute11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute31, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute41, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute61, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute71, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute81, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute51, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14)
                            .addComponent(jLabel24)
                            .addComponent(jLabel19)
                            .addComponent(jLabel34)
                            .addComponent(jLabel39)
                            .addComponent(jLabel29)
                            .addComponent(jLabel43))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour32, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour42, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour52, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour62, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour72, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerHour82, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerMinute12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute32, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute42, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute52, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute62, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute72, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerMinute82, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxRecordType1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType5, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType8, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRecordType7, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonAllDay)
                    .addComponent(jRadioButtonWorkDay)
                    .addComponent(jRadioButtonUserDefined)
                    .addComponent(jComboBoxUserDefined, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUserDefined, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerHour12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel12)
                        .addComponent(jComboBoxRecordType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerHour11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel7)
                        .addComponent(jCheckBox2))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerHour22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel13)
                        .addComponent(jComboBoxRecordType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerHour21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel16))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(jLabel14))
                    .addComponent(jCheckBox3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerMinute32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel22)
                                .addComponent(jLabel23)
                                .addComponent(jComboBoxRecordType3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerMinute31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel26)
                                .addComponent(jLabel25)
                                .addComponent(jLabel24)
                                .addComponent(jSpinnerHour31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinnerHour42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerMinute42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel17)
                                                .addComponent(jLabel18))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerHour41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel5))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerMinute41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel21)
                                                .addComponent(jLabel20)
                                                .addComponent(jLabel19)))
                                        .addGap(19, 19, 19)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinnerHour52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerMinute52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel32)
                                                .addComponent(jLabel33))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerHour51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jSpinnerMinute51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel36)
                                                .addComponent(jLabel35)
                                                .addComponent(jLabel34))))
                                    .addComponent(jCheckBox6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerHour62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jSpinnerMinute62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel37)
                                        .addComponent(jLabel38))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jSpinnerHour61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel47))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jSpinnerMinute61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel41)
                                        .addComponent(jLabel40)
                                        .addComponent(jLabel39))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jCheckBox5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCheckBox7)
                                    .addGap(83, 83, 83))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jComboBoxRecordType4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBoxRecordType5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jComboBoxRecordType6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jSpinnerHour72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jSpinnerMinute72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel27)
                                                        .addComponent(jLabel28))
                                                    .addComponent(jSpinnerHour71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jSpinnerMinute71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel31)
                                                        .addComponent(jLabel30)
                                                        .addComponent(jLabel29)))
                                                .addComponent(jLabel48)
                                                .addComponent(jCheckBox8))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jSpinnerHour82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jSpinnerMinute82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel42)
                                                    .addComponent(jLabel44))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jSpinnerHour81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel49))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jSpinnerMinute81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel45)
                                                    .addComponent(jLabel46)
                                                    .addComponent(jLabel43))
                                                .addComponent(jCheckBox9)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jComboBoxRecordType7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jComboBoxRecordType8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addComponent(jCheckBox4))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jSpinner1.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1373853840000L), null, null, java.util.Calendar.DAY_OF_MONTH));

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("日 期");

        jComboBoxWeekDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期天" }));
        jComboBoxWeekDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxWeekDayActionPerformed(evt);
            }
        });

        jCheckBoxAllDay.setText("全天");
        jCheckBoxAllDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAllDayActionPerformed(evt);
            }
        });

        jCheckBox1.setText("七天同设置");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldTemplateName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156)
                .addComponent(jButtonOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCanel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxWeekDay, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox1)
                                .addGap(102, 102, 102)
                                .addComponent(jCheckBoxAllDay, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(382, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOK)
                    .addComponent(jButtonCanel)
                    .addComponent(jTextFieldTemplateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxWeekDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50)
                            .addComponent(jCheckBox1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxAllDay, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(255, 255, 255))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        
        
        if(jRadioButtonAllDay.isSelected()){//全天模式
            sTimeTemplateName = "全天模式";
        }else if (jRadioButtonWorkDay.isSelected()) {//工作日模式
            sTimeTemplateName = "工作日模式";
         }else{//自定义模式
            sTimeTemplateName = jTextFieldTemplateName.getText().trim();//模板名称
        }
        //判断该模板的名称是否为空
        if (sTimeTemplateName == null || sTimeTemplateName.equals("")){
            JOptionPane.showMessageDialog(null, "模板名称不能为空！");
            return;
        }
        //判断该模板的名称是否合适
        if (sTimeTemplateName.equals("添加模板") || sTimeTemplateName.equals("全天模板") || sTimeTemplateName.equals("工作日模板") ){
            JOptionPane.showMessageDialog(null, "该模板名称和系统冲突，请重新换取模板名称！");
            return;
        }

        //判读是否已经存在该模板
        if (iInsertOrUpdate == 0 && TimeTemplateBean.getIfExistTheTemplate(sTimeTemplateName, sFileName) > 0){
            JOptionPane.showMessageDialog(null, "该模板名称已经存在，请重新换取模板名称！");
            return;
        }
        
        
        bAllDay = (jRadioButtonAllDay.isSelected() == true);
        
        //参数传递模式。“listTimeTemplateBean”表示是以listTimeTemplateBean为参数传递；“strSchedTime”表示是以strSchedTime为参数传递；
        //保存布防时间设置
        switch (sMode) {
            case "strSchedTimeWeek":
                setStrSchedTimeWeek();//设置布防时间段
                break;
            case "listTimeTemplateBean":
                break;
            default:
                break;
        }

        //存储该模板的修改，并没有修改设备的关联模板
        if (ListInsertOrUpdateStr.size() > 0){
            if (TimeTemplateBean.batchInsertUpdate(ListInsertOrUpdateStr, sFileName) <= 0)   
                TxtLogger.append(this.sFileName, "jButtonOKActionPerformed()","系统修改时间模板失败"); 
        }
        iState = iInsertOrUpdate;
        
        dispose();

    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jRadioButtonUserDefinedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonUserDefinedActionPerformed
        // TODO add your handling code here:
//        jTextFieldTemplateName.setText(sTimeTemplateName);
        setOCXState();
    }//GEN-LAST:event_jRadioButtonUserDefinedActionPerformed

    private void jRadioButtonWorkDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWorkDayActionPerformed
        // TODO add your handling code here:
//        jTextFieldTemplateName.setText("工作日模式");
        setWorkDayState();
        setOCXState();
    }//GEN-LAST:event_jRadioButtonWorkDayActionPerformed

    private void jRadioButtonAllDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAllDayActionPerformed
        // TODO add your handling code here:
//        jTextFieldTemplateName.setText("全天模式");
        setAllDayState();
        setOCXState();
    }//GEN-LAST:event_jRadioButtonAllDayActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
//        setAllJSiliderModel();
//        setAllSpinnerModel();
//        setOCXState();
    }//GEN-LAST:event_formWindowOpened

    private void jButtonCanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanelActionPerformed
        // TODO add your handling code here:
        iState = -1;
        dispose();
    }//GEN-LAST:event_jButtonCanelActionPerformed

    private void jComboBoxUserDefinedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxUserDefinedItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED){
            String sItem  = (String)jComboBoxUserDefined.getSelectedItem();
            //参照全天模式, 参照五天工作日模式, 参照七天工作日模式, 自定义模式
            switch (sItem){
                case "参照全天模式":
                    setAllDayState();
                    jLabelUserDefined.setText("全天模式：00：00—24：00");
                    break;
                case "参照五天工作日模式":
                    setWorkDayState();
                    jLabelUserDefined.setText("五天工作日模式：80：00—20：00；周末除外");
                    break;
                case "参照七天工作日模式":
                    setWorkDayState();
                    jLabelUserDefined.setText("七天工作日模式：80：00—20：00");
                    break;
                case "自定义模式":
                    jLabelUserDefined.setText("自定义模式：所有时间段自定义");
                    break;
            }
            setOCXState();
        }
    }//GEN-LAST:event_jComboBoxUserDefinedItemStateChanged

    private void jComboBoxRecordType9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRecordType9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxRecordType9ActionPerformed

    private void jComboBoxWeekDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWeekDayActionPerformed
//        showRecordSchedule();
//        setEnable();
    }//GEN-LAST:event_jComboBoxWeekDayActionPerformed

    private void jCheckBoxAllDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAllDayActionPerformed
//        setEnable();
    }//GEN-LAST:event_jCheckBoxAllDayActionPerformed
    /**
	 * 函数:      setOCXState
         * 函数描述:  根据是否启用计划存储设置部件的可用/不可用状态
    */
    private void setOCXState(){
        
//        //还有JPanel的标题
//        if(jRadioButtonAllDay.isSelected()){//全天模式
//            //只显示星期一，但不可编辑;标题变为星期一～日;起止时间为0-24
//            ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～日");
//            setJPanelAllOCXEnable(jPanelWeek1,false);//设置星期一不可编辑
//            setOnePanelAllDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为0-24
//            jPanelWeek2.setVisible(false);
//            jPanelWeek3.setVisible(false);
//            jPanelWeek4.setVisible(false);
//            jPanelWeek5.setVisible(false);
//            jPanelWeek6.setVisible(false);
//            jPanelWeek7.setVisible(false);
//            this.setSize(iJButtonCanelXWidth, iFrameHeight - iPanelDeviceHeight * 4 + 30);
////            jCheckBoxModify.setEnabled(false);
////            jTextFieldTemplateName.setEnabled(false);
//            jComboBoxUserDefined.setEnabled(false);
////            jCheckBoxAllDay.setEnabled(false);
////            jCheckBoxWorkDay5.setEnabled(false);
////            setAllJPanelEnable(false);
//        }else if (jRadioButtonWorkDay.isSelected()) {//工作日模式
//            //只显示星期一，但不可编辑;标题变为星期一～日;起止时间为8-20
//            ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～日");
//            setJPanelAllOCXEnable(jPanelWeek1,false);//设置星期一不可编辑
//            setOnePanelWorkDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为8-20
//            jPanelWeek2.setVisible(false);
//            jPanelWeek3.setVisible(false);
//            jPanelWeek4.setVisible(false);
//            jPanelWeek5.setVisible(false);
//            jPanelWeek6.setVisible(false);
//            jPanelWeek7.setVisible(false);
//            this.setSize(iJButtonCanelXWidth, iFrameHeight - iPanelDeviceHeight * 4 + 30);
////            jCheckBoxModify.setEnabled(false);
////            jTextFieldTemplateName.setEnabled(false);
//            jComboBoxUserDefined.setEnabled(false);
////            jCheckBoxAllDay.setEnabled(false);
////            jCheckBoxWorkDay5.setEnabled(false);
////            setAllJPanelEnable(false);
//        }else{//自定义模式
////            jCheckBoxModify.setEnabled(true);
////            if (jCheckBoxModify.isSelected()) jTextFieldTemplateName.setEnabled(true);
////            else jTextFieldTemplateName.setEnabled(false);
//            jComboBoxUserDefined.setEnabled(true);
////            jCheckBoxAllDay.setEnabled(true);
////            jCheckBoxWorkDay5.setEnabled(true);
//            
//            
//            String sItem  = (String)jComboBoxUserDefined.getSelectedItem();
//            //参照全天模式, 参照五天工作日模式, 参照七天工作日模式, 自定义模式
//            switch (sItem){
//                case "参照全天模式":
//                    //只显示星期一，但可编辑;标题变为星期一～日
//                    ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～日");
//                    setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
//                    setOnePanelAllDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为0-24
//                    jPanelWeek2.setVisible(false);
//                    jPanelWeek3.setVisible(false);
//                    jPanelWeek4.setVisible(false);
//                    jPanelWeek5.setVisible(false);
//                    jPanelWeek6.setVisible(false);
//                    jPanelWeek7.setVisible(false);
//                    this.setSize(iJButtonCanelXWidth, iFrameHeight - iPanelDeviceHeight * 4 + 30);
//                    break;
//                case "参照五天工作日模式":
//                    //只显示星期一、星期六；标题变为星期一～五、星期六～日，但可编辑
//                    ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～五");
//                    setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
//                    setOnePanelWorkDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为8-20
//                    ((TitledBorder)jPanelWeek6.getBorder()).setTitle("星期六～日");
//                    setJPanelAllOCXEnable(jPanelWeek6,true);//设置星期一可编辑
//                    setOnePanelWorkDayState(jSpinnerHour61,jSpinnerMinute61,jSpinnerHour62,jSpinnerMinute62);//星期一起止时间为8-20
//                    jPanelWeek2.setVisible(false);
//                    jPanelWeek3.setVisible(false);
//                    jPanelWeek4.setVisible(false);
//                    jPanelWeek5.setVisible(false);
//                    jPanelWeek6.setVisible(true);
//                    jPanelWeek7.setVisible(false);
//                    this.setSize(iFrameWidth, iFrameHeight - iPanelDeviceHeight * 4 + 30);
//                    break;
//                case "参照七天工作日模式":
//                    //只显示星期一，但可编辑;标题变为星期一～日
//                    ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～日");
//                    setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
//                    setOnePanelWorkDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为8-20
//                    jPanelWeek2.setVisible(false);
//                    jPanelWeek3.setVisible(false);
//                    jPanelWeek4.setVisible(false);
//                    jPanelWeek5.setVisible(false);
//                    jPanelWeek6.setVisible(false);
//                    jPanelWeek7.setVisible(false);
//                    this.setSize(iJButtonCanelXWidth, iFrameHeight - iPanelDeviceHeight * 4 + 30);
//                    break;
//                case "自定义模式":
//                    //显示所有，但可编辑；标题返回默认值
//                    ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一");
//                    setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
//                    ((TitledBorder)jPanelWeek6.getBorder()).setTitle("星期六");
//                    setJPanelAllOCXEnable(jPanelWeek6,true);//设置星期一可编辑
//                    jPanelWeek2.setVisible(true);
//                    jPanelWeek3.setVisible(true);
//                    jPanelWeek4.setVisible(true);
//                    jPanelWeek5.setVisible(true);
//                    jPanelWeek6.setVisible(true);
//                    jPanelWeek7.setVisible(true);
//                    this.setSize(iFrameWidth, iFrameHeight);
//                    break;
//            }
//            
////            if (jCheckBoxAllDay.isSelected()){
////                //只显示星期一，但可编辑;标题变为星期一～日
////                ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～日");
////                setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
////                setOnePanelAllDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为0-24
////                jPanelWeek2.setVisible(false);
////                jPanelWeek3.setVisible(false);
////                jPanelWeek4.setVisible(false);
////                jPanelWeek5.setVisible(false);
////                jPanelWeek6.setVisible(false);
////                jPanelWeek7.setVisible(false);
////                this.setSize(iJButtonCanelXWidth, iFrameHeight - iPanelDeviceHeight * 4);
////            }else if (jCheckBoxWorkDay5.isSelected()){
////                //只显示星期一、星期六；标题变为星期一～五、星期六～日，但可编辑
////                ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一～五");
////                setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
////                setOnePanelAllDayState(jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);//星期一起止时间为0-24
////                ((TitledBorder)jPanelWeek6.getBorder()).setTitle("星期六～日");
////                setJPanelAllOCXEnable(jPanelWeek6,true);//设置星期一可编辑
////                jPanelWeek2.setVisible(false);
////                jPanelWeek3.setVisible(false);
////                jPanelWeek4.setVisible(false);
////                jPanelWeek5.setVisible(false);
////                jPanelWeek6.setVisible(true);
////                jPanelWeek7.setVisible(false);
////                this.setSize(iFrameWidth, iFrameHeight - iPanelDeviceHeight * 4);
////            }else{
////                //显示所有，但可编辑；标题返回默认值
////                ((TitledBorder)jPanelWeek1.getBorder()).setTitle("星期一");
////                setJPanelAllOCXEnable(jPanelWeek1,true);//设置星期一可编辑
////                ((TitledBorder)jPanelWeek6.getBorder()).setTitle("星期六");
////                setJPanelAllOCXEnable(jPanelWeek6,true);//设置星期一可编辑
////                jPanelWeek2.setVisible(true);
////                jPanelWeek3.setVisible(true);
////                jPanelWeek4.setVisible(true);
////                jPanelWeek5.setVisible(true);
////                jPanelWeek6.setVisible(true);
////                jPanelWeek7.setVisible(true);
////                this.setSize(iFrameWidth, iFrameHeight);
//////                setAllJPanelEnable(true);
////            }
//            
//        }
    }
//    /**
//	 * 函数:      setAllJPanelEnable
//         * 函数描述:  设置所有的JPanel中所有的控件是否可用
//         * @para enabled   是否可用
//    */
//    private void setAllJPanelEnable(boolean Enable){
//        setJPanelAllOCXEnable(jPanelWeek1,Enable);
//        setJPanelAllOCXEnable(jPanelWeek2,Enable);
//        setJPanelAllOCXEnable(jPanelWeek3,Enable);
//        setJPanelAllOCXEnable(jPanelWeek4,Enable);
//        setJPanelAllOCXEnable(jPanelWeek5,Enable);
//        setJPanelAllOCXEnable(jPanelWeek6,Enable);
//        setJPanelAllOCXEnable(jPanelWeek7,Enable);
//    }

    /**
	 * 函数:      setJPanelAllOCXEnable
         * 函数描述:  设置JPanel中所有的控件是否可用
         * @para jPanel  JPanel
         * @para enabled   是否可用
    */
    private void setJPanelAllOCXEnable(JPanel jPanel,boolean enabled){
        jPanel.setEnabled(enabled);
        Component[] com =  jPanel.getComponents();
        for (Component com1 : com) {
            com1.setEnabled(enabled);
        }
    }
    /**
	 * 函数:      setOnePanelAllDayState
         * 函数描述:  设置某一个JPanel中组件的状态为工作日模式状态
         * @para Slider   JSlider控件
         * @para jSpinnerHour   JSpinner控件
         * @para jSpinnerMinute   JSpinner控件
         * @para jSpinnerHour2   JSpinner控件
         * @para jSpinnerMinute2   JSpinner控件
    */
    private void setOnePanelWorkDayState(JSpinner jSpinnerHour,JSpinner jSpinnerMinute,
            JSpinner jSpinnerHour2,JSpinner jSpinnerMinute2){
        jSpinnerHour.setValue(8);
        jSpinnerMinute.setValue(0);
        jSpinnerHour2.setValue(20);
        jSpinnerMinute2.setValue(0);
    }
    /**
	 * 函数:      setWorkDayState
         * 函数描述:  设置所有JPanel中组件的状态为工作日模式状态
    */
    private void setWorkDayState(){
        //星期一
        jSpinnerHour11.setValue(8);
        jSpinnerMinute11.setValue(0);
        jSpinnerHour12.setValue(20);
        jSpinnerMinute12.setValue(0);
        //星期二
        jSpinnerHour21.setValue(8);
        jSpinnerMinute21.setValue(0);
        jSpinnerHour22.setValue(20);
        jSpinnerMinute22.setValue(0);
        //星期三
        jSpinnerHour31.setValue(8);
        jSpinnerMinute31.setValue(0);
        jSpinnerHour32.setValue(20);
        jSpinnerMinute32.setValue(0);
        //星期四
        jSpinnerHour41.setValue(8);
        jSpinnerMinute41.setValue(0);
        jSpinnerHour42.setValue(20);
        jSpinnerMinute42.setValue(0);
        //星期五
        jSpinnerHour51.setValue(8);
        jSpinnerMinute51.setValue(0);
        jSpinnerHour52.setValue(20);
        jSpinnerMinute52.setValue(0);
        //星期六
        jSpinnerHour61.setValue(8);
        jSpinnerMinute61.setValue(0);
        jSpinnerHour62.setValue(20);
        jSpinnerMinute62.setValue(0);
        //星期日
        jSpinnerHour71.setValue(8);
        jSpinnerMinute71.setValue(0);
        jSpinnerHour72.setValue(20);
        jSpinnerMinute72.setValue(0);

    }
    /**
	 * 函数:      setOnePanelAllDayState
         * 函数描述:  设置某一个JPanel中组件的状态为全天模式状态
         * @para Slider   JSlider控件
         * @para jSpinnerHour   JSpinner控件
         * @para jSpinnerMinute   JSpinner控件
         * @para jSpinnerHour2   JSpinner控件
         * @para jSpinnerMinute2   JSpinner控件
    */
    private void setOnePanelAllDayState(JSpinner jSpinnerHour,JSpinner jSpinnerMinute,
            JSpinner jSpinnerHour2,JSpinner jSpinnerMinute2){
        jSpinnerHour.setValue(0);
        jSpinnerMinute.setValue(0);
        jSpinnerHour2.setValue(24);
        jSpinnerMinute2.setValue(0);
    }
    /**
	 * 函数:      setAllDayState
         * 函数描述:  设置所有JPanel中组件的状态为全天模式状态
    */
    private void setAllDayState(){
        //星期一
        jSpinnerHour11.setValue(0);
        jSpinnerMinute11.setValue(0);
        jSpinnerHour12.setValue(24);
        jSpinnerMinute12.setValue(0);

        //星期二
        jSpinnerHour21.setValue(0);
        jSpinnerMinute21.setValue(0);
        jSpinnerHour22.setValue(24);
        jSpinnerMinute22.setValue(0);
        //星期三
        jSpinnerHour31.setValue(0);
        jSpinnerMinute31.setValue(0);
        jSpinnerHour32.setValue(24);
        jSpinnerMinute32.setValue(0);
        //星期四
        jSpinnerHour41.setValue(0);
        jSpinnerMinute41.setValue(0);
        jSpinnerHour42.setValue(24);
        jSpinnerMinute42.setValue(0);
        //星期五
        jSpinnerHour51.setValue(0);
        jSpinnerMinute51.setValue(0);
        jSpinnerHour52.setValue(24);
        jSpinnerMinute52.setValue(0);
        //星期六
        jSpinnerHour61.setValue(0);
        jSpinnerMinute61.setValue(0);
        jSpinnerHour62.setValue(24);
        jSpinnerMinute62.setValue(0);
        //星期日
        jSpinnerHour71.setValue(0);
        jSpinnerMinute71.setValue(0);
        jSpinnerHour72.setValue(24);
        jSpinnerMinute72.setValue(0);

    }
    /**
	 * 函数:      setJSpinnerValue
         * @para Slider   JSlider控件
         * @para Spinner1   JSpinner控件
         * @para Spinner2   JSpinner控件
         * 函数描述:  根据Slider的值动态设定Spinner1和Spinner2的值
    */
    private void setJSpinnerValue(JSlider Slider,JSpinner Spinner1,JSpinner Spinner2){
        int Hour = Slider.getValue()/60;
        int Minute = Slider.getValue() - Hour * 60;
        
        Spinner1.setValue(Hour);
        Spinner2.setValue(Minute);
    }
//    /**
//	 * 函数:      setAllJSiliderModel
//         * 函数描述:  重新设定所有的JSilider控件的属性
//    */
//    private void setAllJSiliderModel(){
//        setJSiliderModel(slider11);
//        setJSiliderModel(slider12);
//        setJSiliderModel(slider21);
//        setJSiliderModel(slider22);
//        setJSiliderModel(slider31);
//        setJSiliderModel(slider32);
//        setJSiliderModel(slider41);
//        setJSiliderModel(slider42);
//        setJSiliderModel(slider51);
//        setJSiliderModel(slider52);
//        setJSiliderModel(slider61);
//        setJSiliderModel(slider62);
//        setJSiliderModel(slider71);
//        setJSiliderModel(slider72);
//
//    }
    /**
	 * 函数:      setJSiliderModel
         * 函数描述:  重新设定JSlider控件的属性
         * @para Slider   JSlider控件
    */
    private void setJSiliderModel(JSlider Slider){
        Hashtable table = new Hashtable();

        table.put(0, new JLabel("0"));
        table.put(120, new JLabel("2"));
        table.put(240, new JLabel("4"));
        table.put(360,new JLabel("6"));
        table.put(480, new JLabel("8"));
        table.put(600, new JLabel("10"));
        table.put(720, new JLabel("12"));
        table.put(840, new JLabel("14"));

        table.put(960, new JLabel("16"));
        table.put(1080, new JLabel("18"));
        table.put(1200, new JLabel("20"));
        table.put(1320, new JLabel("22"));
        table.put(1440, new JLabel("24"));
        
        Slider.setLabelTable(table);
    }
    /**
	 * 函数:      setJSpinnerModel
         * 函数描述:  重新设定JSpinner控件的属性
         * @para Spinner   JSpinner控件
    */
    private void setJSpinnerModel(JSpinner Spinner){
        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(Spinner, "0");
        Spinner.setEditor(editor);
        JFormattedTextField textField = ((JSpinner.NumberEditor) Spinner.getEditor()).getTextField();
        textField.setEditable(true);
        DefaultFormatterFactory factory = (DefaultFormatterFactory) textField.getFormatterFactory();
        NumberFormatter formatter = (NumberFormatter) factory.getDefaultFormatter();
        formatter.setAllowsInvalid(false);
    }
    /**
	 * 函数:      setAllSpinnerModel
         * 函数描述:  重新设定所有的JSpinner控件的属性
    */
    private void setAllSpinnerModel(){
        setJSpinnerModel(jSpinnerHour11);
        setJSpinnerModel(jSpinnerHour12);
        setJSpinnerModel(jSpinnerHour21);
        setJSpinnerModel(jSpinnerHour22);
        setJSpinnerModel(jSpinnerHour31);
        setJSpinnerModel(jSpinnerHour32);
        setJSpinnerModel(jSpinnerHour41);
        setJSpinnerModel(jSpinnerHour42);
        setJSpinnerModel(jSpinnerHour51);
        setJSpinnerModel(jSpinnerHour52);
        setJSpinnerModel(jSpinnerHour61);
        setJSpinnerModel(jSpinnerHour62);
        setJSpinnerModel(jSpinnerHour71);
        setJSpinnerModel(jSpinnerHour72);
        setJSpinnerModel(jSpinnerMinute11);
        setJSpinnerModel(jSpinnerMinute12);
        setJSpinnerModel(jSpinnerMinute21);
        setJSpinnerModel(jSpinnerMinute22);
        setJSpinnerModel(jSpinnerMinute31);
        setJSpinnerModel(jSpinnerMinute32);
        setJSpinnerModel(jSpinnerMinute41);
        setJSpinnerModel(jSpinnerMinute42);
        setJSpinnerModel(jSpinnerMinute51);
        setJSpinnerModel(jSpinnerMinute52);
        setJSpinnerModel(jSpinnerMinute61);
        setJSpinnerModel(jSpinnerMinute62);
        setJSpinnerModel(jSpinnerMinute71);
        setJSpinnerModel(jSpinnerMinute72);
    }
    /**
        *函数:      getByteValue
        *函数描述:  得到JSpinner的数值。因为直接转换byte会出现错误
        *@param  jSpinner
     */
    private byte getByteValue(JSpinner jSpinner){
        return Byte.parseByte(jSpinner.getValue().toString());
    }
    /**
	 * 函数:      getSchedTime
         * 函数描述:  获得布防时间段
         * @return strSchedTime   HCNetSDK.NET_DVR_SCHEDTIME[]
    */
    public HCNetSDK.NET_DVR_SCHEDTIMEWEEK[] getSchedTime(){
        return strSchedTimeWeek ;
    }
    /**
	 * 函数:      setOneStrSchedTimeWeek
         * 函数描述:  设置一天的布防时间段
    */
    private void setOneStrSchedTimeWeek(int iWeek,JSpinner jSpinnerHour1,JSpinner jSpinnerMinute1,JSpinner jSpinnerHour2,JSpinner jSpinnerMinute2){
        byte byStartHour,byStartMin,byStopHour,byStopMin;
        byStartHour = getByteValue( jSpinnerHour1);
        byStartMin = getByteValue( jSpinnerMinute1);
        byStopHour = getByteValue( jSpinnerHour2);
        byStopMin = getByteValue( jSpinnerMinute2);
        if (iInsertOrUpdate == 0){
            ListInsertOrUpdateStr.add(TimeTemplateBean.getStringInsertCommand(new TimeTemplateBean(sTimeTemplateName,(byte)iWeek,byStartHour,byStartMin,byStopHour,byStopMin)));
        }
        else if (iInsertOrUpdate == 1) {
            if (strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStartHour != byStartHour || 
                strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStartMin != byStartMin || 
                strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStopHour != byStopHour || 
                strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStopMin != byStopMin){
                ListInsertOrUpdateStr.add(TimeTemplateBean.getStringUpdateCommand(new TimeTemplateBean(sTimeTemplateName,(byte)iWeek,byStartHour,byStartMin,byStopHour,byStopMin)));
            }
        }

        strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStartHour = byStartHour;
        strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStartMin = byStartMin;
        strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStopHour = byStopHour;
        strSchedTimeWeek[iWeek-1].struAlarmTime[0].byStopMin = byStopMin;
    }
    /**
	 * 函数:      setStrSchedTimeWeek
         * 函数描述:  设置布防时间段
    */
    private void setStrSchedTimeWeek(){
        setOneStrSchedTimeWeek(1,jSpinnerHour11,jSpinnerMinute11,jSpinnerHour12,jSpinnerMinute12);
        setOneStrSchedTimeWeek(2,jSpinnerHour21,jSpinnerMinute21,jSpinnerHour22,jSpinnerMinute22);
        setOneStrSchedTimeWeek(3,jSpinnerHour31,jSpinnerMinute31,jSpinnerHour32,jSpinnerMinute32);
        setOneStrSchedTimeWeek(4,jSpinnerHour41,jSpinnerMinute41,jSpinnerHour42,jSpinnerMinute42);
        setOneStrSchedTimeWeek(5,jSpinnerHour51,jSpinnerMinute51,jSpinnerHour52,jSpinnerMinute52);
        setOneStrSchedTimeWeek(6,jSpinnerHour61,jSpinnerMinute61,jSpinnerHour62,jSpinnerMinute62);
        setOneStrSchedTimeWeek(7,jSpinnerHour71,jSpinnerMinute71,jSpinnerHour72,jSpinnerMinute72);
//        byte byStartHour,byStartMin,byStopHour,byStopMin;
//
//        //星期一
//        byStartHour = getByteValue( jSpinnerHour11);
//        byStartMin = getByteValue( jSpinnerMinute11);
//        byStopHour = getByteValue( jSpinnerHour12);
//        byStopMin = getByteValue( jSpinnerMinute12);
//        if (iInsertOrUpdate == 0){
//            ListInsertOrUpdateStr.add(TimeTemplateBean.getStringInsertCommand(new TimeTemplateBean(sTimeTemplateName,(short)1,byStartHour,byStartMin,byStopHour,byStopMin)));
//        }
//        else if (iInsertOrUpdate == 1) {
//            if (strSchedTimeWeek[0].struAlarmTime[0].byStartHour != byStartHour || 
//                strSchedTimeWeek[0].struAlarmTime[0].byStartMin != byStartMin || 
//                strSchedTimeWeek[0].struAlarmTime[0].byStopHour != byStopHour || 
//                strSchedTimeWeek[0].struAlarmTime[0].byStopMin != byStopMin){
//                ListInsertOrUpdateStr.add(TimeTemplateBean.getStringUpdateCommand(new TimeTemplateBean(sTimeTemplateName,(short)1,byStartHour,byStartMin,byStopHour,byStopMin)));
//            }
//        }
//
//        strSchedTimeWeek[0].struAlarmTime[0].byStartHour = byStartHour;
//        strSchedTimeWeek[0].struAlarmTime[0].byStartMin = byStartMin;
//        strSchedTimeWeek[0].struAlarmTime[0].byStopHour = byStopHour;
//        strSchedTimeWeek[0].struAlarmTime[0].byStopMin = byStopMin;
//        
//        //星期二  
//        byStartHour = getByteValue( jSpinnerHour21);
//        byStartMin = getByteValue( jSpinnerMinute21);
//        byStopHour = getByteValue( jSpinnerHour22);
//        byStopMin = getByteValue( jSpinnerMinute22);
//        if (iInsertOrUpdate == 0){
//            ListInsertOrUpdateStr.add(TimeTemplateBean.getStringInsertCommand(new TimeTemplateBean(sTimeTemplateName,(short)2,byStartHour,byStartMin,byStopHour,byStopMin)));
//        }
//        else if (iInsertOrUpdate == 1) {
//            if (strSchedTimeWeek[1].struAlarmTime[0].byStartHour != byStartHour || 
//                strSchedTimeWeek[1].struAlarmTime[0].byStartMin != byStartMin || 
//                strSchedTimeWeek[1].struAlarmTime[0].byStopHour != byStopHour || 
//                strSchedTimeWeek[1].struAlarmTime[0].byStopMin != byStopMin){
//                ListInsertOrUpdateStr.add(TimeTemplateBean.getStringUpdateCommand(new TimeTemplateBean(sTimeTemplateName,(short)2,byStartHour,byStartMin,byStopHour,byStopMin)));
//            }
//        }
//
//        strSchedTimeWeek[1].struAlarmTime[0].byStartHour = byStartHour;
//        strSchedTimeWeek[1].struAlarmTime[0].byStartMin = byStartMin;
//        strSchedTimeWeek[1].struAlarmTime[0].byStopHour = byStopHour;
//        strSchedTimeWeek[1].struAlarmTime[0].byStopMin = byStopMin;
//
//        //星期三  
//        strSchedTimeWeek[2].struAlarmTime[0].byStartHour = getByteValue( jSpinnerHour31);
//        strSchedTimeWeek[2].struAlarmTime[0].byStartMin = getByteValue( jSpinnerMinute31);
//        strSchedTimeWeek[2].struAlarmTime[0].byStopHour = getByteValue( jSpinnerHour32);
//        strSchedTimeWeek[2].struAlarmTime[0].byStopMin = getByteValue( jSpinnerMinute32);
//        //星期四  
//        strSchedTimeWeek[3].struAlarmTime[0].byStartHour = getByteValue( jSpinnerHour41);
//        strSchedTimeWeek[3].struAlarmTime[0].byStartMin = getByteValue( jSpinnerMinute41);
//        strSchedTimeWeek[3].struAlarmTime[0].byStopHour = getByteValue( jSpinnerHour42);
//        strSchedTimeWeek[3].struAlarmTime[0].byStopMin = getByteValue( jSpinnerMinute42);
//        //星期五  
//        strSchedTimeWeek[4].struAlarmTime[0].byStartHour = getByteValue( jSpinnerHour51);
//        strSchedTimeWeek[4].struAlarmTime[0].byStartMin = getByteValue( jSpinnerMinute51);
//        strSchedTimeWeek[4].struAlarmTime[0].byStopHour = getByteValue( jSpinnerHour52);
//        strSchedTimeWeek[4].struAlarmTime[0].byStopMin = getByteValue( jSpinnerMinute52);
//        //星期六  
//        strSchedTimeWeek[5].struAlarmTime[0].byStartHour = getByteValue( jSpinnerHour61);
//        strSchedTimeWeek[5].struAlarmTime[0].byStartMin = getByteValue( jSpinnerMinute61);
//        strSchedTimeWeek[5].struAlarmTime[0].byStopHour = getByteValue( jSpinnerHour62);
//        strSchedTimeWeek[5].struAlarmTime[0].byStopMin = getByteValue( jSpinnerMinute62);
//        //星期日  
//        strSchedTimeWeek[6].struAlarmTime[0].byStartHour = getByteValue( jSpinnerHour71);
//        strSchedTimeWeek[6].struAlarmTime[0].byStartMin = getByteValue( jSpinnerMinute71);
//        strSchedTimeWeek[6].struAlarmTime[0].byStopHour = getByteValue( jSpinnerHour72);
//        strSchedTimeWeek[6].struAlarmTime[0].byStopMin = getByteValue( jSpinnerMinute72);
    }
    /**
	 * 函数:      showStrSchedTimeWeek
         * 函数描述:  显示布防时间段
    */
    private void showStrSchedTimeWeek(){
        if (strSchedTimeWeek == null || strSchedTimeWeek.length != HCNetSDK.MAX_DAYS)  return;
        try{
            //星期一
            jSpinnerHour11.setValue(strSchedTimeWeek[0].struAlarmTime[0].byStartHour);
            jSpinnerMinute11.setValue(strSchedTimeWeek[0].struAlarmTime[0].byStartMin);
            jSpinnerHour12.setValue(strSchedTimeWeek[0].struAlarmTime[0].byStopHour);
            jSpinnerMinute12.setValue(strSchedTimeWeek[0].struAlarmTime[0].byStopMin);

            //星期二
            jSpinnerHour21.setValue(strSchedTimeWeek[1].struAlarmTime[0].byStartHour);
            jSpinnerMinute21.setValue(strSchedTimeWeek[1].struAlarmTime[0].byStartMin);
            jSpinnerHour22.setValue(strSchedTimeWeek[1].struAlarmTime[0].byStopHour);
            jSpinnerMinute22.setValue(strSchedTimeWeek[1].struAlarmTime[0].byStopMin);
            //星期三
            jSpinnerHour31.setValue(strSchedTimeWeek[2].struAlarmTime[0].byStartHour);
            jSpinnerMinute31.setValue(strSchedTimeWeek[2].struAlarmTime[0].byStartMin);
            jSpinnerHour32.setValue(strSchedTimeWeek[2].struAlarmTime[0].byStopHour);
            jSpinnerMinute32.setValue(strSchedTimeWeek[2].struAlarmTime[0].byStopMin);
            //星期四
            jSpinnerHour41.setValue(strSchedTimeWeek[3].struAlarmTime[0].byStartHour);
            jSpinnerMinute41.setValue(strSchedTimeWeek[3].struAlarmTime[0].byStartMin);
            jSpinnerHour42.setValue(strSchedTimeWeek[3].struAlarmTime[0].byStopHour);
            jSpinnerMinute42.setValue(strSchedTimeWeek[3].struAlarmTime[0].byStopMin);
            //星期五
            jSpinnerHour51.setValue(strSchedTimeWeek[4].struAlarmTime[0].byStartHour);
            jSpinnerMinute51.setValue(strSchedTimeWeek[4].struAlarmTime[0].byStartMin);
            jSpinnerHour52.setValue(strSchedTimeWeek[4].struAlarmTime[0].byStopHour);
            jSpinnerMinute52.setValue(strSchedTimeWeek[4].struAlarmTime[0].byStopMin);
            //星期六
            jSpinnerHour61.setValue(strSchedTimeWeek[5].struAlarmTime[0].byStartHour);
            jSpinnerMinute61.setValue(strSchedTimeWeek[5].struAlarmTime[0].byStartMin);
            jSpinnerHour62.setValue(strSchedTimeWeek[5].struAlarmTime[0].byStopHour);
            jSpinnerMinute62.setValue(strSchedTimeWeek[5].struAlarmTime[0].byStopMin);
            //星期日
            jSpinnerHour71.setValue(strSchedTimeWeek[6].struAlarmTime[0].byStartHour);
            jSpinnerMinute71.setValue(strSchedTimeWeek[6].struAlarmTime[0].byStartMin);
            jSpinnerHour72.setValue(strSchedTimeWeek[6].struAlarmTime[0].byStopHour);
            jSpinnerMinute72.setValue(strSchedTimeWeek[6].struAlarmTime[0].byStopMin);
        }catch (Exception e){
            TxtLogger.append(this.sFileName, "showStrSchedTimeWeek()","系统在显示布防时间段过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
    }
    /**
	 * 函数:      isAllDay
         * 函数描述:  是否全天布防
         * @return boolean   true是；false否
    */
    public boolean isAllDay(){
        return bAllDay;
    }
    /**
     * @return the bWorkDay
     */
    public boolean isbWorkDay() {
        return bWorkDay;
    }
    public int getReturnStatus(){
       return iState;
    }
    public String getTimeTemplateName(){
        return sTimeTemplateName;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogTimeTemplate3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogTimeTemplate3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogTimeTemplate3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogTimeTemplate3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogTimeTemplate3 dialog = new JDialogTimeTemplate3(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupRecordModel;
    private javax.swing.JButton jButtonCanel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    javax.swing.JCheckBox jCheckBoxAllDay;
    javax.swing.JComboBox jComboBoxRecordType1;
    javax.swing.JComboBox jComboBoxRecordType2;
    javax.swing.JComboBox jComboBoxRecordType3;
    javax.swing.JComboBox jComboBoxRecordType4;
    javax.swing.JComboBox jComboBoxRecordType5;
    javax.swing.JComboBox jComboBoxRecordType6;
    javax.swing.JComboBox jComboBoxRecordType7;
    javax.swing.JComboBox jComboBoxRecordType8;
    private javax.swing.JComboBox<String> jComboBoxUserDefined;
    javax.swing.JComboBox jComboBoxWeekDay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelUserDefined;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonAllDay;
    private javax.swing.JRadioButton jRadioButtonUserDefined;
    private javax.swing.JRadioButton jRadioButtonWorkDay;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinnerHour11;
    private javax.swing.JSpinner jSpinnerHour12;
    private javax.swing.JSpinner jSpinnerHour21;
    private javax.swing.JSpinner jSpinnerHour22;
    private javax.swing.JSpinner jSpinnerHour31;
    private javax.swing.JSpinner jSpinnerHour32;
    private javax.swing.JSpinner jSpinnerHour41;
    private javax.swing.JSpinner jSpinnerHour42;
    private javax.swing.JSpinner jSpinnerHour51;
    private javax.swing.JSpinner jSpinnerHour52;
    private javax.swing.JSpinner jSpinnerHour61;
    private javax.swing.JSpinner jSpinnerHour62;
    private javax.swing.JSpinner jSpinnerHour71;
    private javax.swing.JSpinner jSpinnerHour72;
    private javax.swing.JSpinner jSpinnerHour81;
    private javax.swing.JSpinner jSpinnerHour82;
    private javax.swing.JSpinner jSpinnerMinute11;
    private javax.swing.JSpinner jSpinnerMinute12;
    private javax.swing.JSpinner jSpinnerMinute21;
    private javax.swing.JSpinner jSpinnerMinute22;
    private javax.swing.JSpinner jSpinnerMinute31;
    private javax.swing.JSpinner jSpinnerMinute32;
    private javax.swing.JSpinner jSpinnerMinute41;
    private javax.swing.JSpinner jSpinnerMinute42;
    private javax.swing.JSpinner jSpinnerMinute51;
    private javax.swing.JSpinner jSpinnerMinute52;
    private javax.swing.JSpinner jSpinnerMinute61;
    private javax.swing.JSpinner jSpinnerMinute62;
    private javax.swing.JSpinner jSpinnerMinute71;
    private javax.swing.JSpinner jSpinnerMinute72;
    private javax.swing.JSpinner jSpinnerMinute81;
    private javax.swing.JSpinner jSpinnerMinute82;
    private javax.swing.JTextField jTextFieldTemplateName;
    // End of variables declaration//GEN-END:variables

    
}
