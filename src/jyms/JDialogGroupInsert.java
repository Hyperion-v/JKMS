/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;

import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumnModel;
import jyms.data.DeviceGroupBean;
import jyms.data.DeviceParaBean;
import jyms.data.DeviceResourceBean;
import jyms.data.TxtLogger;
import jyms.ui.PanelUI_MatteBorder;
import jyms.ui.ScrollBarUI_White;
import jyms.ui.ScrollPaneUI_White;
import jyms.ui.TableHeaderUI_White;
import jyms.ui.TableUI_White;

/**
 *
 * @author John
 */
public class JDialogGroupInsert extends javax.swing.JDialog {
    
    private final String sFileName = this.getClass().getName() + ".java";
    private final int iPanelDeviceHeight;
//    private final int iPanelDeviceWidth;
//    private final int iButtonOKY;
    private final int iFrameHeight;
    private ArrayList listDevicepara;//已管理设备参数表的Bean列表
    private JTableCheckBoxModel deviceManagedTableModel ;
    private int iState = 0;
    private String sGroupName;
    private ArrayList<String> listSerialnoReturn = new ArrayList<String>();
    //JFrameDeviceManage jFrameDeviceManage;
    /**
     * Creates new form JDialogGroupInsert
     */
    public JDialogGroupInsert(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //jFrameDeviceManage = (JFrameDeviceManage)parent;
        initComponents();
        modifyLocales();
        iPanelDeviceHeight = jPanelDevice.getHeight();
        iFrameHeight = this.getHeight();
        initialParas();
    }
    
    private void initialParas(){

        listDevicepara = DeviceParaBean.getDeviceDetailParaList(this.sFileName);
        deviceManagedTableModel = this.initialDeviceManagedTableModel();
        jTableDeviceManaged.setModel(deviceManagedTableModel);
        setTableColWidth();
        fillIntoTableDeviceManaged();
        //setPanelDeviceShow(true);
        
        jTableDeviceManaged.getTableHeader().setUI(new TableHeaderUI_White());
        jTableDeviceManaged.setUI(new TableUI_White());
        jPanelCenter.setUI(new PanelUI_MatteBorder());
  
        
        jScrollPane1.setUI(new ScrollPaneUI_White());
        jScrollPane1.getVerticalScrollBar().setUI(new ScrollBarUI_White());
        jScrollPane1.getHorizontalScrollBar().setUI(new ScrollBarUI_White());

        CommonParas.setJButtonUnDecorated(jButtonExit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFirst = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit = new javax.swing.JButton();
        jPanelCenter = new javax.swing.JPanel();
        jPanelNorth = new javax.swing.JPanel();
        jLabelGroupName = new javax.swing.JLabel();
        jTextFielGroupName = new javax.swing.JTextField();
        jCheckBoxInsertDevice = new javax.swing.JCheckBox();
        jPanelDevice = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDeviceManaged = new javax.swing.JTable();
        jPanelLast = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("创建分组");
        setMinimumSize(new java.awt.Dimension(543, 400));
        setUndecorated(true);
        setResizable(false);

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("创建分组");

        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jPanelCenter.setLayout(new java.awt.BorderLayout());

        jLabelGroupName.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelGroupName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelGroupName.setText("分组名称：");

        jTextFielGroupName.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 16)); // NOI18N

        jCheckBoxInsertDevice.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jCheckBoxInsertDevice.setSelected(true);
        jCheckBoxInsertDevice.setText("同时添加设备资源");
        jCheckBoxInsertDevice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxInsertDeviceMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelNorthLayout = new javax.swing.GroupLayout(jPanelNorth);
        jPanelNorth.setLayout(jPanelNorthLayout);
        jPanelNorthLayout.setHorizontalGroup(
            jPanelNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNorthLayout.createSequentialGroup()
                .addComponent(jLabelGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFielGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jCheckBoxInsertDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelNorthLayout.setVerticalGroup(
            jPanelNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNorthLayout.createSequentialGroup()
                .addGroup(jPanelNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFielGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxInsertDevice))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanelCenter.add(jPanelNorth, java.awt.BorderLayout.NORTH);

        jPanelDevice.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTableDeviceManaged.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableDeviceManaged);

        jPanelDevice.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanelCenter.add(jPanelDevice, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jButtonOk.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/ok.png"))); // NOI18N
        jButtonOk.setText("确定");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel.png"))); // NOI18N
        jButtonCancel.setText("取消");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLastLayout = new javax.swing.GroupLayout(jPanelLast);
        jPanelLast.setLayout(jPanelLastLayout);
        jPanelLastLayout.setHorizontalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLastLayout.createSequentialGroup()
                .addContainerGap(313, Short.MAX_VALUE)
                .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelLastLayout.setVerticalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLastLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanelLast, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxInsertDeviceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxInsertDeviceMouseClicked
        // TODO add your handling code here:
        if (jCheckBoxInsertDevice.isSelected()) {
            jTableDeviceManaged.setEnabled(true);
            //setPanelDeviceShow(true);
        }
        else {
            jTableDeviceManaged.setEnabled(false);
            //setPanelDeviceShow(false);
        }
    }//GEN-LAST:event_jCheckBoxInsertDeviceMouseClicked

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // TODO add your handling code here:
        try{
            sGroupName = jTextFielGroupName .getText().trim();//分组名

            if (sGroupName == null || sGroupName.equals("")){
                JOptionPane.showMessageDialog(null, sGroupNameCannotEmpty);// "分组名不能为空！"
                return;
            }
            if (sGroupName.length() > DeviceGroupBean.GROUPNAME_LENGTH){
                String GroupNameLabel = jLabelGroupName.getText();
                GroupNameLabel = GroupNameLabel.substring(0, GroupNameLabel.length()-1);
                JOptionPane.showMessageDialog(null, MessageFormat.format(CommonParas.sLengthCannotExceed, GroupNameLabel, DeviceGroupBean.GROUPNAME_LENGTH));// "分组名长度不能超过20！"
                return;
            }
            if (DeviceGroupBean.getNumsOfGroup(sGroupName, sFileName) > 0){
            //if (jFrameDeviceManage.getIfExistGroupName(sGroupName) > -1) {
                JOptionPane.showMessageDialog(null, sGroupNameExists);// "该分组名已经存在！"
                return;
            }
            
            if (jCheckBoxInsertDevice.isSelected()) {
                for (int i=0;i<deviceManagedTableModel.getRowCount();i++){
                    if ((Boolean)deviceManagedTableModel.getValueAt(i, 0)){
                        ArrayList NewList = (ArrayList)listDevicepara.get(i);
                        DeviceParaBean deviceparaBean = (DeviceParaBean)NewList.get(0);
                        listSerialnoReturn.add(deviceparaBean.getSerialNO());
                    }
                }
            } else iState = 1;

            if (listSerialnoReturn.size() > 0) {
                int Count = DeviceResourceBean.copyToGroup(listSerialnoReturn, sGroupName,this.sFileName);
                if (Count > 0) iState = 2;
            }
        }catch(Exception e)
        {
            TxtLogger.append(this.sFileName, "fillIntoTableDeviceManaged()","系统在刷新管理设备表过程中，出现错误" + 
                            "\r\n                       Exception:" + e.toString());   
            iState = -1;
        }
        this.dispose();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed
    /**
	 * 函数:      initialDeviceManagedTableModel
         * 函数描述:  初始化管理设备参数列表jTableDeviceManaged
         * @return JTableButtonModel
    */
    private JTableCheckBoxModel initialDeviceManagedTableModel()
    {
//        String tabeTile[];
//        
//        tabeTile = new String[] {"选择","设备名","设备类型"};
        JTableCheckBoxModel  DeviceManagedTableModel =new JTableCheckBoxModel(tabeTile);
        return DeviceManagedTableModel;
    }
    /**
        *函数:      fillIntoTableDeviceManaged
        *函数描述:  从数据库中提取所有的管理设备到JTable中
    */
    private void fillIntoTableDeviceManaged(){
        try {

            Vector v = deviceManagedTableModel.getDataVector();

            for (int i=0;i<listDevicepara.size();i++){
                ArrayList NewList = (ArrayList)listDevicepara.get(i);
                //获取设备参数表中的 设备序列号0,IP地址1,端口号2,用户名3,密码4,别名5,设备类型代码6，设备类型7（代码表中的代码名称）等参数
                //现在修改为：获取设备参数表中的 DeviceParaBean-0,设备类型-1（代码表中的代码名称）等参数；
                //"","设备名","设备类型"
                DeviceParaBean deviceparaBean = (DeviceParaBean)NewList.get(0);
                Vector newRow = new Vector();
                
                newRow.add(false);
                newRow.add(deviceparaBean.getAnothername());
                newRow.add((String)NewList.get(1));
                
                deviceManagedTableModel.addRow(newRow);//和下面的语句效果实际证明是同样的。
//                deviceManagedTableModel.getDataVector().add(newRow);
            }
            deviceManagedTableModel.fireTableDataChanged();

            jTableDeviceManaged.repaint();

        }catch(Exception e)
            {
                TxtLogger.append(this.sFileName, "fillIntoTableDeviceManaged()","系统在刷新管理设备表过程中，出现错误" + 
                                "\r\n                       Exception:" + e.toString());   
            }
    }
    
    private void setPanelDeviceShow(boolean IfShow) {
        if (IfShow){
//            jPanelDevice.setSize(iPanelDeviceWidth, iPanelDeviceHeight);
            jPanelDevice.setVisible(true);
//            jButtonOK.setLocation(jButtonOK.getX(), iButtonOKY);
//            jButtonCancel.setLocation(jButtonCancel.getX(), iButtonOKY);
            this.setSize(this.getWidth(), iFrameHeight);
        }
        else {
//            jPanelDevice.setSize(0, 0);
            jPanelDevice.setVisible(false);//只有一句setVisible及解决了，折腾了半天，调整位置，全没用上。
//            jButtonOK.setLocation(jButtonOK.getX(), iButtonOKY - iPanelDeviceHeight);
//            jButtonCancel.setLocation(jButtonCancel.getX(), iButtonOKY - iPanelDeviceHeight);
            this.setSize(this.getWidth(), iFrameHeight - iPanelDeviceHeight);
        }
    }
    /**
	 * 函数:      setTableColWidth
         * 函数描述:  设置表格特殊列的宽度
    */
    private void setTableColWidth(){
        
        TableColumnModel tcmAlarmOut = jTableDeviceManaged.getColumnModel();
        tcmAlarmOut.getColumn(0).setMinWidth(30);
        tcmAlarmOut.getColumn(0).setMaxWidth(120);
        tcmAlarmOut.getColumn(0).setPreferredWidth(60);
        
        tcmAlarmOut.getColumn(1).setMinWidth(60);
        //tcmAlarmOut.getColumn(1).setMaxWidth(480);
        //tcmAlarmOut.getColumn(1).setWidth(240);
        
        tcmAlarmOut.getColumn(2).setMinWidth(60);
        //tcmAlarmOut.getColumn(2).setMaxWidth(120);
        //tcmAlarmOut.getColumn(2).setWidth(120);


    }
    public int getState(){
        return iState;
    }
    public String getGroupName(){
        return sGroupName;
    }
    public ArrayList<String> getListSerialnoReturn(){
        return listSerialnoReturn;
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogGroupInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogGroupInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogGroupInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogGroupInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogGroupInsert dialog = new JDialogGroupInsert(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                
                dialog.setVisible(true);
            }
        });
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        sTitle = Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.sTitle");  //创建分组
        sGroupNameCannotEmpty = Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.sGroupNameCannotEmpty");  //分组名不能为空！
        sGroupNameExists = Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.sGroupNameExists");  //该分组名已经存在！
        tabeTile = Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.tabeTile").split(",");  //选择,设备名,设备类型
        jLabelGroupName.setText(Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.jLabelGroupName"));  //分组名称：
        jCheckBoxInsertDevice.setText(Locales.getString("JInFrameDeviceManage", "JDialogGroupInsert.jCheckBoxInsertDevice"));  //同时添加设备资源
        jButtonOk.setText(Locales.getString("JInFrameDeviceManage", "JInFrameDeviceManage.jButtonOk"));  //确定
        jButtonCancel.setText(Locales.getString("JInFrameDeviceManage", "JInFrameDeviceManage.jButtonCancel"));  //取消

        jLabelTitle.setText(sTitle);  //创建分组
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxInsertDevice;
    private javax.swing.JLabel jLabelGroupName;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelDevice;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JPanel jPanelLast;
    private javax.swing.JPanel jPanelNorth;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDeviceManaged;
    private javax.swing.JTextField jTextFielGroupName;
    // End of variables declaration//GEN-END:variables

    private String sTitle = "创建分组";
    private String sGroupNameCannotEmpty = "分组名不能为空！";
    private String sGroupNameExists = "该分组名已经存在！";
    private String[] tabeTile = new String[] {"选择","设备名","设备类型"};

    /**
        *内部类:   JTableCheckBoxModel
        *类描述:   jTableDeviceManaged的表格式数据模型DefaultTableModel
    */  
    private class JTableCheckBoxModel extends AbstractTableModel
     {
    // private Object[][] Myrows = { { "One", new JButton("Button One") },
    //   { "Two", new JButton("Button Two") },
    //   { "Three", new JButton("Button Three") },
    //   { "Four", new JButton("Button Four") } };
    ////private Vector Myrows = new Vector();
    // private String[] Mycolumns = { "Numbers", "Buttons" };
        private Vector Myrows = new Vector();
        private String[] Mycolumns;

        public JTableCheckBoxModel(Object[] columnNames) {
            Mycolumns = (String[])columnNames;
        }

        public Vector getDataVector(){
            return Myrows;
        }
        public boolean addRow(Vector rowData) {
           return Myrows.add(rowData);
        } 
        public void removeRow(int row) {
           Myrows.removeElementAt(row);
        }

        @Override
        public String getColumnName(int column) {
         return Mycolumns[column];
        }

        @Override
        public int getRowCount() {
       //  return Myrows.length;
         return Myrows.size();
        }

        @Override
        public int getColumnCount() {
         return Mycolumns.length;
        }

        @Override
        public Object getValueAt(int row, int column) {
       //  return Myrows[row][column];
         return ((Vector)Myrows.elementAt(row)).elementAt(column);
        }
        
        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            if (rowIndex < 0 || rowIndex > Myrows.size()-1 || columnIndex < 0 || columnIndex > Mycolumns.length-1) return;
            ((Vector)Myrows.elementAt(rowIndex)).setElementAt(aValue, columnIndex);//.elementAt(columnIndex) = aValue;
        }
        
        @Override
        public boolean isCellEditable(int row, int column) {
            if (column == 0) return true;
            return false;
        }

        @Override
        public Class getColumnClass(int column) {
         return getValueAt(0, column).getClass();
        }
    } 

}
