/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jyms;


import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.Hashtable;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import jyms.data.DeviceResourceBean;
import jyms.data.TxtLogger;
import jyms.ui.SliderUI;
/**
 *
 * @author John
 */
public class JInFrameRecordSchedule extends javax.swing.JInternalFrame {

    private final String sFileName = this.getClass().getName() + ".java";
    private DefaultTableModel deviceResourceTableModel;
    private DefaultMutableTreeNode m_DeviceRootResource;//通道树根节点
    private HCNetSDK.NET_DVR_RECORD_V30 m_struRemoteRecCfg = new HCNetSDK.NET_DVR_RECORD_V30();//录像参数
    
    private String sStoreType = "录像";//存储计划类型，包括录像“Record”和抓图“Capture”存储计划
    private String sChannelNode = "";//存储当前的通道节点名
    private String sAnotherName = "";//存储当前的设备别名
    private String sSerialNo = "";//存储当前的设备序列号
    private int iChannel;//存储当前的通道号
    private int    iIndexOfTreeNodeClicked = 0;//用来判断是否鼠标是否点击在合适的位置上，比如必须点击在叶子节点上。
    /**
     * Creates new form JInFrameRecordSchedule
     * @param StoreType
     */
    public JInFrameRecordSchedule(String StoreType) {
        initComponents();
        this.sStoreType = StoreType;
        modifyLocales();
        CommonParas.setJButtonUnDecorated(jButtonExit2);
        //this.setTitle(sStoreType + "存储计划");
        slider11.setUI(new SliderUI(slider11));
        slider12.setUI(new SliderUI(slider12));
        slider21.setUI(new SliderUI(slider21));
        slider22.setUI(new SliderUI(slider22));
        slider31.setUI(new SliderUI(slider31));
        slider32.setUI(new SliderUI(slider32));
        slider41.setUI(new SliderUI(slider41));
        slider42.setUI(new SliderUI(slider42));
        slider51.setUI(new SliderUI(slider51));
        slider52.setUI(new SliderUI(slider52));
        slider61.setUI(new SliderUI(slider61));
        slider62.setUI(new SliderUI(slider62));
        slider71.setUI(new SliderUI(slider71));
        slider72.setUI(new SliderUI(slider72));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupRecordModel = new javax.swing.ButtonGroup();
        buttonGroupRecordType = new javax.swing.ButtonGroup();
        jDialogRecordParas = new javax.swing.JDialog();
        jPanelFirst = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jButtonExit2 = new javax.swing.JButton();
        jPanelCenter = new javax.swing.JPanel();
        jCheckBoxRebundancy = new javax.swing.JCheckBox();
        jCheckBoxAudioRec = new javax.swing.JCheckBox();
        jLabelSaveTime = new javax.swing.JLabel();
        jLabelVideoDelay = new javax.swing.JLabel();
        jLabelPrerecordedHours = new javax.swing.JLabel();
        jComboBoxPreRecordTime = new javax.swing.JComboBox();
        jComboBoxRecordDelay = new javax.swing.JComboBox();
        jTextFieldSaveDays = new javax.swing.JTextField();
        jLabelDays = new javax.swing.JLabel();
        jPanelLast = new javax.swing.JPanel();
        jButtonSave2 = new javax.swing.JButton();
        jButtonCancel2 = new javax.swing.JButton();
        jSplitPaneSchedule = new javax.swing.JSplitPane();
        jPanelLeft = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelChannel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeResource = new javax.swing.JTree();
        jPanelRight = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanelHeader = new javax.swing.JPanel();
        jCheckBoxIfRecord = new javax.swing.JCheckBox();
        jButtonHighSetup = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanelRecordType = new javax.swing.JPanel();
        jRadioButtonTime = new javax.swing.JRadioButton();
        jRadioButtonCommandTrigger = new javax.swing.JRadioButton();
        jRadioButtonEvent = new javax.swing.JRadioButton();
        jLabelRecordType = new javax.swing.JLabel();
        jPanelRecordMode = new javax.swing.JPanel();
        jRadioButtonAllDay = new javax.swing.JRadioButton();
        jRadioButtonWorkDay = new javax.swing.JRadioButton();
        jRadioButtonSelfDefine = new javax.swing.JRadioButton();
        jCheckBoxAllSame = new javax.swing.JCheckBox();
        jLabelRecordMode = new javax.swing.JLabel();
        jPanelTimeTemplateTitle = new javax.swing.JPanel();
        jLabelTimeTemplate = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jPanelTimeTemplate = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabelWeek1 = new javax.swing.JLabel();
        jPanelWeek1 = new javax.swing.JPanel();
        jSpinnerMinute12 = new javax.swing.JSpinner();
        jLabelHour12 = new javax.swing.JLabel();
        slider12 = new javax.swing.JSlider();
        slider11 = new javax.swing.JSlider();
        jLabelMinute12 = new javax.swing.JLabel();
        jSpinnerHour12 = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabelMinute11 = new javax.swing.JLabel();
        jSpinnerMinute11 = new javax.swing.JSpinner();
        jLabelHour11 = new javax.swing.JLabel();
        jSpinnerHour11 = new javax.swing.JSpinner();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabelWeek2 = new javax.swing.JLabel();
        jPanelWeek2 = new javax.swing.JPanel();
        jSpinnerMinute22 = new javax.swing.JSpinner();
        jLabelHour22 = new javax.swing.JLabel();
        slider22 = new javax.swing.JSlider();
        slider21 = new javax.swing.JSlider();
        jLabelMinute22 = new javax.swing.JLabel();
        jSpinnerHour22 = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabelMinute21 = new javax.swing.JLabel();
        jSpinnerMinute21 = new javax.swing.JSpinner();
        jLabelHour21 = new javax.swing.JLabel();
        jSpinnerHour21 = new javax.swing.JSpinner();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabelWeek3 = new javax.swing.JLabel();
        jPanelWeek3 = new javax.swing.JPanel();
        jSpinnerMinute32 = new javax.swing.JSpinner();
        jLabelHour32 = new javax.swing.JLabel();
        slider32 = new javax.swing.JSlider();
        slider31 = new javax.swing.JSlider();
        jLabelMinute32 = new javax.swing.JLabel();
        jSpinnerHour32 = new javax.swing.JSpinner();
        jLabel46 = new javax.swing.JLabel();
        jLabelMinute31 = new javax.swing.JLabel();
        jSpinnerMinute31 = new javax.swing.JSpinner();
        jLabelHour31 = new javax.swing.JLabel();
        jSpinnerHour31 = new javax.swing.JSpinner();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabelWeek4 = new javax.swing.JLabel();
        jPanelWeek4 = new javax.swing.JPanel();
        jSpinnerMinute42 = new javax.swing.JSpinner();
        jLabelHour42 = new javax.swing.JLabel();
        slider42 = new javax.swing.JSlider();
        slider41 = new javax.swing.JSlider();
        jLabelMinute42 = new javax.swing.JLabel();
        jSpinnerHour42 = new javax.swing.JSpinner();
        jLabel52 = new javax.swing.JLabel();
        jLabelMinute41 = new javax.swing.JLabel();
        jSpinnerMinute41 = new javax.swing.JSpinner();
        jLabelHour41 = new javax.swing.JLabel();
        jSpinnerHour41 = new javax.swing.JSpinner();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabelWeek5 = new javax.swing.JLabel();
        jPanelWeek5 = new javax.swing.JPanel();
        jSpinnerMinute52 = new javax.swing.JSpinner();
        jLabelHour52 = new javax.swing.JLabel();
        slider52 = new javax.swing.JSlider();
        slider51 = new javax.swing.JSlider();
        jLabelMinute52 = new javax.swing.JLabel();
        jSpinnerHour52 = new javax.swing.JSpinner();
        jLabel58 = new javax.swing.JLabel();
        jLabelMinute51 = new javax.swing.JLabel();
        jSpinnerMinute51 = new javax.swing.JSpinner();
        jLabelHour51 = new javax.swing.JLabel();
        jSpinnerHour51 = new javax.swing.JSpinner();
        jPanel12 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabelWeek6 = new javax.swing.JLabel();
        jPanelWeek6 = new javax.swing.JPanel();
        jSpinnerMinute62 = new javax.swing.JSpinner();
        jLabelHour62 = new javax.swing.JLabel();
        slider62 = new javax.swing.JSlider();
        slider61 = new javax.swing.JSlider();
        jLabelMinute62 = new javax.swing.JLabel();
        jSpinnerHour62 = new javax.swing.JSpinner();
        jLabel64 = new javax.swing.JLabel();
        jLabelMinute61 = new javax.swing.JLabel();
        jSpinnerMinute61 = new javax.swing.JSpinner();
        jLabelHour61 = new javax.swing.JLabel();
        jSpinnerHour61 = new javax.swing.JSpinner();
        jPanel20 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabelWeek7 = new javax.swing.JLabel();
        jPanelWeek7 = new javax.swing.JPanel();
        jSpinnerMinute72 = new javax.swing.JSpinner();
        jLabelHour72 = new javax.swing.JLabel();
        slider72 = new javax.swing.JSlider();
        slider71 = new javax.swing.JSlider();
        jLabelMinute72 = new javax.swing.JLabel();
        jSpinnerHour72 = new javax.swing.JSpinner();
        jLabel70 = new javax.swing.JLabel();
        jLabelMinute71 = new javax.swing.JLabel();
        jSpinnerMinute71 = new javax.swing.JSpinner();
        jLabelHour71 = new javax.swing.JLabel();
        jSpinnerHour71 = new javax.swing.JSpinner();
        jPanelFoot = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();

        jDialogRecordParas.setMinimumSize(new java.awt.Dimension(389, 330));
        jDialogRecordParas.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        jDialogRecordParas.setUndecorated(true);

        jLabelTitle.setFont(new java.awt.Font("微软雅黑", 1, 18)); // NOI18N
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("录像计划高级设置");

        jButtonExit2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/close.png"))); // NOI18N
        jButtonExit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExit2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFirstLayout = new javax.swing.GroupLayout(jPanelFirst);
        jPanelFirst.setLayout(jPanelFirstLayout);
        jPanelFirstLayout.setHorizontalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFirstLayout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelFirstLayout.setVerticalGroup(
            jPanelFirstLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFirstLayout.createSequentialGroup()
                .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialogRecordParas.getContentPane().add(jPanelFirst, java.awt.BorderLayout.PAGE_START);

        jCheckBoxRebundancy.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jCheckBoxRebundancy.setText("冗余录像");

        jCheckBoxAudioRec.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jCheckBoxAudioRec.setText("记录音频");
        jCheckBoxAudioRec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAudioRecActionPerformed(evt);
            }
        });

        jLabelSaveTime.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelSaveTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelSaveTime.setText("保存时间：");

        jLabelVideoDelay.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelVideoDelay.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelVideoDelay.setText("录像延时：");

        jLabelPrerecordedHours.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelPrerecordedHours.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPrerecordedHours.setText("预录时间：");

        jComboBoxPreRecordTime.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jComboBoxPreRecordTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "不预录", "5秒", "10秒", "15秒", "20秒", "25秒", "30秒", "不受限制" }));

        jComboBoxRecordDelay.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jComboBoxRecordDelay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5秒", "10秒", "30秒", "1分", "2分", "5分", "10分" }));

        jTextFieldSaveDays.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jTextFieldSaveDays.setText("0");
        jTextFieldSaveDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSaveDaysKeyTyped(evt);
            }
        });

        jLabelDays.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelDays.setText("天");

        javax.swing.GroupLayout jPanelCenterLayout = new javax.swing.GroupLayout(jPanelCenter);
        jPanelCenter.setLayout(jPanelCenterLayout);
        jPanelCenterLayout.setHorizontalGroup(
            jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCenterLayout.createSequentialGroup()
                .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCenterLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBoxAudioRec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxRebundancy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCenterLayout.createSequentialGroup()
                        .addContainerGap(36, Short.MAX_VALUE)
                        .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelPrerecordedHours, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(jLabelVideoDelay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelSaveTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCenterLayout.createSequentialGroup()
                                .addComponent(jTextFieldSaveDays, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelDays, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxRecordDelay, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxPreRecordTime, 0, 143, Short.MAX_VALUE)))))
                .addGap(40, 40, 40))
        );
        jPanelCenterLayout.setVerticalGroup(
            jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxPreRecordTime)
                    .addComponent(jLabelPrerecordedHours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxRecordDelay)
                    .addComponent(jLabelVideoDelay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSaveTime, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSaveDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelDays)))
                .addGap(22, 22, 22)
                .addGroup(jPanelCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxAudioRec)
                    .addComponent(jCheckBoxRebundancy))
                .addGap(24, 24, 24))
        );

        jPanelCenterLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jComboBoxPreRecordTime, jComboBoxRecordDelay, jTextFieldSaveDays});

        jDialogRecordParas.getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jButtonSave2.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonSave2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/ok2.png"))); // NOI18N
        jButtonSave2.setText("保存");
        jButtonSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSave2ActionPerformed(evt);
            }
        });

        jButtonCancel2.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel2.png"))); // NOI18N
        jButtonCancel2.setText("取消");
        jButtonCancel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancel2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLastLayout = new javax.swing.GroupLayout(jPanelLast);
        jPanelLast.setLayout(jPanelLastLayout);
        jPanelLastLayout.setHorizontalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLastLayout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addComponent(jButtonSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jPanelLastLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonCancel2, jButtonSave2});

        jPanelLastLayout.setVerticalGroup(
            jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLastLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLastLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave2)
                    .addComponent(jButtonCancel2))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jDialogRecordParas.getContentPane().add(jPanelLast, java.awt.BorderLayout.PAGE_END);

        setTitle("录像计划");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanelLeft.setBackground(new java.awt.Color(64, 64, 64));
        jPanelLeft.setForeground(new java.awt.Color(255, 255, 255));
        jPanelLeft.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(151, 151, 151));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabelChannel.setBackground(new java.awt.Color(151, 151, 151));
        jLabelChannel.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jLabelChannel.setForeground(new java.awt.Color(255, 255, 255));
        jLabelChannel.setText("  监控点");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabelChannel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 73, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelChannel, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanelLeft.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setBackground(new java.awt.Color(64, 64, 64));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jTreeResource.setBackground(new java.awt.Color(64, 64, 64));
        jTreeResource.setForeground(new java.awt.Color(255, 255, 255));
        jTreeResource.setModel(this.initialResourceTreeModel());
        jTreeResource.setRootVisible(false);
        jTreeResource.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeResourceValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTreeResource);

        jPanelLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jSplitPaneSchedule.setLeftComponent(jPanelLeft);

        jPanelRight.setBackground(new java.awt.Color(96, 96, 96));
        jPanelRight.setForeground(new java.awt.Color(255, 255, 255));
        jPanelRight.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanelHeader.setBackground(new java.awt.Color(151, 151, 151));
        jPanelHeader.setForeground(new java.awt.Color(255, 255, 255));
        jPanelHeader.setPreferredSize(new java.awt.Dimension(281, 49));

        jCheckBoxIfRecord.setBackground(new java.awt.Color(151, 151, 151));
        jCheckBoxIfRecord.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jCheckBoxIfRecord.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxIfRecord.setText("启用计划录像");
        jCheckBoxIfRecord.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxIfRecordItemStateChanged(evt);
            }
        });

        jButtonHighSetup.setBackground(new java.awt.Color(64, 64, 64));
        jButtonHighSetup.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonHighSetup.setForeground(new java.awt.Color(255, 255, 255));
        jButtonHighSetup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/setup2.png"))); // NOI18N
        jButtonHighSetup.setText("高级设置");
        jButtonHighSetup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHighSetupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxIfRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonHighSetup)
                .addContainerGap(927, Short.MAX_VALUE))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jCheckBoxIfRecord, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addComponent(jButtonHighSetup))
        );

        jPanel1.add(jPanelHeader, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanelRecordType.setBackground(new java.awt.Color(96, 96, 96));
        jPanelRecordType.setForeground(new java.awt.Color(255, 255, 255));

        jRadioButtonTime.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordType.add(jRadioButtonTime);
        jRadioButtonTime.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonTime.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonTime.setSelected(true);
        jRadioButtonTime.setText("定时录像");

        jRadioButtonCommandTrigger.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordType.add(jRadioButtonCommandTrigger);
        jRadioButtonCommandTrigger.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonCommandTrigger.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonCommandTrigger.setText("命令触发录像");

        jRadioButtonEvent.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordType.add(jRadioButtonEvent);
        jRadioButtonEvent.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonEvent.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonEvent.setText("事件录像");

        jLabelRecordType.setBackground(new java.awt.Color(151, 151, 151));
        jLabelRecordType.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jLabelRecordType.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRecordType.setText("  录像类型：");

        javax.swing.GroupLayout jPanelRecordTypeLayout = new javax.swing.GroupLayout(jPanelRecordType);
        jPanelRecordType.setLayout(jPanelRecordTypeLayout);
        jPanelRecordTypeLayout.setHorizontalGroup(
            jPanelRecordTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecordTypeLayout.createSequentialGroup()
                .addComponent(jLabelRecordType, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonTime, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonEvent, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonCommandTrigger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(740, Short.MAX_VALUE))
        );
        jPanelRecordTypeLayout.setVerticalGroup(
            jPanelRecordTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecordTypeLayout.createSequentialGroup()
                .addGroup(jPanelRecordTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonTime, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRecordType, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelRecordTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButtonEvent)
                        .addComponent(jRadioButtonCommandTrigger)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelRecordTypeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jRadioButtonCommandTrigger, jRadioButtonEvent, jRadioButtonTime});

        jPanel2.add(jPanelRecordType, java.awt.BorderLayout.PAGE_END);

        jPanelRecordMode.setBackground(new java.awt.Color(96, 96, 96));
        jPanelRecordMode.setForeground(new java.awt.Color(255, 255, 255));

        jRadioButtonAllDay.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordModel.add(jRadioButtonAllDay);
        jRadioButtonAllDay.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonAllDay.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonAllDay.setSelected(true);
        jRadioButtonAllDay.setText("全天模式");
        jRadioButtonAllDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAllDayActionPerformed(evt);
            }
        });

        jRadioButtonWorkDay.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordModel.add(jRadioButtonWorkDay);
        jRadioButtonWorkDay.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonWorkDay.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonWorkDay.setText("工作日模式");
        jRadioButtonWorkDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonWorkDayActionPerformed(evt);
            }
        });

        jRadioButtonSelfDefine.setBackground(new java.awt.Color(96, 96, 96));
        buttonGroupRecordModel.add(jRadioButtonSelfDefine);
        jRadioButtonSelfDefine.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jRadioButtonSelfDefine.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonSelfDefine.setText("自定义模式");
        jRadioButtonSelfDefine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSelfDefineActionPerformed(evt);
            }
        });

        jCheckBoxAllSame.setBackground(new java.awt.Color(96, 96, 96));
        jCheckBoxAllSame.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jCheckBoxAllSame.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxAllSame.setText("七天相同");
        jCheckBoxAllSame.setEnabled(false);
        jCheckBoxAllSame.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxAllSameItemStateChanged(evt);
            }
        });

        jLabelRecordMode.setBackground(new java.awt.Color(151, 151, 151));
        jLabelRecordMode.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jLabelRecordMode.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRecordMode.setText("  录像模式：");

        javax.swing.GroupLayout jPanelRecordModeLayout = new javax.swing.GroupLayout(jPanelRecordMode);
        jPanelRecordMode.setLayout(jPanelRecordModeLayout);
        jPanelRecordModeLayout.setHorizontalGroup(
            jPanelRecordModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecordModeLayout.createSequentialGroup()
                .addComponent(jLabelRecordMode, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonAllDay, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonWorkDay, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonSelfDefine, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxAllSame, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap(607, Short.MAX_VALUE))
        );
        jPanelRecordModeLayout.setVerticalGroup(
            jPanelRecordModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRecordModeLayout.createSequentialGroup()
                .addGroup(jPanelRecordModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jRadioButtonAllDay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRecordMode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(jRadioButtonWorkDay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonSelfDefine, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBoxAllSame, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(jPanelRecordMode, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanelTimeTemplateTitle.setBackground(new java.awt.Color(151, 151, 151));
        jPanelTimeTemplateTitle.setForeground(new java.awt.Color(255, 255, 255));

        jLabelTimeTemplate.setBackground(new java.awt.Color(151, 151, 151));
        jLabelTimeTemplate.setFont(new java.awt.Font("微软雅黑", 1, 16)); // NOI18N
        jLabelTimeTemplate.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTimeTemplate.setText("  时间模板：");

        javax.swing.GroupLayout jPanelTimeTemplateTitleLayout = new javax.swing.GroupLayout(jPanelTimeTemplateTitle);
        jPanelTimeTemplateTitle.setLayout(jPanelTimeTemplateTitleLayout);
        jPanelTimeTemplateTitleLayout.setHorizontalGroup(
            jPanelTimeTemplateTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTimeTemplateTitleLayout.createSequentialGroup()
                .addComponent(jLabelTimeTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelTimeTemplateTitleLayout.setVerticalGroup(
            jPanelTimeTemplateTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTimeTemplate, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        jPanel1.add(jPanelTimeTemplateTitle, java.awt.BorderLayout.PAGE_END);

        jPanelRight.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel4.setBackground(new java.awt.Color(96, 96, 96));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanelTimeTemplate.setBackground(new java.awt.Color(96, 96, 96));
        jPanelTimeTemplate.setForeground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(64, 64, 64));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(151, 151, 151));
        jPanel8.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek1.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek1.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek1.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek1.setText("  星期一");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabelWeek1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek1.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek1.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute12.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute12.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour12.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour12.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour12.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour12.setText("时");

        slider12.setBackground(new java.awt.Color(64, 64, 64));
        slider12.setForeground(new java.awt.Color(255, 255, 255));
        slider12.setMajorTickSpacing(120);
        slider12.setMaximum(1440);
        slider12.setMinorTickSpacing(1);
        slider12.setPaintLabels(true);
        slider12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider12.setValueIsAdjusting(true);
        slider12.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider12StateChanged(evt);
            }
        });

        slider11.setBackground(new java.awt.Color(64, 64, 64));
        slider11.setMajorTickSpacing(120);
        slider11.setMaximum(1440);
        slider11.setMinorTickSpacing(1);
        slider11.setPaintLabels(true);
        slider11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider11.setValueIsAdjusting(true);
        slider11.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider11StateChanged(evt);
            }
        });

        jLabelMinute12.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute12.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute12.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute12.setText("分");

        jSpinnerHour12.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour12.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel11.setBackground(new java.awt.Color(64, 64, 64));
        jLabel11.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("——");

        jLabelMinute11.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute11.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute11.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute11.setText("分");

        jSpinnerMinute11.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute11.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour11.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour11.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour11.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour11.setText("时");

        jSpinnerHour11.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour11.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek1Layout = new javax.swing.GroupLayout(jPanelWeek1);
        jPanelWeek1.setLayout(jPanelWeek1Layout);
        jPanelWeek1Layout.setHorizontalGroup(
            jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek1Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWeek1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMinute11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerHour12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelWeek1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(slider12, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelWeek1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSpinnerHour11, jSpinnerHour12, jSpinnerMinute11, jSpinnerMinute12});

        jPanelWeek1Layout.setVerticalGroup(
            jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek1Layout.createSequentialGroup()
                .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelHour11)
                    .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerHour11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinnerMinute11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelMinute11)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSpinnerHour12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelHour12)
                        .addComponent(jLabelMinute12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slider12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelWeek1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, jLabelHour11, jLabelHour12, jLabelMinute11, jLabelMinute12, jSpinnerHour11});

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new java.awt.Color(64, 64, 64));
        jPanel13.setForeground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(151, 151, 151));
        jPanel14.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek2.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek2.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek2.setText("  星期二");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(jLabelWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek2, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek2.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek2.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute22.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute22.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour22.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour22.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour22.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour22.setText("时");

        slider22.setMajorTickSpacing(120);
        slider22.setMaximum(1440);
        slider22.setMinorTickSpacing(1);
        slider22.setPaintLabels(true);
        slider22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider22.setValueIsAdjusting(true);
        slider22.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider22StateChanged(evt);
            }
        });

        slider21.setBackground(new java.awt.Color(64, 64, 64));
        slider21.setForeground(new java.awt.Color(255, 255, 255));
        slider21.setMajorTickSpacing(120);
        slider21.setMaximum(1440);
        slider21.setMinorTickSpacing(1);
        slider21.setPaintLabels(true);
        slider21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider21.setValueIsAdjusting(true);
        slider21.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider21StateChanged(evt);
            }
        });

        jLabelMinute22.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute22.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute22.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute22.setText("分");

        jSpinnerHour22.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour22.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel14.setBackground(new java.awt.Color(64, 64, 64));
        jLabel14.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("——");

        jLabelMinute21.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute21.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute21.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute21.setText("分");

        jSpinnerMinute21.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute21.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour21.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour21.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour21.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour21.setText("时");

        jSpinnerHour21.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour21.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek2Layout = new javax.swing.GroupLayout(jPanelWeek2);
        jPanelWeek2.setLayout(jPanelWeek2Layout);
        jPanelWeek2Layout.setHorizontalGroup(
            jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek2Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour21, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelHour21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute21, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek2Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour22, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute22, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek2Layout.setVerticalGroup(
            jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek2Layout.createSequentialGroup()
                .addGroup(jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerMinute22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHour22)
                    .addComponent(jLabelMinute22)
                    .addComponent(jSpinnerHour22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelWeek2Layout.createSequentialGroup()
                .addGroup(jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerHour21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelWeek2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelHour21)
                        .addComponent(jLabelMinute21)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(64, 64, 64));
        jPanel15.setForeground(new java.awt.Color(255, 255, 255));

        jPanel16.setBackground(new java.awt.Color(151, 151, 151));
        jPanel16.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek3.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek3.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek3.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek3.setText("  星期三");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jLabelWeek3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek3, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek3.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek3.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute32.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute32.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour32.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour32.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour32.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour32.setText("时");

        slider32.setMajorTickSpacing(120);
        slider32.setMaximum(1440);
        slider32.setMinorTickSpacing(1);
        slider32.setPaintLabels(true);
        slider32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider32.setValueIsAdjusting(true);
        slider32.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider32StateChanged(evt);
            }
        });

        slider31.setBackground(new java.awt.Color(64, 64, 64));
        slider31.setForeground(new java.awt.Color(255, 255, 255));
        slider31.setMajorTickSpacing(120);
        slider31.setMaximum(1440);
        slider31.setMinorTickSpacing(1);
        slider31.setPaintLabels(true);
        slider31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider31.setValueIsAdjusting(true);
        slider31.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider31StateChanged(evt);
            }
        });

        jLabelMinute32.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute32.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute32.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute32.setText("分");

        jSpinnerHour32.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour32.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel46.setBackground(new java.awt.Color(64, 64, 64));
        jLabel46.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("——");

        jLabelMinute31.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute31.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute31.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute31.setText("分");

        jSpinnerMinute31.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute31.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour31.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour31.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour31.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour31.setText("时");

        jSpinnerHour31.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour31.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek3Layout = new javax.swing.GroupLayout(jPanelWeek3);
        jPanelWeek3.setLayout(jPanelWeek3Layout);
        jPanelWeek3Layout.setHorizontalGroup(
            jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek3Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour31, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelHour31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute31, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute31, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek3Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour32, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute32, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute32, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek3Layout.setVerticalGroup(
            jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek3Layout.createSequentialGroup()
                .addGroup(jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerMinute32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHour32)
                    .addComponent(jLabelMinute32)
                    .addComponent(jSpinnerHour32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelWeek3Layout.createSequentialGroup()
                .addGroup(jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerHour31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelWeek3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelHour31)
                        .addComponent(jLabelMinute31)
                        .addComponent(jLabel46)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(64, 64, 64));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(151, 151, 151));
        jPanel11.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek4.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek4.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek4.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek4.setText("  星期四");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabelWeek4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek4.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek4.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute42.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute42.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour42.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour42.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour42.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour42.setText("时");

        slider42.setBackground(new java.awt.Color(64, 64, 64));
        slider42.setForeground(new java.awt.Color(255, 255, 255));
        slider42.setMajorTickSpacing(120);
        slider42.setMaximum(1440);
        slider42.setMinorTickSpacing(1);
        slider42.setPaintLabels(true);
        slider42.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider42.setValueIsAdjusting(true);
        slider42.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider42StateChanged(evt);
            }
        });

        slider41.setBackground(new java.awt.Color(64, 64, 64));
        slider41.setMajorTickSpacing(120);
        slider41.setMaximum(1440);
        slider41.setMinorTickSpacing(1);
        slider41.setPaintLabels(true);
        slider41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider41.setValueIsAdjusting(true);
        slider41.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider41StateChanged(evt);
            }
        });

        jLabelMinute42.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute42.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute42.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute42.setText("分");

        jSpinnerHour42.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour42.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        jLabel52.setBackground(new java.awt.Color(64, 64, 64));
        jLabel52.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("——");

        jLabelMinute41.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute41.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute41.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute41.setText("分");

        jSpinnerMinute41.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute41.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour41.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour41.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour41.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour41.setText("时");

        jSpinnerHour41.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour41.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek4Layout = new javax.swing.GroupLayout(jPanelWeek4);
        jPanelWeek4.setLayout(jPanelWeek4Layout);
        jPanelWeek4Layout.setHorizontalGroup(
            jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek4Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour41, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute41, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek4Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour42, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute42, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek4Layout.setVerticalGroup(
            jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek4Layout.createSequentialGroup()
                .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWeek4Layout.createSequentialGroup()
                        .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerMinute42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelHour42)
                                .addComponent(jLabelMinute42)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWeek4Layout.createSequentialGroup()
                        .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHour41)
                            .addGroup(jPanelWeek4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerHour41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinnerMinute41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelMinute41)
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jPanelWeek4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelHour41, jSpinnerHour41});

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanelWeek4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBackground(new java.awt.Color(64, 64, 64));
        jPanel17.setForeground(new java.awt.Color(255, 255, 255));
        jPanel17.setPreferredSize(new java.awt.Dimension(564, 138));

        jPanel18.setBackground(new java.awt.Color(151, 151, 151));
        jPanel18.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek5.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek5.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek5.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek5.setText("  星期五");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jLabelWeek5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek5, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek5.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek5.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute52.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute52.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour52.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour52.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour52.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour52.setText("时");

        slider52.setMajorTickSpacing(120);
        slider52.setMaximum(1440);
        slider52.setMinorTickSpacing(1);
        slider52.setPaintLabels(true);
        slider52.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider52.setValueIsAdjusting(true);
        slider52.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider52StateChanged(evt);
            }
        });

        slider51.setBackground(new java.awt.Color(64, 64, 64));
        slider51.setForeground(new java.awt.Color(255, 255, 255));
        slider51.setMajorTickSpacing(120);
        slider51.setMaximum(1440);
        slider51.setMinorTickSpacing(1);
        slider51.setPaintLabels(true);
        slider51.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider51.setValueIsAdjusting(true);
        slider51.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider51StateChanged(evt);
            }
        });

        jLabelMinute52.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute52.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute52.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute52.setText("分");

        jSpinnerHour52.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour52.setModel(new javax.swing.SpinnerNumberModel(20, 0, 23, 1));

        jLabel58.setBackground(new java.awt.Color(64, 64, 64));
        jLabel58.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 255, 255));
        jLabel58.setText("——");

        jLabelMinute51.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute51.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute51.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute51.setText("分");

        jSpinnerMinute51.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute51.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour51.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour51.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour51.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour51.setText("时");

        jSpinnerHour51.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour51.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek5Layout = new javax.swing.GroupLayout(jPanelWeek5);
        jPanelWeek5.setLayout(jPanelWeek5Layout);
        jPanelWeek5Layout.setHorizontalGroup(
            jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek5Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour51, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabelHour51, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute51, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute51, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek5Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour52, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour52, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute52, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute52, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek5Layout.setVerticalGroup(
            jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek5Layout.createSequentialGroup()
                .addGroup(jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerMinute52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHour52)
                    .addComponent(jLabelMinute52)
                    .addComponent(jSpinnerHour52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelWeek5Layout.createSequentialGroup()
                .addGroup(jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerHour51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelWeek5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinnerMinute51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelHour51)
                        .addComponent(jLabelMinute51)
                        .addComponent(jLabel58)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slider51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelWeek5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelHour51, jSpinnerHour51});

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(64, 64, 64));
        jPanel12.setForeground(new java.awt.Color(255, 255, 255));

        jPanel19.setBackground(new java.awt.Color(151, 151, 151));
        jPanel19.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek6.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek6.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek6.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek6.setText("  星期六");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jLabelWeek6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 437, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek6, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek6.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek6.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute62.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute62.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour62.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour62.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour62.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour62.setText("时");

        slider62.setBackground(new java.awt.Color(64, 64, 64));
        slider62.setForeground(new java.awt.Color(255, 255, 255));
        slider62.setMajorTickSpacing(120);
        slider62.setMaximum(1440);
        slider62.setMinorTickSpacing(1);
        slider62.setPaintLabels(true);
        slider62.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider62.setValueIsAdjusting(true);
        slider62.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider62StateChanged(evt);
            }
        });

        slider61.setBackground(new java.awt.Color(64, 64, 64));
        slider61.setMajorTickSpacing(120);
        slider61.setMaximum(1440);
        slider61.setMinorTickSpacing(1);
        slider61.setPaintLabels(true);
        slider61.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider61.setValueIsAdjusting(true);
        slider61.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider61StateChanged(evt);
            }
        });

        jLabelMinute62.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute62.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute62.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute62.setText("分");

        jSpinnerHour62.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour62.setModel(new javax.swing.SpinnerNumberModel(20, 0, 23, 1));

        jLabel64.setBackground(new java.awt.Color(64, 64, 64));
        jLabel64.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("——");

        jLabelMinute61.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute61.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute61.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute61.setText("分");

        jSpinnerMinute61.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute61.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour61.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour61.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour61.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour61.setText("时");

        jSpinnerHour61.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour61.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek6Layout = new javax.swing.GroupLayout(jPanelWeek6);
        jPanelWeek6.setLayout(jPanelWeek6Layout);
        jPanelWeek6Layout.setHorizontalGroup(
            jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek6Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour61, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour61, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute61, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider61, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute61, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek6Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour62, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour62, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute62, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute62, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek6Layout.setVerticalGroup(
            jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek6Layout.createSequentialGroup()
                .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWeek6Layout.createSequentialGroup()
                        .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerMinute62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelHour62)
                                .addComponent(jLabelMinute62)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWeek6Layout.createSequentialGroup()
                        .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHour61)
                            .addGroup(jPanelWeek6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerHour61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinnerMinute61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelMinute61)
                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jPanelWeek6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelHour61, jSpinnerHour61});

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(64, 64, 64));
        jPanel20.setForeground(new java.awt.Color(255, 255, 255));
        jPanel20.setPreferredSize(new java.awt.Dimension(564, 138));

        jPanel21.setBackground(new java.awt.Color(151, 151, 151));
        jPanel21.setForeground(new java.awt.Color(255, 255, 255));

        jLabelWeek7.setBackground(new java.awt.Color(151, 151, 151));
        jLabelWeek7.setFont(new java.awt.Font("微软雅黑", 2, 16)); // NOI18N
        jLabelWeek7.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWeek7.setText("  星期日");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addComponent(jLabelWeek7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 437, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelWeek7, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jPanelWeek7.setBackground(new java.awt.Color(64, 64, 64));
        jPanelWeek7.setForeground(new java.awt.Color(255, 255, 255));

        jSpinnerMinute72.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute72.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour72.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour72.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour72.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour72.setText("时");

        slider72.setBackground(new java.awt.Color(64, 64, 64));
        slider72.setForeground(new java.awt.Color(255, 255, 255));
        slider72.setMajorTickSpacing(120);
        slider72.setMaximum(1440);
        slider72.setMinorTickSpacing(1);
        slider72.setPaintLabels(true);
        slider72.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider72.setValueIsAdjusting(true);
        slider72.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider72StateChanged(evt);
            }
        });

        slider71.setBackground(new java.awt.Color(64, 64, 64));
        slider71.setMajorTickSpacing(120);
        slider71.setMaximum(1440);
        slider71.setMinorTickSpacing(1);
        slider71.setPaintLabels(true);
        slider71.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider71.setValueIsAdjusting(true);
        slider71.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider71StateChanged(evt);
            }
        });

        jLabelMinute72.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute72.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute72.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute72.setText("分");

        jSpinnerHour72.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour72.setModel(new javax.swing.SpinnerNumberModel(20, 0, 23, 1));

        jLabel70.setBackground(new java.awt.Color(64, 64, 64));
        jLabel70.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 255, 255));
        jLabel70.setText("——");

        jLabelMinute71.setBackground(new java.awt.Color(64, 64, 64));
        jLabelMinute71.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelMinute71.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMinute71.setText("分");

        jSpinnerMinute71.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerMinute71.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabelHour71.setBackground(new java.awt.Color(64, 64, 64));
        jLabelHour71.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jLabelHour71.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHour71.setText("时");

        jSpinnerHour71.setFont(new java.awt.Font("微软雅黑", 0, 15)); // NOI18N
        jSpinnerHour71.setModel(new javax.swing.SpinnerNumberModel(8, 0, 24, 1));

        javax.swing.GroupLayout jPanelWeek7Layout = new javax.swing.GroupLayout(jPanelWeek7);
        jPanelWeek7.setLayout(jPanelWeek7Layout);
        jPanelWeek7Layout.setHorizontalGroup(
            jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek7Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour71, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour71, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute71, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute71, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelWeek7Layout.createSequentialGroup()
                        .addComponent(jSpinnerHour72, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelHour72, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMinute72, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(slider72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMinute72, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelWeek7Layout.setVerticalGroup(
            jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWeek7Layout.createSequentialGroup()
                .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelWeek7Layout.createSequentialGroup()
                        .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinnerHour72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerMinute72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelHour72)
                                .addComponent(jLabelMinute72)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelWeek7Layout.createSequentialGroup()
                        .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHour71)
                            .addGroup(jPanelWeek7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinnerHour71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinnerMinute71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelMinute71)
                                .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jPanelWeek7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelHour71, jSpinnerHour71});

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelWeek7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelWeek7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTimeTemplateLayout = new javax.swing.GroupLayout(jPanelTimeTemplate);
        jPanelTimeTemplate.setLayout(jPanelTimeTemplateLayout);
        jPanelTimeTemplateLayout.setHorizontalGroup(
            jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTimeTemplateLayout.createSequentialGroup()
                .addGroup(jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelTimeTemplateLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel12, jPanel20});

        jPanelTimeTemplateLayout.setVerticalGroup(
            jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTimeTemplateLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTimeTemplateLayout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTimeTemplateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jPanelTimeTemplateLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel10, jPanel13, jPanel15, jPanel17, jPanel20, jPanel7});

        jPanel4.add(jPanelTimeTemplate, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setViewportView(jPanel4);

        jPanelRight.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanelFoot.setBackground(new java.awt.Color(151, 151, 151));
        jPanelFoot.setForeground(new java.awt.Color(255, 255, 255));

        jButtonSave.setBackground(new java.awt.Color(64, 64, 64));
        jButtonSave.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/ok.png"))); // NOI18N
        jButtonSave.setText("保存");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(64, 64, 64));
        jButtonExit.setFont(new java.awt.Font("微软雅黑", 0, 16)); // NOI18N
        jButtonExit.setForeground(new java.awt.Color(255, 255, 255));
        jButtonExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jyms/image/cancel.png"))); // NOI18N
        jButtonExit.setText("退出");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFootLayout = new javax.swing.GroupLayout(jPanelFoot);
        jPanelFoot.setLayout(jPanelFootLayout);
        jPanelFootLayout.setHorizontalGroup(
            jPanelFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFootLayout.createSequentialGroup()
                .addContainerGap(909, Short.MAX_VALUE)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelFootLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonExit, jButtonSave});

        jPanelFootLayout.setVerticalGroup(
            jPanelFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFootLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonExit)
                    .addComponent(jButtonSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelRight.add(jPanelFoot, java.awt.BorderLayout.PAGE_END);

        jSplitPaneSchedule.setRightComponent(jPanelRight);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneSchedule, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneSchedule, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonAllDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAllDayActionPerformed
        // TODO add your handling code here:
        setAllDayState();
        jCheckBoxAllSame.setEnabled(false);
        setEnable();
    }//GEN-LAST:event_jRadioButtonAllDayActionPerformed

    private void jRadioButtonWorkDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonWorkDayActionPerformed
        // TODO add your handling code here:
        setWorkDayState();
        jCheckBoxAllSame.setEnabled(false);
        setEnable();
    }//GEN-LAST:event_jRadioButtonWorkDayActionPerformed

    private void jRadioButtonSelfDefineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSelfDefineActionPerformed
        // TODO add your handling code here:
        //        setWorkDayState();
        jCheckBoxAllSame.setEnabled(true);
        jCheckBoxAllSame.setSelected(true);
        setEnable();
    }//GEN-LAST:event_jRadioButtonSelfDefineActionPerformed

    private void jCheckBoxAllSameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxAllSameItemStateChanged
        // TODO add your handling code here:
        setEnable();
    }//GEN-LAST:event_jCheckBoxAllSameItemStateChanged

    private void slider12StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider12StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider12,jSpinnerHour12,jSpinnerMinute12);
    }//GEN-LAST:event_slider12StateChanged

    private void slider11StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider11StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider11,jSpinnerHour11,jSpinnerMinute11);
    }//GEN-LAST:event_slider11StateChanged

    private void slider22StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider22StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider22,jSpinnerHour22,jSpinnerMinute22);
    }//GEN-LAST:event_slider22StateChanged

    private void slider21StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider21StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider21,jSpinnerHour21,jSpinnerMinute21);
    }//GEN-LAST:event_slider21StateChanged

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here:
        saveRecordSchedule();//存储设备通道存储计划
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // TODO add your handling code here:
        doDefaultCloseAction();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonHighSetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHighSetupActionPerformed
        // TODO add your handling code here:
        //System.out.println(m_struRemoteRecCfg.dwRecorderDuration + "");
//        JDialogRecordParas DialogRecordParas = new JDialogRecordParas(null, true, m_struRemoteRecCfg);//有模式对话框
//        DialogRecordParas.setVisible(true);
        showRecordParas();
        //CommonParas.centerWindow(jDialogRecordParas);
        CommonParas.setAppropriateLocation(jDialogRecordParas, jButtonHighSetup);
        jDialogRecordParas.setVisible(true);
        //System.out.println(m_struRemoteRecCfg.dwRecorderDuration + "");
    }//GEN-LAST:event_jButtonHighSetupActionPerformed

    private void jCheckBoxIfRecordItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxIfRecordItemStateChanged
        // TODO add your handling code here:
        setEnable();
    }//GEN-LAST:event_jCheckBoxIfRecordItemStateChanged

    private void jTreeResourceValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeResourceValueChanged
        // TODO add your handling code here:

        //        DefaultMutableTreeNode  NewNode =(DefaultMutableTreeNode)jTreeResource.getSelectionPath().getLastPathComponent();
        //        String GroupName = NewNode.toString();
        //        int Level = NewNode.getLevel();//如果是在组名上则为1；在节点上则为2
        try {
            
            iIndexOfTreeNodeClicked = 0;
            DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeResource.getLastSelectedPathComponent();
            if (selectionNode == null) return;
            String nodeName = selectionNode.toString();
            
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            // 判断是否为树叶节点，若是则读取设备通道录像参数，若不是则不做任何事。
            if (selectionNode.isLeaf()) {
                iIndexOfTreeNodeClicked = 1;
                sChannelNode = nodeName;
                //设备名称
                sAnotherName = sChannelNode.substring(0, sChannelNode.indexOf("_"));
                sSerialNo = CommonParas.getSerialNO(sAnotherName, sFileName);
                //通道号
                iChannel = getChannelNumber(sChannelNode);
                //读取设备通道录像参数
                IntByReference ibrBytesReturned = new IntByReference(0);//获取录像参数
                NativeLong lUserID = CommonParas.getUserID(sAnotherName, sFileName);

                boolean getDVRConfigSuc = false;
                m_struRemoteRecCfg = new HCNetSDK.NET_DVR_RECORD_V30();
                m_struRemoteRecCfg.write();
                Pointer lpPicConfig = m_struRemoteRecCfg.getPointer();
                getDVRConfigSuc = CommonParas.hCNetSDK.NET_DVR_GetDVRConfig(lUserID, HCNetSDK.NET_DVR_GET_RECORDCFG_V30,
                    new NativeLong(iChannel), lpPicConfig, m_struRemoteRecCfg.size(), ibrBytesReturned);
                m_struRemoteRecCfg.read();
                if (getDVRConfigSuc != true){
                    System.out.println(CommonParas.hCNetSDK.NET_DVR_GetLastError());
                    this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    JOptionPane.showMessageDialog(null, sGetRecordPara_Fail);//"获取录像参数失败"
                    return;
                }
                //显示存储计划内容
                showRecordSchedule();

            }else{
                setEnable();
            }
        }catch (Exception e){
            TxtLogger.append(this.sFileName, "jTreeResourceValueChanged()","系统在读取录像计划过程中，出现错误"
                + "\r\n                       Exception:" + e.toString());
        }
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jTreeResourceValueChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        setAllJSiliderModel();
        //setAllSpinnerModel();
        jSplitPaneSchedule.setDividerLocation(300);
        //设置自定义UI
        jyms.tools.TreeUtil.modifyTreeCellRenderer(jTreeResource);
        //CommonParas.CreateDeviceResourceTree(jTreeResource, m_DeviceRootResource, "", CommonParas.DVRResourceType.RESTYPE_ENCODINGDVR_CHANNEL_CODE, sFileName);//监控点
        CommonParas.CreateOneTypeDeviceResourceTree(jTreeResource, m_DeviceRootResource, "", CommonParas.DVRType.DVRTYPE_ENCODINGDVR_NVR_CODE, 
                    CommonParas.DVRResourceType.RESTYPE_ENCODINGDVR_CHANNEL_CODE, sFileName);//监控点

        setEnable();
    }//GEN-LAST:event_formInternalFrameOpened

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
//        if ((JOptionPane.showConfirmDialog(null, "存储计划已经被更改，是否保存？",  
//                    "提醒",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)) 
//            saveRecordSchedule();//存储设备通道存储计划
    }//GEN-LAST:event_formInternalFrameClosing

    private void slider32StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider32StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider32,jSpinnerHour32,jSpinnerMinute32);
    }//GEN-LAST:event_slider32StateChanged

    private void slider31StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider31StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider31,jSpinnerHour31,jSpinnerMinute31);
    }//GEN-LAST:event_slider31StateChanged

    private void slider42StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider42StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider42,jSpinnerHour42,jSpinnerMinute42);
    }//GEN-LAST:event_slider42StateChanged

    private void slider41StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider41StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider41,jSpinnerHour41,jSpinnerMinute41);
    }//GEN-LAST:event_slider41StateChanged

    private void slider52StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider52StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider52,jSpinnerHour52,jSpinnerMinute52);
    }//GEN-LAST:event_slider52StateChanged

    private void slider51StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider51StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider51,jSpinnerHour51,jSpinnerMinute51);
    }//GEN-LAST:event_slider51StateChanged

    private void slider62StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider62StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider62,jSpinnerHour62,jSpinnerMinute61);
    }//GEN-LAST:event_slider62StateChanged

    private void slider61StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider61StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider61,jSpinnerHour61,jSpinnerMinute61);
    }//GEN-LAST:event_slider61StateChanged

    private void slider72StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider72StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider72,jSpinnerHour72,jSpinnerMinute71);
    }//GEN-LAST:event_slider72StateChanged

    private void slider71StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider71StateChanged
        // TODO add your handling code here:
        setJSpinnerValue(slider71,jSpinnerHour71,jSpinnerMinute71);
    }//GEN-LAST:event_slider71StateChanged

    private void jCheckBoxAudioRecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAudioRecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxAudioRecActionPerformed

    private void jTextFieldSaveDaysKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSaveDaysKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_DELETE || c == KeyEvent.VK_BACK_SPACE) return;
        if (!(c >= '0' && c <= '9')) {
            JOptionPane.showMessageDialog(rootPane, sInputError );//"输入有误。输入必须数字，其它字符非法！"
            evt.setKeyChar('\0');
        }
    }//GEN-LAST:event_jTextFieldSaveDaysKeyTyped

    private void jButtonSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSave2ActionPerformed
        // TODO add your handling code here:
        m_struRemoteRecCfg.dwPreRecordTime = jComboBoxPreRecordTime.getSelectedIndex();
        m_struRemoteRecCfg.dwRecordTime = jComboBoxRecordDelay.getSelectedIndex();
        m_struRemoteRecCfg.dwRecorderDuration = Integer.parseInt(jTextFieldSaveDays.getText());
        m_struRemoteRecCfg.byRedundancyRec = (byte) ((jCheckBoxRebundancy.isSelected() == true) ? 1 : 0);
        m_struRemoteRecCfg.byAudioRec = (byte) ((jCheckBoxAudioRec.isSelected() == true) ? 1 : 0);
        jDialogRecordParas.dispose();
    }//GEN-LAST:event_jButtonSave2ActionPerformed

    private void jButtonExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExit2ActionPerformed
        // TODO add your handling code here:
        jButtonCancel2.doClick();
    }//GEN-LAST:event_jButtonExit2ActionPerformed

    private void jButtonCancel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancel2ActionPerformed
        // TODO add your handling code here:
        jDialogRecordParas.dispose();
    }//GEN-LAST:event_jButtonCancel2ActionPerformed

    /**
        *函数:      getByteValue
        *函数描述:  得到JSpinner的数值。因为直接转换byte会出现错误
        *@param  jSpinner
     */
    private byte getByteValue(JSpinner jSpinner){
        return Byte.parseByte(jSpinner.getValue().toString());
    }
    
    /**
        *函数:      initialResourceTreeModel
        *函数描述:  初始化设备资源树
        * @return DefaultTreeModel
     */
    private DefaultTreeModel initialResourceTreeModel()
    {
        m_DeviceRootResource = new DefaultMutableTreeNode(sDeviceRootResource); //"监控点"
        DefaultTreeModel myDefaultTreeModel = new DefaultTreeModel(m_DeviceRootResource);//使用根节点创建模型
        return myDefaultTreeModel;
    }
    
    /**
	 * 函数:      setJSpinnerValue
         * @para Slider   JSlider控件
         * @para Spinner1   JSpinner控件
         * @para Spinner2   JSpinner控件
         * 函数描述:  根据Slider的值动态设定Spinner1和Spinner2的值
    */
    private void setJSpinnerValue(JSlider Slider,JSpinner Spinner1,JSpinner Spinner2){
        int Hour = Slider.getValue()/60;
        int Minute = Slider.getValue() - Hour * 60;
        //24:00实际上是0：00
//        if (Hour == 24 && Minute ==0){
//            Hour = 23;
//            Minute =59;
//        }
        
        Spinner1.setValue(Hour);
        Spinner2.setValue(Minute);
    }
    /**
	 * 函数:      setAllJSiliderModel
         * 函数描述:  重新设定所有的JSilider控件的属性
    */
    private void setAllJSiliderModel(){
        setJSiliderModel(slider11);
        setJSiliderModel(slider12);
        setJSiliderModel(slider21);
        setJSiliderModel(slider22);
        setJSiliderModel(slider31);
        setJSiliderModel(slider32);
        setJSiliderModel(slider41);
        setJSiliderModel(slider42);
        setJSiliderModel(slider51);
        setJSiliderModel(slider52);
        setJSiliderModel(slider61);
        setJSiliderModel(slider62);
        setJSiliderModel(slider71);
        setJSiliderModel(slider72);

    }
    /**
	 * 函数:      setJSiliderModel
         * 函数描述:  重新设定JSlider控件的属性
         * @para Slider   JSlider控件
    */
    private void setJSiliderModel(JSlider Slider){
        Hashtable table = new Hashtable();

        table.put(0, new JLabel("0"));
        table.put(120, new JLabel("2"));
        table.put(240, new JLabel("4"));
        table.put(360,new JLabel("6"));
        table.put(480, new JLabel("8"));
        table.put(600, new JLabel("10"));
        table.put(720, new JLabel("12"));
        table.put(840, new JLabel("14"));

        table.put(960, new JLabel("16"));
        table.put(1080, new JLabel("18"));
        table.put(1200, new JLabel("20"));
        table.put(1320, new JLabel("22"));
        table.put(1440, new JLabel("24"));
        
        Slider.setLabelTable(table);
    }
    /**
	 * 函数:      setJSpinnerModel
         * 函数描述:  重新设定JSpinner控件的属性
         * @para Spinner   JSpinner控件
    */
    private void setJSpinnerModel(JSpinner Spinner){
        JSpinner.NumberEditor editor = new JSpinner.NumberEditor(Spinner, "0");
        Spinner.setEditor(editor);
        JFormattedTextField textField = ((JSpinner.NumberEditor) Spinner.getEditor()).getTextField();
        textField.setEditable(true);
        DefaultFormatterFactory factory = (DefaultFormatterFactory) textField.getFormatterFactory();
        NumberFormatter formatter = (NumberFormatter) factory.getDefaultFormatter();
        formatter.setAllowsInvalid(false);
    }
    /**
	 * 函数:      setAllSpinnerModel
         * 函数描述:  重新设定所有的JSpinner控件的属性
    */
    private void setAllSpinnerModel(){
        setJSpinnerModel(jSpinnerHour11);
        setJSpinnerModel(jSpinnerHour12);
        setJSpinnerModel(jSpinnerHour21);
        setJSpinnerModel(jSpinnerHour22);
        setJSpinnerModel(jSpinnerHour31);
        setJSpinnerModel(jSpinnerHour32);
        setJSpinnerModel(jSpinnerHour41);
        setJSpinnerModel(jSpinnerHour42);
        setJSpinnerModel(jSpinnerHour51);
        setJSpinnerModel(jSpinnerHour52);
        setJSpinnerModel(jSpinnerHour61);
        setJSpinnerModel(jSpinnerHour62);
        setJSpinnerModel(jSpinnerHour71);
        setJSpinnerModel(jSpinnerHour72);
        setJSpinnerModel(jSpinnerMinute11);
        setJSpinnerModel(jSpinnerMinute12);
        setJSpinnerModel(jSpinnerMinute21);
        setJSpinnerModel(jSpinnerMinute22);
        setJSpinnerModel(jSpinnerMinute31);
        setJSpinnerModel(jSpinnerMinute32);
        setJSpinnerModel(jSpinnerMinute41);
        setJSpinnerModel(jSpinnerMinute42);
        setJSpinnerModel(jSpinnerMinute51);
        setJSpinnerModel(jSpinnerMinute52);
        setJSpinnerModel(jSpinnerMinute61);
        setJSpinnerModel(jSpinnerMinute61);
        setJSpinnerModel(jSpinnerMinute71);
        setJSpinnerModel(jSpinnerMinute71);
    }
    /**
	 * 函数:      getChannelNumber
         * 函数描述:  获得该设备当前的通道号
         * @return int   设备当前的通道号
    */
    private int getChannelNumber(String ChannelNode){
        int Channel = Integer.parseInt(ChannelNode.substring(ChannelNode.lastIndexOf("_")+1,ChannelNode.length()));
        if (ChannelNode.lastIndexOf("IP") > -1) Channel = Channel + HCNetSDK.MAX_ANALOG_CHANNUM;//32;//IP通道号要加32
        return Channel;
    }
    /**
	 * 函数:      showRecordSchedule
         * 函数描述:  显示设备通道存储计划
    */
    private void showRecordSchedule(){
        if (m_struRemoteRecCfg == null) return;
        boolean IfRecord = (m_struRemoteRecCfg.dwRecord > 0);//是否启用计划存储
        jCheckBoxIfRecord.setSelected(IfRecord);
        /*系统设置全部7天全部是全天录像或者不是；全部7天都是一种录像类型，但是每天的起止时间可以不同，是为了设置尽量简单化*/

        //是否全天录像。
        //如果全天录像。因为系统设置全天录像就是全部7天都是全天录像，所以只判断星期一就可以了。
        if (m_struRemoteRecCfg.struRecAllDay[0].wAllDayRecord == 1) {
            jRadioButtonAllDay.setSelected(true);//全天模式启用
            setAllDayState();
        }else{//选择自定义模式
            jRadioButtonSelfDefine.setSelected(true);
            getSelfDefineDayState();
        }
        //根据上述条件设置设置部件的可用/不可用状态
        setEnable();//设置部件的可用/不可用状态
        
        byte RecordType;
        if (m_struRemoteRecCfg.struRecAllDay[0].wAllDayRecord == 1) 
            RecordType =  m_struRemoteRecCfg.struRecAllDay[0].byRecordType;
        else 
            RecordType =  m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].byRecordType;
        
        switch (RecordType){
            case 0://0-定时录像
                jRadioButtonTime.setSelected(true);
                break;
            case 5://5-命令触发录像
                jRadioButtonCommandTrigger.setSelected(true);
                break;
            case 13://13-报警录像
                jRadioButtonEvent.setSelected(true);
                break;
            
            default://其他报警录像
                jRadioButtonEvent.setSelected(true);
                break;
        }
        
//        //以下是非全天录像的情况，也就是自定义模式
//        //不全天录像，就是全部是不全天录像。系统暂时这样认定
//        
//        //星期一
//        jSpinnerHour11.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute11.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour12.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute12.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopMin);
//        
//        
//        //星期二
//        jSpinnerHour21.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute21.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour22.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute22.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopMin);
//        //星期三
//        jSpinnerHour31.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute31.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour32.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute32.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopMin);
//        //星期四
//        jSpinnerHour41.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute41.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour42.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute42.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopMin);
//        //星期五
//        jSpinnerHour51.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute51.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour52.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute52.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopMin);
//        //星期六
//        jSpinnerHour61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour62.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopMin);
//        //星期日
//        jSpinnerHour71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartHour);
//        jSpinnerMinute71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartMin);
//        jSpinnerHour72.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopHour);
//        jSpinnerMinute71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopMin);
        
        //判断7天配置是否相同
        jCheckBoxAllSame.setSelected(ifAllSame7());
    }
    /**
	 * 函数:      saveRecordSchedule
         * 函数描述:  存储设备通道存储计划
    */
    private void saveRecordSchedule(){
        DefaultMutableTreeNode selectionNode = (DefaultMutableTreeNode) jTreeResource.getLastSelectedPathComponent();
        // 判断是否为树叶节点，若是则继续设置设备通道录像参数，若不是则不做任何事。
        if (selectionNode == null || !selectionNode.isLeaf()) return;
//        if (!jCheckBoxIfRecord.isSelected()) return;//如果不启用，则返回，什么都不做
        
        m_struRemoteRecCfg.dwRecord = (jCheckBoxIfRecord.isSelected() == true) ? 1 : 0;
                
        byte RecordType;
        if(jRadioButtonCommandTrigger.isSelected() == true){//命令触发录像
            RecordType = 5;
        }else if (jRadioButtonTime.isSelected() == true) {//定时录像
            RecordType = 0;
        }else{//事件录像
            RecordType = 13;//也就是报警录像
        }
        
        try {
            if(jRadioButtonAllDay.isSelected() == true){//全天模式
                for (int i=0;i<7;i++){
                    m_struRemoteRecCfg.struRecAllDay[i].wAllDayRecord = 1;
                    m_struRemoteRecCfg.struRecAllDay[i].byRecordType = RecordType;
                }
            }else if (jRadioButtonWorkDay.isSelected() == true) {//工作日模式
                //工作日模式只有一个时间段8-20点
                for (int i=0;i<7;i++){
                    m_struRemoteRecCfg.struRecAllDay[i].wAllDayRecord = 0;
                    m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartHour = 8;
                    m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartMin = 0;

                    m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopHour = 20;
                    m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopMin = 0;

                    m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].byRecordType = RecordType;
                }
            }else{//自定义模式

                for (int i=0;i<7;i++){
                    m_struRemoteRecCfg.struRecAllDay[i].wAllDayRecord = 0;
                }
                //是否是7天设置相同
                if(jCheckBoxAllSame.isSelected()){
                    byte BStartHour = getByteValue( jSpinnerHour11);
                    byte BStartMin = getByteValue( jSpinnerMinute11);
                    byte BStopHour = getByteValue( jSpinnerHour12);
                    byte BStopMin = getByteValue( jSpinnerMinute12);
                    for (int i=0;i<7;i++){
                        m_struRemoteRecCfg.struRecAllDay[i].wAllDayRecord = 0;
                        m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartHour = BStartHour;
                        m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartMin = BStartMin;

                        m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopHour = BStopHour;
                        m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopMin = BStopMin;

                        m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].byRecordType = RecordType;
                    }
                }else {//7天全部自定义设置
                    //星期一
                    m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartHour = getByteValue( jSpinnerHour11);//Byte.parseByte(jSpinnerHour11.getValue().toString());
                    m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute11);
                    m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour12);
                    m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopMin =getByteValue( jSpinnerMinute12);
                    m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].byRecordType = RecordType;
                    //星期二
                    m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour21);
                    m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute21);
                    m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour22);
                    m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopMin =getByteValue( jSpinnerMinute22);
                    m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].byRecordType = RecordType;
                    //星期三
                    m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour31);
                    m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute31);
                    m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour32);
                    m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopMin =getByteValue( jSpinnerMinute32);
                    m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].byRecordType = RecordType;
                    //星期四
                    m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour41);
                    m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute41);
                    m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour42);
                    m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopMin =getByteValue( jSpinnerMinute42);
                    m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].byRecordType = RecordType;
                    //星期五
                    m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour51);
                    m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute51);
                    m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour52);
                    m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopMin =getByteValue( jSpinnerMinute52);
                    m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].byRecordType = RecordType;
                    //星期六
                    m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour61);
                    m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute61);
                    m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour62);
                    m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopMin =getByteValue(jSpinnerMinute61);
                    m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].byRecordType = RecordType;
                    //星期日
                    m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartHour =getByteValue( jSpinnerHour71);
                    m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartMin =getByteValue( jSpinnerMinute71);
                    m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopHour =getByteValue( jSpinnerHour72);
                    m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopMin =getByteValue(jSpinnerMinute71);
                
                }
            }

            //根据节点得到通道号，得到设备名称
            //根据设备名称得到UserID
            NativeLong lUserID = CommonParas.getUserID(sAnotherName, sFileName);

            boolean setDVRConfigSuc = false;
            m_struRemoteRecCfg.write();
            Pointer lpPicConfig = m_struRemoteRecCfg.getPointer();
            setDVRConfigSuc = CommonParas.hCNetSDK.NET_DVR_SetDVRConfig(lUserID, HCNetSDK.NET_DVR_SET_RECORDCFG_V30,
                    new NativeLong(iChannel), lpPicConfig, m_struRemoteRecCfg.size());
            m_struRemoteRecCfg.read();
            if (setDVRConfigSuc){
                //修改数据库中的数据
                boolean bReturn = DeviceResourceBean.setupRecordSchedule(sSerialNo, CommonParas.getDVRNodeFromTreeNode(sChannelNode), jCheckBoxIfRecord.isSelected(), sFileName);
                if (!bReturn) TxtLogger.append(this.sFileName, "saveRecordSchedule()","修改设备资源表的是否已实现存储计划标志ifRecordSchedule时，出现错误");
                
                writeRecordScheduleLog();
            }else{
                writeRecordScheduleErrorLog();
            }

//            CommonParas.hCNetSDK.NET_DVR_StartDVRRecord(lUserID,new NativeLong(iChannel),new NativeLong(0));//手动录像，没有问题
            //手动录像，没有问题0x00ff表示所有模拟通道，0xff00表示所有数字通道，0xffff表示所有模拟和数字通道 。试验0xffff时录像机全部摄像IP通道全部开始录像
//            CommonParas.hCNetSDK.NET_DVR_StartDVRRecord(lUserID,new NativeLong(0xffff),new NativeLong(0));


        }catch (NumberFormatException | HeadlessException e){
            TxtLogger.append(this.sFileName, "saveRecordSchedule()","系统在保存录像计划过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
    }
    /**
	 * 函数:      setEnable
         * 函数描述:  根据是否启用计划存储设置部件的可用/不可用状态
    */
    private void setEnable(){
        
        if (sAnotherName.equals("") || iIndexOfTreeNodeClicked == 0 || sAnotherName.equals(sChannelNode)){
            jCheckBoxIfRecord.setEnabled(false);
            jCheckBoxIfRecord.setSelected(false);
            jButtonSave.setEnabled(false);
        }else {
            jCheckBoxIfRecord.setEnabled(true);
            jButtonSave.setEnabled(true);
        }
        
        ////如果不启用，则全不可用
        if (!jCheckBoxIfRecord.isSelected()) {
            setAllJPanelEnable(false);
            return;
        }else{
            jButtonHighSetup.setEnabled(true);
            setJPanelAllOCXEnable(jPanelRecordType,true);
            setJPanelAllOCXEnable(jPanelRecordMode,true);
        }
        
        if(jRadioButtonAllDay.isSelected()){//全天模式
            
            setAllWeekJPanelEnable(false);
            jCheckBoxAllSame.setEnabled(false);
        }else if (jRadioButtonWorkDay.isSelected()) {//工作日模式
            setAllWeekJPanelEnable(false);
            jCheckBoxAllSame.setEnabled(false);
        }else{//自定义模式
            jCheckBoxAllSame.setEnabled(true);
            if (jCheckBoxAllSame.isSelected()){
                setJPanelAllOCXEnable(jPanelWeek1,true);
                setJPanelAllOCXEnable(jPanelWeek2,false);
                setJPanelAllOCXEnable(jPanelWeek3,false);
                setJPanelAllOCXEnable(jPanelWeek4,false);
                setJPanelAllOCXEnable(jPanelWeek5,false);
                setJPanelAllOCXEnable(jPanelWeek6,false);
                setJPanelAllOCXEnable(jPanelWeek7,false);
            }else {
                setAllWeekJPanelEnable(true);
            }
            
        }
    }
    /**
	 * 函数:      setAllJPanelEnable
         * 函数描述:  设置所有的JPanel中所有的控件是否可用
         * @para enabled   是否可用
    */
    private void setAllJPanelEnable(boolean Enable){
        jButtonHighSetup.setEnabled(Enable);
        setJPanelAllOCXEnable(jPanelRecordType,Enable);
        setJPanelAllOCXEnable(jPanelRecordMode,Enable);
        setJPanelAllOCXEnable(jPanelWeek1,Enable);
        setJPanelAllOCXEnable(jPanelWeek2,Enable);
        setJPanelAllOCXEnable(jPanelWeek3,Enable);
        setJPanelAllOCXEnable(jPanelWeek4,Enable);
        setJPanelAllOCXEnable(jPanelWeek5,Enable);
        setJPanelAllOCXEnable(jPanelWeek6,Enable);
        setJPanelAllOCXEnable(jPanelWeek7,Enable);
    }
    /**
	 * 函数:      setAllWeekJPanelEnable
         * 函数描述:  设置所有的JPanel中所有的控件是否可用
         * @para enabled   是否可用
    */
    private void setAllWeekJPanelEnable(boolean Enable){

        setJPanelAllOCXEnable(jPanelWeek1,Enable);
        setJPanelAllOCXEnable(jPanelWeek2,Enable);
        setJPanelAllOCXEnable(jPanelWeek3,Enable);
        setJPanelAllOCXEnable(jPanelWeek4,Enable);
        setJPanelAllOCXEnable(jPanelWeek5,Enable);
        setJPanelAllOCXEnable(jPanelWeek6,Enable);
        setJPanelAllOCXEnable(jPanelWeek7,Enable);
    }
    /**
	 * 函数:      setJPanelAllOCXEnable
         * 函数描述:  设置JPanel中所有的控件是否可用
         * @para jPanel  JPanel
         * @para enabled   是否可用
    */
    private void setJPanelAllOCXEnable(JPanel jPanel,boolean enabled){
        jPanel.setEnabled(enabled);
        Component[] com =  jPanel.getComponents();
        for (Component com1 : com) {
            com1.setEnabled(enabled);
        }
    }
    /**
        * 函数:      ifAllSame7
        * 函数描述:  判断7天的设置是否相同
    */
    private boolean ifAllSame7(){
        try{
            byte BStartHour = m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartHour;
            byte BStartMin = m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartMin;
            byte BStopHour = m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopHour;
            byte BStopMin = m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopMin;
            int Count = 0;
            for (int i=1;i<7;i++){
                byte BStartHour2 = m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartHour;
                byte BStartMin2 = m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStartMin;
                byte BStopHour2 = m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopHour;
                byte BStopMin2 = m_struRemoteRecCfg.struRecordSched[i].struRecordSched[0].struRecordTime.byStopMin;
                if (BStartHour==BStartHour2 && BStartMin==BStartMin2 && BStopHour==BStopHour2 && BStopMin==BStopMin2) Count ++;
            }
            if (Count == 6) return true;
        }catch (Exception e){
            TxtLogger.append(this.sFileName, "ifAllSame7()","系统在判断录像存储计划7天的设置是否相同过程中，出现错误"
                             + "\r\n                       Exception:" + e.toString());
        }
        return false;
    }
    
    /**
        * 函数:      getSelfDefineDayState
        * 函数描述:  从设备存储计划中读取各个控件的值
    */
    private void getSelfDefineDayState(){
        //以下是非全天录像的情况，也就是自定义模式
        //不全天录像，就是全部是不全天录像。系统暂时这样认定
        
        //星期一
        jSpinnerHour11.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute11.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour12.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute12.setValue(m_struRemoteRecCfg.struRecordSched[0].struRecordSched[0].struRecordTime.byStopMin);
        
        
        //星期二
        jSpinnerHour21.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute21.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour22.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute22.setValue(m_struRemoteRecCfg.struRecordSched[1].struRecordSched[0].struRecordTime.byStopMin);
        //星期三
        jSpinnerHour31.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute31.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour32.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute32.setValue(m_struRemoteRecCfg.struRecordSched[2].struRecordSched[0].struRecordTime.byStopMin);
        //星期四
        jSpinnerHour41.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute41.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour42.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute42.setValue(m_struRemoteRecCfg.struRecordSched[3].struRecordSched[0].struRecordTime.byStopMin);
        //星期五
        jSpinnerHour51.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute51.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour52.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute52.setValue(m_struRemoteRecCfg.struRecordSched[4].struRecordSched[0].struRecordTime.byStopMin);
        //星期六
        jSpinnerHour61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour62.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute61.setValue(m_struRemoteRecCfg.struRecordSched[5].struRecordSched[0].struRecordTime.byStopMin);
        //星期日
        jSpinnerHour71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartHour);
        jSpinnerMinute71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStartMin);
        jSpinnerHour72.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopHour);
        jSpinnerMinute71.setValue(m_struRemoteRecCfg.struRecordSched[6].struRecordSched[0].struRecordTime.byStopMin);
    }
    /**
        * 函数:      setWorkDayState
        * 函数描述:  设置全天模式下各个控件的值（时间从8点-20点）
    */
    private void setWorkDayState(){
        //星期一
        jSpinnerHour11.setValue(8);
        jSpinnerMinute11.setValue(0);
        jSpinnerHour12.setValue(20);
        jSpinnerMinute12.setValue(0);
        //星期二
        jSpinnerHour21.setValue(8);
        jSpinnerMinute21.setValue(0);
        jSpinnerHour22.setValue(20);
        jSpinnerMinute22.setValue(0);
        //星期三
        jSpinnerHour31.setValue(8);
        jSpinnerMinute31.setValue(0);
        jSpinnerHour32.setValue(20);
        jSpinnerMinute32.setValue(0);
        //星期四
        jSpinnerHour41.setValue(8);
        jSpinnerMinute41.setValue(0);
        jSpinnerHour42.setValue(20);
        jSpinnerMinute42.setValue(0);
        //星期五
        jSpinnerHour51.setValue(8);
        jSpinnerMinute51.setValue(0);
        jSpinnerHour52.setValue(20);
        jSpinnerMinute52.setValue(0);
        //星期六
        jSpinnerHour61.setValue(8);
        jSpinnerMinute61.setValue(0);
        jSpinnerHour62.setValue(20);
        jSpinnerMinute61.setValue(0);
        //星期日
        jSpinnerHour71.setValue(8);
        jSpinnerMinute71.setValue(0);
        jSpinnerHour72.setValue(20);
        jSpinnerMinute71.setValue(0);

    }
    
    /**
        * 函数:      setAllDayState
        * 函数描述:  设置全天模式下各个控件的值
    */
    private void setAllDayState(){
        //星期一
        jSpinnerHour11.setValue(0);
        jSpinnerMinute11.setValue(0);
        jSpinnerHour12.setValue(24);
        jSpinnerMinute12.setValue(0);

        //星期二
        jSpinnerHour21.setValue(0);
        jSpinnerMinute21.setValue(0);
        jSpinnerHour22.setValue(24);
        jSpinnerMinute22.setValue(0);
        //星期三
        jSpinnerHour31.setValue(0);
        jSpinnerMinute31.setValue(0);
        jSpinnerHour32.setValue(24);
        jSpinnerMinute32.setValue(0);
        //星期四
        jSpinnerHour41.setValue(0);
        jSpinnerMinute41.setValue(0);
        jSpinnerHour42.setValue(24);
        jSpinnerMinute42.setValue(0);
        //星期五
        jSpinnerHour51.setValue(0);
        jSpinnerMinute51.setValue(0);
        jSpinnerHour52.setValue(24);
        jSpinnerMinute52.setValue(0);
        //星期六
        jSpinnerHour61.setValue(0);
        jSpinnerMinute61.setValue(0);
        jSpinnerHour62.setValue(24);
        jSpinnerMinute61.setValue(0);
        //星期日
        jSpinnerHour71.setValue(0);
        jSpinnerMinute71.setValue(0);
        jSpinnerHour72.setValue(24);
        jSpinnerMinute71.setValue(0);

    }
    /**
	 * 函数:      writeRecordScheduleLog
         * 函数描述:  设备录像回放窗口的写日志函数。此函数不针对ChannelPlayBack对象
    */
    private void writeRecordScheduleLog(){
        //操作时间、日志类型、描述信息、设备序列号、分组名、节点名、接入设备序列号、接入通道、设备类型、被操作对象类型、调用的文件名
        //设置接入设备的序列号和设备资源节点
        String[] ReturnA = CommonParas.getArraysFromTreeNode(sChannelNode);//数组：设备名、接入设备名、设备资源节点名
        String SerialNoJoin = "";
        if (!ReturnA[1].equals("")) SerialNoJoin = CommonParas.getSerialNO(ReturnA[1], sFileName);
        CommonParas.SystemWriteLog("", CommonParas.LogType.LOG_OPER_CODE, sRecordParaSetup, sSerialNo, "", ReturnA[2], SerialNoJoin,"",
                                CommonParas.DVRType.DVRTYPE_ENCODINGDVR_CODE ,CommonParas.DVRResourceType.RESTYPE_ENCODINGDVR_CHANNEL_CODE, sFileName);// "设置录像参数"
        CommonParas.showMessage( sRecordParaSetup_Succ, sFileName);//"设置录像参数成功！"
    }
    /**
	 * 函数:      writeRecordScheduleErrorLog
         * 函数描述:  设备录像回放窗口的写错误日志函数。此函数不针对ChannelPlayBack对象
    */
    private void writeRecordScheduleErrorLog(){
        //写错误日志
        //操作时间、设备别名、描述信息、设备序列号、分组名、节点名、接入设备序列号、接入通道、设备类型、被操作对象类型、调用的文件名
        String[] ReturnA = CommonParas.getArraysFromTreeNode(sChannelNode);//数组：设备名、接入设备名、设备资源节点名
        String SerialNoJoin = "";
        if (!ReturnA[1].equals("")) SerialNoJoin = CommonParas.getSerialNO(ReturnA[1], sFileName);
        CommonParas.SystemWriteErrorLog("", sAnotherName, sRecordParaSetup_Fail , sSerialNo, "",ReturnA[2], SerialNoJoin,"",
                                    CommonParas.DVRType.DVRTYPE_ENCODINGDVR_CODE ,CommonParas.DVRResourceType.RESTYPE_ENCODINGDVR_CHANNEL_CODE,sFileName);//"设置录像参数失败"
        CommonParas.showErrorMessage(sRecordParaSetup_Fail , sAnotherName, sFileName);//"设置录像参数失败"
    }
    
    /**
	 * 函数:      showRecordParas
         * 函数描述:  显示设备通道录像参数
    */
    private void showRecordParas(){
        //录像参数
        jComboBoxPreRecordTime.setSelectedIndex(m_struRemoteRecCfg.dwPreRecordTime);
        jComboBoxRecordDelay.setSelectedIndex(m_struRemoteRecCfg.dwRecordTime);
        jTextFieldSaveDays.setText(m_struRemoteRecCfg.dwRecorderDuration + "");
        jCheckBoxRebundancy.setSelected((m_struRemoteRecCfg.byRedundancyRec > 0));
        jCheckBoxAudioRec.setSelected((m_struRemoteRecCfg.byAudioRec > 0));
    }
    
    /**
        * 函数:      modifyLocales
        * 函数描述:  根据系统语言设置窗口的控件信息和消息文本
    */
    private void modifyLocales(){
        
        if (CommonParas.SysParas.ifChinese) return;//如果是中文，则不做任何操作

        
        MyLocales Locales = CommonParas.SysParas.sysLocales;
        
        //信息显示
        
        sStoreType          = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sStoreType");  //录像
        sPreRecordTime      = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sPreRecordTime");  //不预录,5秒,10秒,15秒,20秒,25秒,30秒,不受限制
        sRecordDelay        = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sRecordDelay");  //5秒,10秒,30秒,1分,2分,5分,10分
        sTitle              = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sTitle");  //录像计划
        sGetRecordPara_Fail = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sGetRecordPara_Fail");  //获取录像参数失败
        sInputError         = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sInputError");  //输入有误。输入必须数字，其它字符非法！
        sDeviceRootResource = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sDeviceRootResource");  //监控点
        sHour               = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sHour");  //时
        sMinute             = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sMinute");  //分
        sRecordParaSetup    = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sRecordParaSetup");  //设置录像参数
        sRecordParaSetup_Succ = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sRecordParaSetup_Succ");  //设置录像参数成功！
        sRecordParaSetup_Fail = Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.sRecordParaSetup_Fail");  //设置录像参数失败
        
        this.setTitle(sTitle);
        jComboBoxPreRecordTime.setModel(new javax.swing.DefaultComboBoxModel(sPreRecordTime.split(",")));//不预录,5秒,10秒,15秒,20秒,25秒,30秒,不受限制
        jComboBoxRecordDelay.setModel(new javax.swing.DefaultComboBoxModel(sRecordDelay.split(",")));//5秒,10秒,30秒,1分,2分,5分,10分
        jLabelChannel.setText(" " + sDeviceRootResource);////监控点
        jLabelHour11.setText(sHour);//时
        jLabelHour12.setText(sHour);//时
        jLabelHour21.setText(sHour);//时
        jLabelHour22.setText(sHour);//时
        jLabelHour31.setText(sHour);//时
        jLabelHour32.setText(sHour);//时
        jLabelHour41.setText(sHour);//时
        jLabelHour42.setText(sHour);//时
        jLabelHour51.setText(sHour);//时
        jLabelHour52.setText(sHour);//时
        jLabelHour61.setText(sHour);//时
        jLabelHour62.setText(sHour);//时
        jLabelHour71.setText(sHour);//时
        jLabelHour72.setText(sHour);//时

        jLabelMinute11.setText(sMinute);//分
        jLabelMinute12.setText(sMinute);//分
        jLabelMinute21.setText(sMinute);//分
        jLabelMinute22.setText(sMinute);//分
        jLabelMinute31.setText(sMinute);//分
        jLabelMinute32.setText(sMinute);//分
        jLabelMinute41.setText(sMinute);//分
        jLabelMinute42.setText(sMinute);//分
        jLabelMinute51.setText(sMinute);//分
        jLabelMinute52.setText(sMinute);//分
        jLabelMinute61.setText(sMinute);//分
        jLabelMinute62.setText(sMinute);//分
        jLabelMinute71.setText(sMinute);//分
        jLabelMinute72.setText(sMinute);//分

        //标签和按钮显示
        jLabelTitle.setText(                Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelTitle"));  //录像计划高级设置
        jCheckBoxRebundancy.setText(        Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jCheckBoxRebundancy"));  //冗余录像
        jCheckBoxAudioRec.setText(          Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jCheckBoxAudioRec"));  //记录音频
        jLabelSaveTime.setText(             Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelSaveTime"));  //保存时间：
        jLabelVideoDelay.setText(           Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelVideoDelay"));  //录像延时：
        jLabelPrerecordedHours.setText(     Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelPrerecordedHours"));  //预录时间：
        jLabelDays.setText(                 Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelDays"));  //天
        jButtonSave2.setText(               Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jButtonSave2"));  //保存
        jButtonCancel2.setText(             Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jButtonCancel2"));  //取消
        jCheckBoxIfRecord.setText(          Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jCheckBoxIfRecord"));  //启用计划录像
        jButtonHighSetup.setText(           Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jButtonHighSetup"));  //高级设置
        jRadioButtonTime.setText(           Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonTime"));  //定时录像
        jRadioButtonCommandTrigger.setText( Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonCommandTrigger"));  //命令触发录像
        jRadioButtonEvent.setText(          Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonEvent"));  //事件录像
        jLabelRecordType.setText( " "+      Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelRecordType"));  // 录像类型：
        jRadioButtonAllDay.setText(         Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonAllDay"));  //全天模式
        jRadioButtonWorkDay.setText(        Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonWorkDay"));  //工作日模式
        jRadioButtonSelfDefine.setText(     Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jRadioButtonSelfDefine"));  //自定义模式
        jCheckBoxAllSame.setText(           Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jCheckBoxAllSame"));  //七天相同
        jLabelRecordMode.setText(  " "+     Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelRecordMode"));  // 录像模式：
        jLabelTimeTemplate.setText( " "+    Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelTimeTemplate"));  // 时间模板：
        jLabelWeek1.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek1"));  //星期一
        jLabelWeek2.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek2"));  //星期二
        jLabelWeek3.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek3"));  //星期三
        jLabelWeek4.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek4"));  //星期四
        jLabelWeek5.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek5"));  //星期五
        jLabelWeek6.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek6"));  //星期六
        jLabelWeek7.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jLabelWeek7"));  //星期日
        jButtonSave.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jButtonSave"));  //保存
        jButtonExit.setText(Locales.getString("JInFrameRecordSchedule", "JInFrameRecordSchedule.jButtonExit"));  //退出


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupRecordModel;
    private javax.swing.ButtonGroup buttonGroupRecordType;
    private javax.swing.JButton jButtonCancel2;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExit2;
    private javax.swing.JButton jButtonHighSetup;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSave2;
    private javax.swing.JCheckBox jCheckBoxAllSame;
    public javax.swing.JCheckBox jCheckBoxAudioRec;
    private javax.swing.JCheckBox jCheckBoxIfRecord;
    public javax.swing.JCheckBox jCheckBoxRebundancy;
    public javax.swing.JComboBox jComboBoxPreRecordTime;
    public javax.swing.JComboBox jComboBoxRecordDelay;
    private javax.swing.JDialog jDialogRecordParas;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabelChannel;
    private javax.swing.JLabel jLabelDays;
    private javax.swing.JLabel jLabelHour11;
    private javax.swing.JLabel jLabelHour12;
    private javax.swing.JLabel jLabelHour21;
    private javax.swing.JLabel jLabelHour22;
    private javax.swing.JLabel jLabelHour31;
    private javax.swing.JLabel jLabelHour32;
    private javax.swing.JLabel jLabelHour41;
    private javax.swing.JLabel jLabelHour42;
    private javax.swing.JLabel jLabelHour51;
    private javax.swing.JLabel jLabelHour52;
    private javax.swing.JLabel jLabelHour61;
    private javax.swing.JLabel jLabelHour62;
    private javax.swing.JLabel jLabelHour71;
    private javax.swing.JLabel jLabelHour72;
    private javax.swing.JLabel jLabelMinute11;
    private javax.swing.JLabel jLabelMinute12;
    private javax.swing.JLabel jLabelMinute21;
    private javax.swing.JLabel jLabelMinute22;
    private javax.swing.JLabel jLabelMinute31;
    private javax.swing.JLabel jLabelMinute32;
    private javax.swing.JLabel jLabelMinute41;
    private javax.swing.JLabel jLabelMinute42;
    private javax.swing.JLabel jLabelMinute51;
    private javax.swing.JLabel jLabelMinute52;
    private javax.swing.JLabel jLabelMinute61;
    private javax.swing.JLabel jLabelMinute62;
    private javax.swing.JLabel jLabelMinute71;
    private javax.swing.JLabel jLabelMinute72;
    private javax.swing.JLabel jLabelPrerecordedHours;
    private javax.swing.JLabel jLabelRecordMode;
    private javax.swing.JLabel jLabelRecordType;
    private javax.swing.JLabel jLabelSaveTime;
    private javax.swing.JLabel jLabelTimeTemplate;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelVideoDelay;
    private javax.swing.JLabel jLabelWeek1;
    private javax.swing.JLabel jLabelWeek2;
    private javax.swing.JLabel jLabelWeek3;
    private javax.swing.JLabel jLabelWeek4;
    private javax.swing.JLabel jLabelWeek5;
    private javax.swing.JLabel jLabelWeek6;
    private javax.swing.JLabel jLabelWeek7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelFirst;
    private javax.swing.JPanel jPanelFoot;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelLast;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRecordMode;
    private javax.swing.JPanel jPanelRecordType;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelTimeTemplate;
    private javax.swing.JPanel jPanelTimeTemplateTitle;
    private javax.swing.JPanel jPanelWeek1;
    private javax.swing.JPanel jPanelWeek2;
    private javax.swing.JPanel jPanelWeek3;
    private javax.swing.JPanel jPanelWeek4;
    private javax.swing.JPanel jPanelWeek5;
    private javax.swing.JPanel jPanelWeek6;
    private javax.swing.JPanel jPanelWeek7;
    private javax.swing.JRadioButton jRadioButtonAllDay;
    private javax.swing.JRadioButton jRadioButtonCommandTrigger;
    private javax.swing.JRadioButton jRadioButtonEvent;
    private javax.swing.JRadioButton jRadioButtonSelfDefine;
    private javax.swing.JRadioButton jRadioButtonTime;
    private javax.swing.JRadioButton jRadioButtonWorkDay;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerHour11;
    private javax.swing.JSpinner jSpinnerHour12;
    private javax.swing.JSpinner jSpinnerHour21;
    private javax.swing.JSpinner jSpinnerHour22;
    private javax.swing.JSpinner jSpinnerHour31;
    private javax.swing.JSpinner jSpinnerHour32;
    private javax.swing.JSpinner jSpinnerHour41;
    private javax.swing.JSpinner jSpinnerHour42;
    private javax.swing.JSpinner jSpinnerHour51;
    private javax.swing.JSpinner jSpinnerHour52;
    private javax.swing.JSpinner jSpinnerHour61;
    private javax.swing.JSpinner jSpinnerHour62;
    private javax.swing.JSpinner jSpinnerHour71;
    private javax.swing.JSpinner jSpinnerHour72;
    private javax.swing.JSpinner jSpinnerMinute11;
    private javax.swing.JSpinner jSpinnerMinute12;
    private javax.swing.JSpinner jSpinnerMinute21;
    private javax.swing.JSpinner jSpinnerMinute22;
    private javax.swing.JSpinner jSpinnerMinute31;
    private javax.swing.JSpinner jSpinnerMinute32;
    private javax.swing.JSpinner jSpinnerMinute41;
    private javax.swing.JSpinner jSpinnerMinute42;
    private javax.swing.JSpinner jSpinnerMinute51;
    private javax.swing.JSpinner jSpinnerMinute52;
    private javax.swing.JSpinner jSpinnerMinute61;
    private javax.swing.JSpinner jSpinnerMinute62;
    private javax.swing.JSpinner jSpinnerMinute71;
    private javax.swing.JSpinner jSpinnerMinute72;
    private javax.swing.JSplitPane jSplitPaneSchedule;
    public javax.swing.JTextField jTextFieldSaveDays;
    private javax.swing.JTree jTreeResource;
    private javax.swing.JSlider slider11;
    private javax.swing.JSlider slider12;
    private javax.swing.JSlider slider21;
    private javax.swing.JSlider slider22;
    private javax.swing.JSlider slider31;
    private javax.swing.JSlider slider32;
    private javax.swing.JSlider slider41;
    private javax.swing.JSlider slider42;
    private javax.swing.JSlider slider51;
    private javax.swing.JSlider slider52;
    private javax.swing.JSlider slider61;
    private javax.swing.JSlider slider62;
    private javax.swing.JSlider slider71;
    private javax.swing.JSlider slider72;
    // End of variables declaration//GEN-END:variables


    private String sPreRecordTime = "不预录,5秒,10秒,15秒,20秒,25秒,30秒,不受限制";
    private String sRecordDelay = "5秒,10秒,30秒,1分,2分,5分,10分";
    private String sTitle = "录像计划";
    private String sGetRecordPara_Fail = "获取录像参数失败";
    private String sInputError = "输入有误。输入必须数字，其它字符非法！";
    private String sDeviceRootResource = "监控点";
    private String sRecordParaSetup = "设置录像参数";
    private String sRecordParaSetup_Succ = "设置录像参数成功！";
    private String sRecordParaSetup_Fail = "设置录像参数失败";
    private String sHour = "时";
    private String sMinute = "分";

}
